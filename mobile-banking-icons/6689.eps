%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1410.i043.024.P.m004.c23.mobile banking icons.eps
%%Creator: Adobe Illustrator(R) 18.0
%%For: IvAN
%%CreationDate: 10/14/2014
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.0.0 x18 R agm 4.7713 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c011 79.156289, 2014/03/31-23:39:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">blank template 450x450 RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2014-10-14T22:34:03+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-10-14T22:34:04+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-10-14T22:34:04+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A45mQ1OxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kptonlu&#xA;81VJLj1EtbCFgk15NXgHbpGiqGeRz2VRlkMZl7mrJmEduZT64/LyKKAyG9ubcUFJr2wmt7epH7Uo&#xA;aQoPdlGWnT+fzDQNXZ5D4SssW1TSr7S717O9j9KdKGlQVZTurKw2ZSOhGUSiYmi5UJiQsITIsnYq&#xA;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&#xA;q//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:00c005c7-14c0-c840-9196-b4c6e8abb033</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:00c005c7-14c0-c840-9196-b4c6e8abb033</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:fe56bd32-fbaf-0c4b-b0aa-c1f301f225e7</stRef:instanceID>
            <stRef:documentID>xmp.did:fe56bd32-fbaf-0c4b-b0aa-c1f301f225e7</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9a78b452-885c-3344-91ec-db75b69c8dc2</stEvt:instanceID>
                  <stEvt:when>2014-10-10T16:25:35+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe56bd32-fbaf-0c4b-b0aa-c1f301f225e7</stEvt:instanceID>
                  <stEvt:when>2014-10-12T17:54:38+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:00c005c7-14c0-c840-9196-b4c6e8abb033</stEvt:instanceID>
                  <stEvt:when>2014-10-14T22:34:04+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.188235 .211765 .258824 rgb
f
307.214 178.311 mo
307.158 177.953 307.171 177.578 307.26 177.217 cv
307.375 176.749 307.721 175.912 308.747 175.558 cv
309.688 175.234 310.317 175.64 310.523 176.186 cv
310.758 176.808 310.474 177.699 309.296 178.186 cv
308.721 178.421 307.964 178.418 307.214 178.311 cv
cp
312.07 180.364 mo
311.99 180.166 311.766 180.068 311.566 180.151 cv
311.543 180.16 309.206 181.081 307.835 179.629 cv
307.693 179.478 307.573 179.306 307.475 179.118 cv
308.226 179.191 308.978 179.153 309.591 178.901 cv
311.173 178.249 311.622 176.903 311.247 175.912 cv
310.92 175.045 309.919 174.336 308.494 174.826 cv
307.492 175.172 306.768 175.976 306.508 177.032 cv
306.416 177.403 306.389 177.786 306.419 178.161 cv
306.11 178.09 305.818 178.008 305.551 177.928 cv
304.908 167.425 294.358 159.072 281.438 159.072 cv
278.983 159.072 276.615 159.376 274.384 159.937 cv
271.98 152.768 266.953 154.439 263.585 149.007 cv
261.596 149.707 261.523 157.994 266.1 163.597 cv
262.789 165.842 260.218 168.798 258.73 172.182 cv
253.451 173.232 li
253.451 173.153 li
253.451 172.537 252.952 172.038 252.337 172.038 cv
251.426 172.038 li
251.101 172.038 250.838 172.302 250.838 172.627 cv
250.838 185.036 li
250.838 185.361 251.101 185.624 251.426 185.624 cv
252.587 185.624 li
253.064 185.624 253.451 185.238 253.451 184.76 cv
253.451 184.629 li
258.718 185.677 li
260.25 189.18 262.946 192.223 266.419 194.498 cv
266.419 204.349 li
270.871 202.717 li
275.323 204.349 li
275.323 198.172 li
277.276 198.591 279.325 198.816 281.438 198.816 cv
283.551 198.816 285.6 198.591 287.554 198.172 cv
287.554 204.349 li
292.005 202.717 li
296.457 204.349 li
296.457 194.498 li
302.015 190.857 305.582 185.245 305.582 178.944 cv
305.582 178.877 305.577 178.81 305.576 178.743 cv
305.889 178.831 306.229 178.917 306.585 178.986 cv
306.731 179.428 306.963 179.834 307.273 180.161 cv
308.062 180.996 309.056 181.228 309.917 181.228 cv
310.952 181.228 311.795 180.893 311.858 180.867 cv
312.055 180.787 312.15 180.562 312.07 180.364 cv
cp
.937255 .67451 .0196078 rgb
f
281.438 161.367 mo
279.216 161.367 277.115 161.789 275.243 162.54 cv
275.243 164.658 li
277.115 163.906 279.215 163.482 281.438 163.482 cv
283.661 163.482 285.762 163.906 287.633 164.658 cv
287.633 162.54 li
285.762 161.789 283.66 161.367 281.438 161.367 cv
cp
.866667 .552941 0 rgb
f
267.648 172.243 mo
268.518 170.236 267.988 168.075 266.465 167.415 cv
264.943 166.756 263.004 167.847 262.134 169.854 cv
261.265 171.86 261.795 174.021 263.318 174.681 cv
264.84 175.341 266.779 174.249 267.648 172.243 cv
cp
1 1 1 rgb
f
264.333 171.086 mo
264.224 171.776 263.658 172.26 263.068 172.168 cv
262.478 172.075 262.087 171.441 262.196 170.751 cv
262.304 170.061 262.87 169.576 263.46 169.669 cv
264.05 169.762 264.441 170.396 264.333 171.086 cv
cp
.415686 .556863 .788235 rgb
f
285.969 152.606 mo
285.969 155.108 283.94 157.137 281.438 157.137 cv
278.936 157.137 276.908 155.108 276.908 152.606 cv
276.908 150.104 278.936 148.076 281.438 148.076 cv
283.94 148.076 285.969 150.104 285.969 152.606 cv
cp
.501961 .792157 .964706 rgb
f
299.066 140.751 mo
298.662 140.751 298.263 140.567 298.001 140.219 cv
294.041 134.932 288.003 131.899 281.438 131.899 cv
274.873 131.899 268.836 134.932 264.875 140.219 cv
264.434 140.803 263.602 140.928 263.015 140.487 cv
262.427 140.045 262.308 139.213 262.747 138.626 cv
267.215 132.662 274.027 129.242 281.438 129.242 cv
288.849 129.242 295.661 132.662 300.129 138.626 cv
300.569 139.213 300.449 140.045 299.862 140.487 cv
299.623 140.666 299.343 140.751 299.066 140.751 cv
cp
f
294.444 145.406 mo
294.012 145.406 293.588 145.196 293.333 144.806 cv
290.682 140.775 286.237 138.367 281.438 138.367 cv
276.64 138.367 272.194 140.775 269.544 144.806 cv
269.142 145.421 268.316 145.595 267.704 145.188 cv
267.091 144.786 266.921 143.961 267.323 143.348 cv
270.466 138.564 275.743 135.71 281.438 135.71 cv
287.133 135.71 292.41 138.564 295.553 143.348 cv
295.956 143.961 295.786 144.786 295.172 145.188 cv
294.948 145.336 294.695 145.406 294.444 145.406 cv
cp
f
272.954 149.957 mo
272.765 149.957 272.573 149.915 272.39 149.829 cv
271.727 149.518 271.441 148.727 271.753 148.063 cv
273.517 144.308 277.319 141.882 281.438 141.882 cv
285.557 141.882 289.358 144.308 291.125 148.063 cv
291.436 148.727 291.152 149.518 290.488 149.829 cv
289.821 150.141 289.033 149.853 288.72 149.194 cv
287.39 146.366 284.532 144.539 281.438 144.539 cv
278.344 144.539 275.486 146.366 274.158 149.194 cv
273.931 149.674 273.454 149.957 272.954 149.957 cv
cp
f
250.838 185.036 mo
250.838 185.361 251.101 185.624 251.426 185.624 cv
252.587 185.624 li
253.064 185.624 253.451 185.238 253.451 184.76 cv
253.451 184.629 li
258.718 185.677 li
260.25 189.18 262.946 192.223 266.419 194.498 cv
266.419 204.349 li
270.871 202.717 li
275.323 204.349 li
275.323 198.172 li
277.276 198.591 279.325 198.816 281.438 198.816 cv
283.551 198.816 285.6 198.591 287.554 198.172 cv
287.554 204.349 li
292.005 202.717 li
296.457 204.349 li
296.457 194.498 li
301.97 190.886 305.52 185.335 305.577 179.096 cv
305.577 178.771 li
305.577 178.761 305.576 178.752 305.576 178.743 cv
250.838 178.743 li
250.838 185.036 li
cp
.866667 .552941 0 rgb
f
305.577 178.743 mo
305.576 178.743 li
305.577 178.743 li
305.577 178.743 li
cp
.87451 .301961 .341176 rgb
f
68.4748 89.4711 mo
68.2839 89.4711 li
68.2839 88.3153 li
68.2839 87.8637 67.9162 87.4969 67.4648 87.4969 cv
66.3969 87.4969 li
66.3969 69.6671 li
67.2191 69.6671 li
67.8062 69.6671 68.2839 69.1893 68.2839 68.6024 cv
68.2839 67.3662 li
68.8237 66.797 69.1605 66.0331 69.1605 65.1886 cv
69.1605 63.4396 67.7376 62.0159 65.9885 62.0159 cv
56.5045 62.0159 li
54.7554 62.0159 53.3325 63.4396 53.3325 65.1886 cv
53.3325 66.0331 53.6693 66.7971 54.2091 67.3662 cv
54.2091 68.6024 li
54.2091 69.1893 54.6868 69.6671 55.2738 69.6671 cv
56.0962 69.6671 li
56.0962 87.4969 li
55.0282 87.4969 li
54.5768 87.4969 54.2091 87.8637 54.2091 88.3153 cv
54.2091 89.4711 li
54.0183 89.4711 li
53.5668 89.4711 53.1991 89.779 53.1991 90.2306 cv
53.1991 92.6557 li
69.294 92.6557 li
69.294 90.2306 li
69.294 89.779 68.9262 89.4711 68.4748 89.4711 cv
cp
.419608 .419608 .564706 rgb
f
74.241 29.7248 mo
73.9443 29.7248 73.6523 29.5897 73.4601 29.3348 cv
70.5567 25.4585 66.1306 23.235 61.3175 23.235 cv
56.5043 23.235 52.0784 25.4585 49.1748 29.3348 cv
48.8514 29.7629 48.2419 29.8541 47.811 29.5308 cv
47.3802 29.2074 47.2927 28.5968 47.6151 28.167 cv
50.8905 23.7943 55.8842 21.2873 61.3175 21.2873 cv
66.7507 21.2873 71.7446 23.7943 75.0198 28.167 cv
75.3423 28.5968 75.2548 29.2074 74.824 29.5308 cv
74.649 29.6621 74.4435 29.7248 74.241 29.7248 cv
cp
.501961 .792157 .964706 rgb
f
70.8525 33.1372 mo
70.5359 33.1372 70.2248 32.983 70.0374 32.6978 cv
68.0945 29.742 64.8354 27.9768 61.3175 27.9768 cv
57.7996 27.9768 54.5405 29.742 52.5975 32.6978 cv
52.3028 33.1486 51.6979 33.2759 51.249 32.9773 cv
50.7991 32.6826 50.6745 32.0777 50.9693 31.6289 cv
53.2737 28.1215 57.1424 26.0291 61.3175 26.0291 cv
65.4925 26.0291 69.3613 28.1215 71.6656 31.6289 cv
71.9605 32.0777 71.8358 32.6826 71.3861 32.9773 cv
71.2216 33.0858 71.0361 33.1372 70.8525 33.1372 cv
cp
f
55.0978 36.4734 mo
54.9589 36.4734 54.8182 36.4429 54.6841 36.3801 cv
54.1982 36.1519 53.9888 35.5718 54.2172 35.0849 cv
55.5105 32.3325 58.298 30.5541 61.3175 30.5541 cv
64.337 30.5541 67.1234 32.3325 68.4188 35.0849 cv
68.647 35.5718 68.4388 36.1519 67.9518 36.3801 cv
67.4631 36.6084 66.8857 36.3972 66.6556 35.9141 cv
65.6808 33.8409 63.5857 32.5019 61.3175 32.5019 cv
59.0493 32.5019 56.9541 33.8409 55.9803 35.9141 cv
55.8139 36.266 55.4639 36.4734 55.0978 36.4734 cv
cp
f
32.4361 62.4243 mo
32.4361 56.5015 li
61.247 35.463 li
90.057 56.5015 li
90.057 62.4243 li
32.4361 62.4243 li
cp
.419608 .419608 .564706 rgb
f
61.2466 35.9687 mo
32.8443 56.7087 li
32.8443 62.016 li
89.6487 62.016 li
89.6487 56.7087 li
61.2466 35.9687 li
cp
.937255 .67451 .0196078 rgb
f
38.0932 57.9323 mo
61.247 41.0254 li
84.3998 57.9323 li
38.0932 57.9323 li
cp
.866667 .552941 0 rgb
f
56.5048 88.5449 mo
65.9883 88.5449 li
65.9883 64.8414 li
56.5048 64.8414 li
56.5048 88.5449 li
cp
.937255 .67451 .0196078 rgb
f
55.3467 69.2587 mo
67.1461 69.2587 li
67.5488 69.2587 67.8753 68.9322 67.8753 68.5295 cv
67.8753 65.4807 li
67.8753 65.0779 67.5488 64.7515 67.1461 64.7515 cv
55.3469 64.7515 li
54.9442 64.7515 54.6177 65.0779 54.6177 65.4807 cv
54.6177 68.5297 li
54.6177 68.9323 54.9441 69.2587 55.3467 69.2587 cv
cp
.866667 .552941 0 rgb
f
54.6201 88.3139 mo
54.6201 88.0874 54.8038 87.9037 55.0303 87.9037 cv
67.4674 87.9032 li
67.5762 87.9032 67.6805 87.9464 67.7575 88.0234 cv
67.8344 88.1003 67.8776 88.2047 67.8776 88.3135 cv
67.8776 89.87 li
54.6201 89.8705 li
54.6201 88.3139 li
cp
f
53.61 90.3661 mo
53.61 90.0925 53.7937 89.8707 54.0202 89.8707 cv
68.4772 89.8702 li
68.586 89.8702 68.6903 89.9224 68.7673 90.0153 cv
68.8442 90.1082 68.8874 90.2342 68.8874 90.3656 cv
68.8874 92.2454 li
53.61 92.2459 li
53.61 90.3661 li
cp
.937255 .67451 .0196078 rgb
f
56.5048 62.4248 mo
65.9883 62.4248 li
67.5149 62.4248 68.7523 63.6623 68.7523 65.1887 cv
68.7523 66.7153 67.5149 67.9528 65.9883 67.9528 cv
64.4619 67.9528 63.2243 66.7153 63.2243 65.1887 cv
63.2243 65.0535 63.2452 64.9241 63.264 64.7942 cv
59.2291 64.7942 li
59.2477 64.9241 59.2689 65.0535 59.2689 65.1887 cv
59.2689 66.7153 58.0313 67.9528 56.5048 67.9528 cv
54.9781 67.9528 53.7407 66.7153 53.7407 65.1887 cv
53.7407 63.6623 54.9781 62.4248 56.5048 62.4248 cv
cp
f
55.3235 65.1887 mo
55.3235 65.841 55.8524 66.3699 56.5047 66.3699 cv
57.1571 66.3699 57.6858 65.841 57.6858 65.1887 cv
57.6858 64.5364 57.1571 64.0076 56.5047 64.0076 cv
55.8524 64.0076 55.3235 64.5364 55.3235 65.1887 cv
cp
.866667 .552941 0 rgb
f
67.1695 65.1887 mo
67.1695 65.841 66.6407 66.3699 65.9883 66.3699 cv
65.3359 66.3699 64.8072 65.841 64.8072 65.1887 cv
64.8072 64.5364 65.3359 64.0076 65.9883 64.0076 cv
66.6407 64.0076 67.1695 64.5364 67.1695 65.1887 cv
cp
f
61.2464 71.6654 mo
60.7863 71.6654 60.4134 72.0383 60.4134 72.4984 cv
60.4134 84.3594 li
60.4134 84.8195 60.7863 85.1925 61.2464 85.1925 cv
61.7066 85.1925 62.0796 84.8195 62.0796 84.3594 cv
62.0796 72.4984 li
62.0796 72.0383 61.7066 71.6654 61.2464 71.6654 cv
cp
f
64.3989 71.6654 mo
63.9389 71.6654 63.5658 72.0383 63.5658 72.4984 cv
63.5658 84.3594 li
63.5658 84.8195 63.9389 85.1925 64.3989 85.1925 cv
64.859 85.1925 65.232 84.8195 65.232 84.3594 cv
65.232 72.4984 li
65.232 72.0383 64.859 71.6654 64.3989 71.6654 cv
cp
f
58.0941 71.6654 mo
58.5542 71.6654 58.9271 72.0383 58.9271 72.4984 cv
58.9271 84.3594 li
58.9271 84.8195 58.5542 85.1925 58.0941 85.1925 cv
57.6339 85.1925 57.261 84.8195 57.261 84.3594 cv
57.261 72.4984 li
57.261 72.0383 57.6339 71.6654 58.0941 71.6654 cv
cp
f
49.3498 89.4711 mo
49.1589 89.4711 li
49.1589 88.3153 li
49.1589 87.8637 48.7912 87.4969 48.3398 87.4969 cv
47.2719 87.4969 li
47.2719 69.6671 li
48.0941 69.6671 li
48.6812 69.6671 49.1589 69.1893 49.1589 68.6024 cv
49.1589 67.3662 li
49.6987 66.797 50.0355 66.0331 50.0355 65.1886 cv
50.0355 63.4396 48.6126 62.0159 46.8635 62.0159 cv
37.3795 62.0159 li
35.6304 62.0159 34.2075 63.4396 34.2075 65.1886 cv
34.2075 66.0331 34.5443 66.7971 35.0841 67.3662 cv
35.0841 68.6024 li
35.0841 69.1893 35.5618 69.6671 36.1488 69.6671 cv
36.9712 69.6671 li
36.9712 87.4969 li
35.9032 87.4969 li
35.4518 87.4969 35.0841 87.8637 35.0841 88.3153 cv
35.0841 89.4711 li
34.8933 89.4711 li
34.4418 89.4711 34.0741 89.779 34.0741 90.2306 cv
34.0741 92.6557 li
50.169 92.6557 li
50.169 90.2306 li
50.169 89.779 49.8012 89.4711 49.3498 89.4711 cv
cp
.419608 .419608 .564706 rgb
f
37.3798 88.5449 mo
46.8633 88.5449 li
46.8633 64.8414 li
37.3798 64.8414 li
37.3798 88.5449 li
cp
.937255 .67451 .0196078 rgb
f
36.2217 69.2587 mo
48.0211 69.2587 li
48.4238 69.2587 48.7503 68.9322 48.7503 68.5295 cv
48.7503 65.4807 li
48.7503 65.0779 48.4238 64.7515 48.0211 64.7515 cv
36.2219 64.7515 li
35.8192 64.7515 35.4927 65.0779 35.4927 65.4807 cv
35.4927 68.5297 li
35.4927 68.9323 35.8191 69.2587 36.2217 69.2587 cv
cp
.866667 .552941 0 rgb
f
35.4951 88.3139 mo
35.4951 88.0874 35.6788 87.9037 35.9053 87.9037 cv
48.3424 87.9032 li
48.4512 87.9032 48.5555 87.9464 48.6325 88.0234 cv
48.7094 88.1003 48.7526 88.2047 48.7526 88.3135 cv
48.7526 89.87 li
35.4951 89.8705 li
35.4951 88.3139 li
cp
f
34.485 90.3661 mo
34.485 90.0925 34.6687 89.8707 34.8952 89.8707 cv
49.3522 89.8702 li
49.461 89.8702 49.5653 89.9224 49.6423 90.0153 cv
49.7192 90.1082 49.7624 90.2342 49.7624 90.3656 cv
49.7624 92.2454 li
34.485 92.2459 li
34.485 90.3661 li
cp
.937255 .67451 .0196078 rgb
f
37.3798 62.4248 mo
46.8633 62.4248 li
48.3899 62.4248 49.6273 63.6623 49.6273 65.1887 cv
49.6273 66.7153 48.3899 67.9528 46.8633 67.9528 cv
45.3369 67.9528 44.0993 66.7153 44.0993 65.1887 cv
44.0993 65.0535 44.1202 64.9241 44.139 64.7942 cv
40.1041 64.7942 li
40.1227 64.9241 40.1439 65.0535 40.1439 65.1887 cv
40.1439 66.7153 38.9063 67.9528 37.3798 67.9528 cv
35.8531 67.9528 34.6157 66.7153 34.6157 65.1887 cv
34.6157 63.6623 35.8531 62.4248 37.3798 62.4248 cv
cp
f
36.1985 65.1887 mo
36.1985 65.841 36.7274 66.3699 37.3797 66.3699 cv
38.0321 66.3699 38.5608 65.841 38.5608 65.1887 cv
38.5608 64.5364 38.0321 64.0076 37.3797 64.0076 cv
36.7274 64.0076 36.1985 64.5364 36.1985 65.1887 cv
cp
.866667 .552941 0 rgb
f
48.0445 65.1887 mo
48.0445 65.841 47.5157 66.3699 46.8633 66.3699 cv
46.2109 66.3699 45.6822 65.841 45.6822 65.1887 cv
45.6822 64.5364 46.2109 64.0076 46.8633 64.0076 cv
47.5157 64.0076 48.0445 64.5364 48.0445 65.1887 cv
cp
f
42.1214 71.6654 mo
41.6613 71.6654 41.2884 72.0383 41.2884 72.4984 cv
41.2884 84.3594 li
41.2884 84.8195 41.6613 85.1925 42.1214 85.1925 cv
42.5816 85.1925 42.9546 84.8195 42.9546 84.3594 cv
42.9546 72.4984 li
42.9546 72.0383 42.5816 71.6654 42.1214 71.6654 cv
cp
f
45.2739 71.6654 mo
44.8139 71.6654 44.4408 72.0383 44.4408 72.4984 cv
44.4408 84.3594 li
44.4408 84.8195 44.8139 85.1925 45.2739 85.1925 cv
45.734 85.1925 46.107 84.8195 46.107 84.3594 cv
46.107 72.4984 li
46.107 72.0383 45.734 71.6654 45.2739 71.6654 cv
cp
f
38.9691 71.6654 mo
39.4292 71.6654 39.8021 72.0383 39.8021 72.4984 cv
39.8021 84.3594 li
39.8021 84.8195 39.4292 85.1925 38.9691 85.1925 cv
38.5089 85.1925 38.136 84.8195 38.136 84.3594 cv
38.136 72.4984 li
38.136 72.0383 38.5089 71.6654 38.9691 71.6654 cv
cp
f
73.1442 89.4711 mo
73.335 89.4711 li
73.335 88.3153 li
73.335 87.8637 73.7027 87.4969 74.1541 87.4969 cv
75.2221 87.4969 li
75.2221 69.6671 li
74.3998 69.6671 li
73.8128 69.6671 73.335 69.1893 73.335 68.6024 cv
73.335 67.3662 li
72.7952 66.797 72.4584 66.0331 72.4584 65.1886 cv
72.4584 63.4396 73.8813 62.0159 75.6304 62.0159 cv
85.1144 62.0159 li
86.8636 62.0159 88.2864 63.4396 88.2864 65.1886 cv
88.2864 66.0331 87.9496 66.7971 87.4098 67.3662 cv
87.4098 68.6024 li
87.4098 69.1893 86.9322 69.6671 86.3452 69.6671 cv
85.5228 69.6671 li
85.5228 87.4969 li
86.5907 87.4969 li
87.0421 87.4969 87.4098 87.8637 87.4098 88.3153 cv
87.4098 89.4711 li
87.6007 89.4711 li
88.0521 89.4711 88.4199 89.779 88.4199 90.2306 cv
88.4199 92.6557 li
72.325 92.6557 li
72.325 90.2306 li
72.325 89.779 72.6927 89.4711 73.1442 89.4711 cv
cp
.419608 .419608 .564706 rgb
f
85.1142 88.5449 mo
75.6307 88.5449 li
75.6307 64.8414 li
85.1142 64.8414 li
85.1142 88.5449 li
cp
.937255 .67451 .0196078 rgb
f
86.272 69.2587 mo
74.4728 69.2587 li
74.0701 69.2587 73.7436 68.9322 73.7436 68.5295 cv
73.7436 65.4807 li
73.7436 65.0779 74.0701 64.7515 74.4728 64.7515 cv
86.272 64.7515 li
86.6747 64.7515 87.0012 65.0779 87.0012 65.4807 cv
87.0012 68.5295 li
87.0012 68.9322 86.6747 69.2587 86.272 69.2587 cv
cp
.866667 .552941 0 rgb
f
86.9988 88.3138 mo
86.9988 88.0873 86.8152 87.9036 86.5886 87.9036 cv
74.1515 87.9032 li
74.0427 87.9032 73.9384 87.9464 73.8615 88.0234 cv
73.7845 88.1003 73.7413 88.2047 73.7413 88.3135 cv
73.7413 89.87 li
86.9988 89.8705 li
86.9988 88.3138 li
cp
f
88.0089 90.3661 mo
88.0089 90.0925 87.8253 89.8707 87.5987 89.8707 cv
73.1417 89.8702 li
73.0329 89.8702 72.9286 89.9224 72.8517 90.0153 cv
72.7747 90.1082 72.7315 90.2342 72.7315 90.3656 cv
72.7315 92.2454 li
88.0089 92.2459 li
88.0089 90.3661 li
cp
.937255 .67451 .0196078 rgb
f
85.1142 62.4248 mo
75.6307 62.4248 li
74.104 62.4248 72.8666 63.6623 72.8666 65.1887 cv
72.8666 66.7153 74.104 67.9528 75.6307 67.9528 cv
77.1571 67.9528 78.3947 66.7153 78.3947 65.1887 cv
78.3947 65.0535 78.3737 64.9241 78.355 64.7942 cv
82.3899 64.7942 li
82.3712 64.9241 82.3501 65.0535 82.3501 65.1887 cv
82.3501 66.7153 83.5877 67.9528 85.1142 67.9528 cv
86.6408 67.9528 87.8782 66.7153 87.8782 65.1887 cv
87.8782 63.6623 86.6408 62.4248 85.1142 62.4248 cv
cp
f
86.2954 65.1887 mo
86.2954 65.841 85.7666 66.3699 85.1142 66.3699 cv
84.4618 66.3699 83.9332 65.841 83.9332 65.1887 cv
83.9332 64.5364 84.4618 64.0076 85.1142 64.0076 cv
85.7666 64.0076 86.2954 64.5364 86.2954 65.1887 cv
cp
.866667 .552941 0 rgb
f
74.4494 65.1887 mo
74.4494 65.841 74.9783 66.3699 75.6307 66.3699 cv
76.283 66.3699 76.8117 65.841 76.8117 65.1887 cv
76.8117 64.5364 76.283 64.0076 75.6307 64.0076 cv
74.9783 64.0076 74.4494 64.5364 74.4494 65.1887 cv
cp
f
80.3725 71.6654 mo
80.8326 71.6654 81.2055 72.0383 81.2055 72.4984 cv
81.2055 84.3594 li
81.2055 84.8195 80.8326 85.1925 80.3725 85.1925 cv
79.9123 85.1925 79.5394 84.8195 79.5394 84.3594 cv
79.5394 72.4984 li
79.5394 72.0383 79.9123 71.6654 80.3725 71.6654 cv
cp
f
77.22 71.6654 mo
77.6801 71.6654 78.0531 72.0383 78.0531 72.4984 cv
78.0531 84.3594 li
78.0531 84.8195 77.6801 85.1925 77.22 85.1925 cv
76.7599 85.1925 76.3869 84.8195 76.3869 84.3594 cv
76.3869 72.4984 li
76.3869 72.0383 76.7599 71.6654 77.22 71.6654 cv
cp
f
83.5248 71.6654 mo
83.0648 71.6654 82.6918 72.0383 82.6918 72.4984 cv
82.6918 84.3594 li
82.6918 84.8195 83.0648 85.1925 83.5248 85.1925 cv
83.985 85.1925 84.3579 84.8195 84.3579 84.3594 cv
84.3579 72.4984 li
84.3579 72.0383 83.985 71.6654 83.5248 71.6654 cv
cp
f
32.0264 98.2077 mo
32.0264 93.1566 li
32.0264 92.6544 32.4335 92.2474 32.9356 92.2474 cv
89.5564 92.2474 li
90.057 92.2474 90.4666 92.657 90.4666 93.1576 cv
90.4666 98.2077 li
32.0264 98.2077 li
cp
.419608 .419608 .564706 rgb
f
32.8897 92.6562 mo
89.6007 92.6561 li
89.8524 92.6561 90.0565 92.8601 90.0565 93.1119 cv
90.0565 97.7996 li
32.4339 97.7997 li
32.4339 93.1119 li
32.4339 92.8602 32.638 92.6562 32.8897 92.6562 cv
cp
.937255 .67451 .0196078 rgb
f
52.3446 56.126 mo
53.1137 56.126 53.6673 55.9757 53.6673 55.2067 cv
53.6673 54.4842 53.1602 54.2311 52.4667 54.2311 cv
51.6881 54.2311 li
51.6881 56.126 li
52.3446 56.126 li
cp
51.6881 53.2933 mo
52.3631 53.2933 li
53.0196 53.2933 53.4134 53.0208 53.4134 52.4398 cv
53.4134 51.8395 53.0108 51.6515 52.2128 51.6515 cv
51.6881 51.6515 li
51.6881 53.2933 li
cp
55.1017 55.2629 mo
55.1017 56.7166 53.9292 57.1482 52.3349 57.1482 cv
50.3091 57.1482 li
50.3091 50.6575 li
52.0818 50.6575 li
53.7798 50.6575 54.8204 51.1171 54.8204 52.3177 cv
54.8204 53.1333 54.2298 53.5745 53.6295 53.7151 cv
54.3608 53.8558 55.1017 54.2029 55.1017 55.2629 cv
cp
1 1 1 rgb
f
57.9309 51.6796 mo
57.1803 54.6723 li
58.6903 54.6723 li
57.9309 51.6796 li
cp
56.9175 55.6945 mo
56.5519 57.1482 li
55.1166 57.1482 li
57.1144 50.6575 li
58.7931 50.6575 li
60.7821 57.1482 li
59.3187 57.1482 li
58.953 55.6945 li
56.9175 55.6945 li
cp
f
64.5016 57.1482 mo
62.4379 51.9986 li
62.5126 52.5805 62.6251 53.4242 62.6251 54.6248 cv
62.6251 57.1482 li
61.378 57.1482 li
61.378 50.6575 li
63.1129 50.6575 li
65.2144 55.8166 li
65.1485 55.3754 65.0263 54.4754 65.0263 53.5086 cv
65.0263 50.6575 li
66.2744 50.6575 li
66.2744 57.1482 li
64.5016 57.1482 li
cp
f
72.8732 57.1482 mo
71.2596 57.1482 li
69.0745 53.687 li
71.2314 50.6575 li
72.7044 50.6575 li
70.5379 53.5842 li
72.8732 57.1482 li
cp
67.6393 57.1482 mo
67.6393 50.6575 li
69.0183 50.6575 li
69.0183 57.1482 li
67.6393 57.1482 li
cp
f
194.186 318.823 mo
148.227 318.823 li
145.386 318.823 143.082 316.52 143.082 313.678 cv
143.082 248.787 li
143.082 245.945 145.386 243.642 148.227 243.642 cv
194.187 243.642 li
197.028 243.642 199.332 245.945 199.332 248.787 cv
199.332 313.678 li
199.332 316.52 197.028 318.823 194.186 318.823 cv
cp
.678431 .843137 1 rgb
f
194.974 310.549 mo
147.44 310.549 li
147.44 251.916 li
194.974 251.916 li
194.974 310.549 li
cp
.360784 .482353 .682353 rgb
f
147.849 310.141 mo
147.849 252.324 li
194.565 252.324 li
194.565 310.141 li
147.849 310.141 li
cp
.501961 .792157 .964706 rgb
f
147.849 310.141 mo
147.849 252.324 li
171.411 252.324 li
171.411 310.141 li
147.849 310.141 li
cp
.411765 .741176 .933333 rgb
f
177.152 246.842 mo
165.262 246.842 li
164.754 246.842 164.343 247.254 164.343 247.762 cv
164.343 248.269 164.754 248.681 165.262 248.681 cv
177.152 248.681 li
177.66 248.681 178.071 248.269 178.071 247.762 cv
178.071 247.254 177.66 246.842 177.152 246.842 cv
cp
.360784 .482353 .682353 rgb
f
190.82 247.762 mo
190.82 248.326 191.277 248.783 191.841 248.783 cv
192.405 248.783 192.862 248.326 192.862 247.762 cv
192.862 247.198 192.405 246.74 191.841 246.74 cv
191.277 246.74 190.82 247.198 190.82 247.762 cv
cp
.235294 .207843 .207843 rgb
f
169.725 317.052 mo
168.354 317.052 167.239 315.938 167.239 314.567 cv
167.239 313.196 168.354 312.082 169.725 312.082 cv
172.689 312.082 li
174.059 312.082 175.174 313.196 175.174 314.567 cv
175.174 315.938 174.059 317.052 172.689 317.052 cv
169.725 317.052 li
cp
.360784 .482353 .682353 rgb
f
172.689 312.49 mo
169.725 312.49 li
168.578 312.49 167.648 313.42 167.648 314.567 cv
167.648 315.714 168.578 316.644 169.725 316.644 cv
172.689 316.644 li
173.836 316.644 174.766 315.714 174.766 314.567 cv
174.766 313.42 173.836 312.49 172.689 312.49 cv
cp
.509804 .635294 .843137 rgb
f
155.307 300.332 mo
155.307 279.369 li
187.614 279.369 li
187.614 300.332 li
155.307 300.332 li
cp
.419608 .419608 .564706 rgb
f
151.218 279.358 mo
151.218 275.207 li
171.411 260.462 li
191.604 275.207 li
191.604 279.358 li
151.218 279.358 li
cp
.635294 .635294 .784314 rgb
f
171.411 260.816 mo
151.504 275.352 li
151.504 279.072 li
191.318 279.072 li
191.318 275.352 li
171.411 260.816 li
cp
.772549 .772549 .917647 rgb
f
154.306 276.496 mo
171.411 264.006 li
188.516 276.496 li
154.306 276.496 li
cp
.635294 .635294 .784314 rgb
f
155.183 276.21 mo
171.411 264.36 li
187.639 276.21 li
155.183 276.21 li
cp
.772549 .772549 .917647 rgb
f
155.208 297.952 mo
155.208 280.766 li
162.428 280.766 li
162.428 297.952 li
155.208 297.952 li
cp
.635294 .635294 .784314 rgb
f
155.494 297.666 mo
162.141 297.666 li
162.141 281.052 li
155.494 281.052 li
155.494 297.666 li
cp
.772549 .772549 .917647 rgb
f
153.885 283.605 mo
153.885 281.533 li
153.885 281.074 154.257 280.703 154.715 280.703 cv
162.921 280.703 li
163.379 280.703 163.75 281.074 163.75 281.532 cv
163.75 283.605 li
163.75 284.063 163.379 284.435 162.921 284.435 cv
154.715 284.435 li
154.257 284.435 153.885 284.063 153.885 283.605 cv
cp
.635294 .635294 .784314 rgb
f
154.683 284.148 mo
162.953 284.148 li
163.235 284.148 163.464 283.919 163.464 283.637 cv
163.464 281.5 li
163.464 281.218 163.235 280.989 162.953 280.989 cv
154.683 280.989 li
154.401 280.989 154.172 281.218 154.172 281.5 cv
154.172 283.637 li
154.172 283.92 154.4 284.148 154.683 284.148 cv
cp
.772549 .772549 .917647 rgb
f
153.885 298.882 mo
153.885 297.569 li
153.885 297.217 154.171 296.931 154.523 296.931 cv
163.112 296.931 li
163.465 296.931 163.75 297.217 163.75 297.569 cv
163.75 298.882 li
153.885 298.882 li
cp
.635294 .635294 .784314 rgb
f
154.491 297.217 mo
163.144 297.217 li
163.321 297.217 163.464 297.36 163.464 297.537 cv
163.464 298.596 li
154.172 298.596 li
154.172 297.537 li
154.172 297.36 154.315 297.217 154.491 297.217 cv
cp
.772549 .772549 .917647 rgb
f
153.177 300.547 mo
153.177 299.233 li
153.177 298.881 153.463 298.596 153.815 298.596 cv
163.82 298.596 li
164.171 298.596 164.458 298.883 164.458 299.234 cv
164.458 300.547 li
153.177 300.547 li
cp
.635294 .635294 .784314 rgb
f
153.783 298.882 mo
163.852 298.882 li
164.029 298.882 164.172 299.025 164.172 299.202 cv
164.172 300.261 li
153.464 300.261 li
153.464 299.202 li
153.464 299.025 153.607 298.882 153.783 298.882 cv
cp
.772549 .772549 .917647 rgb
f
162.141 283.52 mo
160.918 283.52 159.923 282.527 159.918 281.305 cv
157.718 281.305 li
157.713 282.527 156.717 283.52 155.494 283.52 cv
154.268 283.52 153.271 282.522 153.271 281.296 cv
153.271 280.07 154.268 279.072 155.494 279.072 cv
162.141 279.072 li
163.367 279.072 164.364 280.07 164.364 281.296 cv
164.364 282.522 163.367 283.52 162.141 283.52 cv
cp
.635294 .635294 .784314 rgb
f
155.494 279.359 mo
162.141 279.359 li
163.211 279.359 164.078 280.226 164.078 281.296 cv
164.078 282.366 163.211 283.233 162.141 283.233 cv
161.071 283.233 160.204 282.366 160.204 281.296 cv
160.204 281.201 160.219 281.11 160.232 281.019 cv
157.404 281.019 li
157.417 281.11 157.432 281.201 157.432 281.296 cv
157.432 282.366 156.564 283.233 155.494 283.233 cv
154.424 283.233 153.557 282.366 153.557 281.296 cv
153.557 280.226 154.424 279.359 155.494 279.359 cv
cp
.772549 .772549 .917647 rgb
f
155.494 282.41 mo
154.88 282.41 154.38 281.91 154.38 281.296 cv
154.38 280.681 154.88 280.182 155.494 280.182 cv
156.109 280.182 156.608 280.681 156.608 281.296 cv
156.608 281.91 156.109 282.41 155.494 282.41 cv
cp
.635294 .635294 .784314 rgb
f
154.666 281.296 mo
154.666 281.753 155.037 282.124 155.494 282.124 cv
155.951 282.124 156.322 281.753 156.322 281.296 cv
156.322 280.839 155.951 280.468 155.494 280.468 cv
155.037 280.468 154.666 280.839 154.666 281.296 cv
cp
.772549 .772549 .917647 rgb
f
162.141 282.41 mo
162.756 282.41 163.255 281.91 163.255 281.296 cv
163.255 280.681 162.756 280.182 162.141 280.182 cv
161.527 280.182 161.027 280.681 161.027 281.296 cv
161.027 281.91 161.527 282.41 162.141 282.41 cv
cp
.635294 .635294 .784314 rgb
f
162.969 281.296 mo
162.969 281.753 162.598 282.124 162.141 282.124 cv
161.684 282.124 161.313 281.753 161.313 281.296 cv
161.313 280.839 161.684 280.468 162.141 280.468 cv
162.598 280.468 162.969 280.839 162.969 281.296 cv
cp
.772549 .772549 .917647 rgb
f
158.818 285.835 mo
158.495 285.835 158.234 286.097 158.234 286.419 cv
158.234 294.732 li
158.234 295.055 158.495 295.316 158.818 295.316 cv
159.14 295.316 159.402 295.055 159.402 294.732 cv
159.402 286.419 li
159.402 286.097 159.14 285.835 158.818 285.835 cv
cp
.635294 .635294 .784314 rgb
f
161.027 285.835 mo
160.705 285.835 160.443 286.097 160.443 286.419 cv
160.443 294.732 li
160.443 295.055 160.705 295.316 161.027 295.316 cv
161.35 295.316 161.611 295.055 161.611 294.732 cv
161.611 286.419 li
161.611 286.097 161.35 285.835 161.027 285.835 cv
cp
f
156.608 285.835 mo
156.931 285.835 157.192 286.097 157.192 286.419 cv
157.192 294.732 li
157.192 295.055 156.931 295.316 156.608 295.316 cv
156.286 295.316 156.024 295.055 156.024 294.732 cv
156.024 286.419 li
156.024 286.097 156.286 285.835 156.608 285.835 cv
cp
f
167.801 297.952 mo
167.801 280.766 li
175.021 280.766 li
175.021 297.952 li
167.801 297.952 li
cp
f
168.088 297.666 mo
174.735 297.666 li
174.735 281.052 li
168.088 281.052 li
168.088 297.666 li
cp
.772549 .772549 .917647 rgb
f
166.479 283.606 mo
166.479 281.533 li
166.479 281.074 166.85 280.703 167.308 280.703 cv
175.514 280.703 li
175.972 280.703 176.344 281.074 176.344 281.533 cv
176.344 283.605 li
176.344 284.063 175.972 284.435 175.514 284.435 cv
167.308 284.435 li
166.85 284.435 166.479 284.064 166.479 283.606 cv
cp
.635294 .635294 .784314 rgb
f
167.276 284.148 mo
175.546 284.148 li
175.828 284.148 176.057 283.919 176.057 283.637 cv
176.057 281.5 li
176.057 281.218 175.828 280.989 175.546 280.989 cv
167.276 280.989 li
166.994 280.989 166.765 281.218 166.765 281.5 cv
166.765 283.637 li
166.765 283.92 166.994 284.148 167.276 284.148 cv
cp
.772549 .772549 .917647 rgb
f
166.479 298.882 mo
166.479 297.569 li
166.479 297.217 166.764 296.931 167.116 296.931 cv
175.706 296.931 li
176.057 296.931 176.344 297.218 176.344 297.569 cv
176.344 298.882 li
166.479 298.882 li
cp
.635294 .635294 .784314 rgb
f
166.771 297.501 mo
166.771 297.343 166.899 297.214 167.058 297.214 cv
175.775 297.213 li
175.934 297.213 176.063 297.342 176.063 297.501 cv
176.063 298.592 li
166.771 298.592 li
166.771 297.501 li
cp
.772549 .772549 .917647 rgb
f
165.771 300.547 mo
165.771 299.233 li
165.771 298.881 166.056 298.596 166.408 298.596 cv
176.414 298.596 li
176.764 298.596 177.051 298.883 177.051 299.234 cv
177.051 300.547 li
165.771 300.547 li
cp
.635294 .635294 .784314 rgb
f
166.385 298.877 mo
176.453 298.876 li
176.63 298.876 176.773 299.019 176.773 299.196 cv
176.773 300.255 li
166.065 300.256 li
166.065 299.197 li
166.065 299.02 166.208 298.877 166.385 298.877 cv
cp
.772549 .772549 .917647 rgb
f
174.735 283.52 mo
173.512 283.52 172.516 282.527 172.511 281.305 cv
170.311 281.305 li
170.306 282.527 169.311 283.52 168.087 283.52 cv
166.862 283.52 165.864 282.522 165.864 281.296 cv
165.864 280.07 166.862 279.072 168.087 279.072 cv
174.735 279.072 li
175.961 279.072 176.958 280.07 176.958 281.296 cv
176.958 282.522 175.961 283.52 174.735 283.52 cv
cp
.635294 .635294 .784314 rgb
f
168.088 279.359 mo
174.735 279.359 li
175.804 279.359 176.672 280.226 176.672 281.296 cv
176.672 282.366 175.804 283.233 174.735 283.233 cv
173.665 283.233 172.797 282.366 172.797 281.296 cv
172.797 281.201 172.812 281.11 172.825 281.019 cv
169.997 281.019 li
170.01 281.11 170.025 281.201 170.025 281.296 cv
170.025 282.366 169.158 283.233 168.088 283.233 cv
167.018 283.233 166.15 282.366 166.15 281.296 cv
166.15 280.226 167.018 279.359 168.088 279.359 cv
cp
.772549 .772549 .917647 rgb
f
168.087 282.41 mo
167.473 282.41 166.973 281.91 166.973 281.296 cv
166.973 280.681 167.473 280.182 168.087 280.182 cv
168.702 280.182 169.202 280.681 169.202 281.296 cv
169.202 281.91 168.702 282.41 168.087 282.41 cv
cp
.635294 .635294 .784314 rgb
f
167.26 281.296 mo
167.26 281.753 167.63 282.124 168.088 282.124 cv
168.545 282.124 168.915 281.753 168.915 281.296 cv
168.915 280.839 168.545 280.468 168.088 280.468 cv
167.63 280.468 167.26 280.839 167.26 281.296 cv
cp
.772549 .772549 .917647 rgb
f
174.735 282.41 mo
175.349 282.41 175.849 281.91 175.849 281.296 cv
175.849 280.681 175.349 280.182 174.735 280.182 cv
174.12 280.182 173.621 280.681 173.621 281.296 cv
173.621 281.91 174.12 282.41 174.735 282.41 cv
cp
.635294 .635294 .784314 rgb
f
175.562 281.296 mo
175.562 281.753 175.192 282.124 174.735 282.124 cv
174.277 282.124 173.907 281.753 173.907 281.296 cv
173.907 280.839 174.277 280.468 174.735 280.468 cv
175.192 280.468 175.562 280.839 175.562 281.296 cv
cp
.772549 .772549 .917647 rgb
f
171.411 285.835 mo
171.089 285.835 170.827 286.097 170.827 286.419 cv
170.827 294.732 li
170.827 295.055 171.089 295.316 171.411 295.316 cv
171.734 295.316 171.995 295.055 171.995 294.732 cv
171.995 286.419 li
171.995 286.097 171.734 285.835 171.411 285.835 cv
cp
.635294 .635294 .784314 rgb
f
173.621 285.835 mo
173.298 285.835 173.037 286.097 173.037 286.419 cv
173.037 294.732 li
173.037 295.055 173.298 295.316 173.621 295.316 cv
173.943 295.316 174.204 295.055 174.204 294.732 cv
174.204 286.419 li
174.204 286.097 173.943 285.835 173.621 285.835 cv
cp
f
169.202 285.835 mo
169.524 285.835 169.785 286.097 169.785 286.419 cv
169.785 294.732 li
169.785 295.055 169.524 295.316 169.202 295.316 cv
168.879 295.316 168.618 295.055 168.618 294.732 cv
168.618 286.419 li
168.618 286.097 168.879 285.835 169.202 285.835 cv
cp
f
150.931 304.438 mo
150.931 300.898 li
150.931 300.546 151.216 300.261 151.568 300.261 cv
191.253 300.261 li
191.605 300.261 191.891 300.546 191.891 300.899 cv
191.891 304.438 li
150.931 304.438 li
cp
f
151.537 300.547 mo
191.285 300.547 li
191.462 300.547 191.605 300.69 191.605 300.866 cv
191.605 304.152 li
151.218 304.152 li
151.218 300.866 li
151.218 300.69 151.361 300.547 151.537 300.547 cv
cp
.772549 .772549 .917647 rgb
f
180.395 297.952 mo
180.395 280.766 li
187.614 280.766 li
187.614 297.952 li
180.395 297.952 li
cp
.635294 .635294 .784314 rgb
f
180.681 297.666 mo
187.328 297.666 li
187.328 281.052 li
180.681 281.052 li
180.681 297.666 li
cp
.772549 .772549 .917647 rgb
f
179.072 283.606 mo
179.072 281.533 li
179.072 281.074 179.443 280.703 179.901 280.703 cv
188.108 280.703 li
188.566 280.703 188.937 281.074 188.937 281.532 cv
188.937 283.605 li
188.937 284.063 188.566 284.435 188.108 284.435 cv
179.901 284.435 li
179.443 284.435 179.072 284.064 179.072 283.606 cv
cp
.635294 .635294 .784314 rgb
f
179.87 284.148 mo
188.14 284.148 li
188.422 284.148 188.65 283.92 188.65 283.637 cv
188.65 281.5 li
188.65 281.218 188.422 280.989 188.139 280.989 cv
179.87 280.989 li
179.587 280.989 179.358 281.218 179.358 281.5 cv
179.358 283.637 li
179.358 283.919 179.587 284.148 179.87 284.148 cv
cp
.772549 .772549 .917647 rgb
f
179.072 298.882 mo
179.072 297.569 li
179.072 297.217 179.357 296.931 179.709 296.931 cv
188.299 296.931 li
188.65 296.931 188.937 297.218 188.937 297.569 cv
188.937 298.882 li
179.072 298.882 li
cp
.635294 .635294 .784314 rgb
f
179.678 297.217 mo
188.331 297.217 li
188.507 297.217 188.65 297.36 188.65 297.537 cv
188.65 298.596 li
179.358 298.596 li
179.358 297.537 li
179.358 297.36 179.502 297.217 179.678 297.217 cv
cp
.772549 .772549 .917647 rgb
f
178.364 300.547 mo
178.364 299.233 li
178.364 298.881 178.649 298.596 179.001 298.596 cv
189.007 298.596 li
189.358 298.596 189.645 298.883 189.645 299.234 cv
189.645 300.547 li
178.364 300.547 li
cp
.635294 .635294 .784314 rgb
f
178.97 298.882 mo
189.039 298.882 li
189.215 298.882 189.358 299.025 189.358 299.202 cv
189.358 300.261 li
178.651 300.261 li
178.651 299.202 li
178.651 299.025 178.794 298.882 178.97 298.882 cv
cp
.772549 .772549 .917647 rgb
f
187.328 283.52 mo
186.105 283.52 185.109 282.527 185.104 281.305 cv
182.905 281.305 li
182.9 282.527 181.904 283.52 180.681 283.52 cv
179.455 283.52 178.458 282.522 178.458 281.296 cv
178.458 280.07 179.455 279.072 180.681 279.072 cv
187.328 279.072 li
188.554 279.072 189.551 280.07 189.551 281.296 cv
189.551 282.522 188.554 283.52 187.328 283.52 cv
cp
.635294 .635294 .784314 rgb
f
180.681 279.359 mo
187.328 279.359 li
188.398 279.359 189.265 280.226 189.265 281.296 cv
189.265 282.366 188.398 283.233 187.328 283.233 cv
186.258 283.233 185.391 282.366 185.391 281.296 cv
185.391 281.201 185.405 281.11 185.419 281.019 cv
182.591 281.019 li
182.604 281.11 182.618 281.201 182.618 281.296 cv
182.618 282.366 181.751 283.233 180.681 283.233 cv
179.611 283.233 178.744 282.366 178.744 281.296 cv
178.744 280.226 179.611 279.359 180.681 279.359 cv
cp
.772549 .772549 .917647 rgb
f
180.681 282.41 mo
180.067 282.41 179.567 281.91 179.567 281.296 cv
179.567 280.681 180.067 280.182 180.681 280.182 cv
181.295 280.182 181.795 280.681 181.795 281.296 cv
181.795 281.91 181.295 282.41 180.681 282.41 cv
cp
.635294 .635294 .784314 rgb
f
179.853 281.296 mo
179.853 281.753 180.224 282.124 180.681 282.124 cv
181.138 282.124 181.509 281.753 181.509 281.296 cv
181.509 280.839 181.138 280.468 180.681 280.468 cv
180.224 280.468 179.853 280.839 179.853 281.296 cv
cp
.772549 .772549 .917647 rgb
f
187.328 282.41 mo
187.942 282.41 188.442 281.91 188.442 281.296 cv
188.442 280.681 187.942 280.182 187.328 280.182 cv
186.714 280.182 186.214 280.681 186.214 281.296 cv
186.214 281.91 186.714 282.41 187.328 282.41 cv
cp
.635294 .635294 .784314 rgb
f
188.156 281.296 mo
188.156 281.753 187.785 282.124 187.328 282.124 cv
186.871 282.124 186.5 281.753 186.5 281.296 cv
186.5 280.839 186.871 280.468 187.328 280.468 cv
187.785 280.468 188.156 280.839 188.156 281.296 cv
cp
.772549 .772549 .917647 rgb
f
184.004 285.835 mo
183.682 285.835 183.421 286.097 183.421 286.419 cv
183.421 294.732 li
183.421 295.055 183.682 295.316 184.004 295.316 cv
184.327 295.316 184.588 295.055 184.588 294.732 cv
184.588 286.419 li
184.588 286.097 184.327 285.835 184.004 285.835 cv
cp
.635294 .635294 .784314 rgb
f
186.214 285.835 mo
185.891 285.835 185.63 286.097 185.63 286.419 cv
185.63 294.732 li
185.63 295.055 185.891 295.316 186.214 295.316 cv
186.537 295.316 186.798 295.055 186.798 294.732 cv
186.798 286.419 li
186.798 286.097 186.537 285.835 186.214 285.835 cv
cp
f
181.795 285.835 mo
182.118 285.835 182.379 286.097 182.379 286.419 cv
182.379 294.732 li
182.379 295.055 182.118 295.316 181.795 295.316 cv
181.473 295.316 181.211 295.055 181.211 294.732 cv
181.211 286.419 li
181.211 286.097 181.473 285.835 181.795 285.835 cv
cp
f
172.871 273.212 mo
172.871 273.656 173.009 274.122 173.559 274.122 cv
174.11 274.122 174.237 273.667 174.237 273.212 cv
174.237 272.767 174.11 272.322 173.559 272.322 cv
173.009 272.322 172.871 272.767 172.871 273.212 cv
cp
175.444 273.212 mo
175.444 274.387 174.619 275.118 173.559 275.118 cv
172.501 275.118 171.664 274.387 171.664 273.212 cv
171.664 272.047 172.501 271.317 173.559 271.317 cv
174.619 271.317 175.444 272.047 175.444 273.212 cv
cp
169.282 275.361 mo
168.255 274.705 li
173.157 267.314 li
174.184 267.971 li
169.282 275.361 li
cp
168.159 269.538 mo
168.159 269.982 168.297 270.438 168.848 270.438 cv
169.398 270.438 169.525 269.993 169.525 269.538 cv
169.525 269.093 169.398 268.638 168.848 268.638 cv
168.297 268.638 168.159 269.082 168.159 269.538 cv
cp
170.732 269.538 mo
170.732 270.702 169.907 271.443 168.848 271.443 cv
167.799 271.443 166.963 270.702 166.963 269.538 cv
166.963 268.373 167.799 267.631 168.848 267.631 cv
169.907 267.631 170.732 268.373 170.732 269.538 cv
cp
.937255 .67451 .0196078 rgb
f
99.7759 198.662 mo
22.8383 198.662 li
21.5834 198.662 20.41 198.432 20.41 197.177 cv
20.41 194.958 li
102.085 194.958 li
102.085 197.395 li
102.085 198.65 101.031 198.662 99.7759 198.662 cv
cp
.592157 .686275 .737255 rgb
f
91.165 142.554 mo
31.3281 142.554 li
30.7022 142.554 30.1948 143.061 30.1948 143.687 cv
30.1948 185.099 li
92.2983 185.099 li
92.2983 143.687 li
92.2983 143.061 91.7909 142.554 91.165 142.554 cv
cp
f
33.0902 182.454 mo
33.0902 145.198 li
89.4025 145.198 li
89.4025 182.454 li
33.0902 182.454 li
cp
.352941 .372549 .470588 rgb
f
33.499 182.045 mo
33.499 145.607 li
88.9938 145.607 li
88.9938 182.045 li
33.499 182.045 li
cp
.501961 .792157 .964706 rgb
f
33.499 182.045 mo
33.499 145.607 li
61.308 145.607 li
61.308 182.045 li
33.499 182.045 li
cp
.411765 .741176 .933333 rgb
f
30.2129 185.099 mo
20.5893 194.5 li
20.0042 195.287 20.8837 195.941 22.5673 195.941 cv
99.9258 195.941 li
101.61 195.941 102.489 195.287 101.904 194.5 cv
92.2804 185.099 li
30.2129 185.099 li
cp
.729412 .831373 .886275 rgb
f
72.8581 194.102 mo
72.8758 194.14 72.7595 194.171 72.5971 194.171 cv
46.0279 194.171 li
45.8695 194.171 45.753 194.14 45.7708 194.102 cv
47.3279 190.759 li
47.3418 190.729 47.4684 190.705 47.6079 190.705 cv
71.0176 190.705 li
71.1607 190.705 71.2872 190.729 71.3011 190.759 cv
72.8581 194.102 li
cp
.509804 .6 .654902 rgb
f
35.0506 186.398 mo
31.0931 186.398 li
31.6189 185.999 li
35.5028 185.999 li
35.0506 186.398 li
cp
f
43.1414 186.398 mo
39.1843 186.398 li
39.5595 185.999 li
43.4427 185.999 li
43.1414 186.398 li
cp
f
47.9975 186.398 mo
44.039 186.398 li
44.3236 185.999 li
48.2085 185.999 li
47.9975 186.398 li
cp
f
52.8524 186.398 mo
48.8943 186.398 li
49.0886 185.999 li
52.9727 185.999 li
52.8524 186.398 li
cp
f
57.7057 186.398 mo
53.749 186.398 li
53.8528 185.999 li
57.7357 185.999 li
57.7057 186.398 li
cp
f
62.561 186.398 mo
58.6043 186.398 li
58.6176 185.999 li
62.5006 185.999 li
62.561 186.398 li
cp
f
67.4159 186.398 mo
63.4582 186.398 li
63.381 185.999 li
67.2649 185.999 li
67.4159 186.398 li
cp
f
72.271 186.398 mo
68.313 186.398 li
68.1453 185.999 li
72.0297 185.999 li
72.271 186.398 li
cp
f
42.5935 187.122 mo
38.5024 187.122 li
38.9025 186.697 li
42.915 186.697 li
42.5935 187.122 li
cp
f
47.6142 187.122 mo
43.5215 187.122 li
43.8252 186.697 li
47.8391 186.697 li
47.6142 187.122 li
cp
f
52.6334 187.122 mo
48.5414 187.122 li
48.7485 186.697 li
52.762 186.697 li
52.6334 187.122 li
cp
f
57.6514 187.122 mo
53.5606 187.122 li
53.6712 186.697 li
57.6833 186.697 li
57.6514 187.122 li
cp
f
62.671 187.122 mo
58.5802 187.122 li
58.5944 186.697 li
62.6066 186.697 li
62.671 187.122 li
cp
f
69.3275 187.122 mo
63.5986 187.122 li
63.5161 186.697 li
69.135 186.697 li
69.3275 187.122 li
cp
f
72.9658 187.544 mo
68.7955 187.544 li
68.4389 186.697 li
72.4525 186.697 li
72.9658 187.544 li
cp
f
42.0067 187.897 mo
37.772 187.897 li
38.201 187.442 li
42.3514 187.442 li
42.0067 187.897 li
cp
f
47.2036 187.897 mo
42.9673 187.897 li
43.2928 187.442 li
47.4448 187.442 li
47.2036 187.897 li
cp
f
52.3989 187.897 mo
48.1633 187.897 li
48.3853 187.442 li
52.5367 187.442 li
52.3989 187.897 li
cp
f
57.5929 187.897 mo
53.3586 187.897 li
53.4772 187.442 li
57.6272 187.442 li
57.5929 187.897 li
cp
f
62.7887 187.897 mo
58.5545 187.897 li
58.5696 187.442 li
62.7195 187.442 li
62.7887 187.897 li
cp
f
67.9842 187.897 mo
63.7489 187.897 li
63.6606 187.442 li
67.8116 187.442 li
67.9842 187.897 li
cp
f
73.18 187.897 mo
68.9443 187.897 li
68.7525 187.442 li
72.9038 187.442 li
73.18 187.897 li
cp
f
41.3776 188.729 mo
36.9891 188.729 li
37.4492 188.24 li
41.7473 188.24 li
41.3776 188.729 li
cp
f
46.7634 188.729 mo
42.3732 188.729 li
42.7222 188.24 li
47.022 188.24 li
46.7634 188.729 li
cp
f
52.1477 188.729 mo
47.758 188.729 li
47.9962 188.24 li
52.2953 188.24 li
52.1477 188.729 li
cp
f
57.5303 188.729 mo
53.1422 188.729 li
53.2693 188.24 li
57.5669 188.24 li
57.5303 188.729 li
cp
f
62.9151 188.729 mo
58.5268 188.729 li
58.5431 188.24 li
62.8408 188.24 li
62.9151 188.729 li
cp
f
68.2993 188.729 mo
63.91 188.729 li
63.8153 188.24 li
68.1141 188.24 li
68.2993 188.729 li
cp
f
73.684 188.729 mo
69.2942 188.729 li
69.0886 188.24 li
73.3879 188.24 li
73.684 188.729 li
cp
f
80.2547 186.398 mo
76.2969 186.398 li
75.9804 185.999 li
79.8643 185.999 li
80.2547 186.398 li
cp
f
85.1097 186.398 mo
81.1522 186.398 li
80.7452 185.999 li
84.6291 185.999 li
85.1097 186.398 li
cp
f
89.9632 186.398 mo
86.0066 186.398 li
85.5092 185.999 li
89.392 185.999 li
89.9632 186.398 li
cp
f
80.9638 187.122 mo
76.8721 187.122 li
76.5346 186.697 li
80.5478 186.697 li
80.9638 187.122 li
cp
f
85.9835 187.122 mo
81.8919 187.122 li
81.458 186.697 li
85.471 186.697 li
85.9835 187.122 li
cp
f
91.0013 187.122 mo
86.9107 187.122 li
86.3802 186.697 li
90.3923 186.697 li
91.0013 187.122 li
cp
f
81.5389 187.709 mo
77.3384 187.709 li
76.9826 187.261 li
81.1001 187.261 li
81.5389 187.709 li
cp
f
86.6918 187.709 mo
82.4914 187.709 li
82.034 187.261 li
86.1514 187.261 li
86.6918 187.709 li
cp
f
91.8429 187.709 mo
87.6435 187.709 li
87.0844 187.261 li
91.2007 187.261 li
91.8429 187.709 li
cp
f
88.8358 189.485 mo
84.3067 189.485 li
83.7758 188.966 li
88.2089 188.966 li
88.8358 189.485 li
cp
f
83.9861 190.207 mo
79.3232 190.207 li
78.8853 189.656 li
83.4461 189.656 li
83.9861 190.207 li
cp
f
65.3232 190.028 mo
40.3269 190.028 li
40.9388 189.223 li
65.1297 189.223 li
65.3232 190.028 li
cp
f
74.4718 190.028 mo
66.9217 190.028 li
66.6766 189.223 li
73.9836 189.223 li
74.4718 190.028 li
cp
f
38.4799 190.028 mo
30.9291 190.028 li
31.8437 189.223 li
39.1513 189.223 li
38.4799 190.028 li
cp
f
89.7065 190.207 mo
85.0437 190.207 li
84.4805 189.656 li
89.0415 189.656 li
89.7065 190.207 li
cp
f
95.4247 190.207 mo
90.763 190.207 li
90.0748 189.656 li
94.6345 189.656 li
95.4247 190.207 li
cp
f
62.1289 143.877 mo
62.1289 144.33 61.7614 144.697 61.308 144.697 cv
60.8546 144.697 60.4872 144.33 60.4872 143.877 cv
60.4872 143.423 60.8546 143.056 61.308 143.056 cv
61.7614 143.056 62.1289 143.423 62.1289 143.877 cv
cp
.235294 .207843 .207843 rgb
f
51.7611 167.441 mo
51.7611 164.446 li
52.7168 165.039 52.7222 165.698 52.7222 166.069 cv
52.7222 166.623 52.343 167.113 51.7611 167.441 cv
cp
50.1071 167.855 mo
50.0194 167.855 49.9332 167.846 49.8463 167.841 cv
49.8463 163.707 li
49.9501 163.738 50.0536 163.77 50.1606 163.8 cv
50.1599 163.804 li
50.5194 163.899 50.8236 164.003 51.0893 164.111 cv
51.0893 167.722 li
50.7854 167.806 50.4548 167.855 50.1071 167.855 cv
cp
48.2253 160.006 mo
48.2253 159.299 48.6232 158.829 49.1744 158.56 cv
49.1744 161.451 li
48.499 161.102 48.2253 160.665 48.2253 160.006 cv
cp
50.4411 158.284 mo
50.6659 158.284 50.8792 158.291 51.0893 158.303 cv
51.0893 162.118 li
50.8367 162.035 50.5913 161.959 50.3607 161.889 cv
50.1746 161.838 50.0049 161.786 49.8463 161.733 cv
49.8463 158.345 li
50.0411 158.309 50.24 158.284 50.4411 158.284 cv
cp
54.8951 166.069 mo
54.8951 163.941 53.3156 162.953 51.7611 162.356 cv
51.7611 158.371 li
52.397 158.466 53.0435 158.659 53.8618 159.038 cv
54.543 159.352 li
54.543 157.492 li
54.2774 157.359 li
53.7322 157.086 53.0076 156.811 51.7611 156.696 cv
51.7611 155.283 li
51.0893 155.283 li
51.0893 156.653 li
50.8888 156.645 50.6828 156.639 50.4585 156.639 cv
50.2458 156.639 50.043 156.649 49.8463 156.665 cv
49.8463 155.299 li
49.1744 155.299 li
49.1744 156.758 li
47.0097 157.172 46.0057 158.623 46.0057 159.99 cv
46.0057 161.872 47.2394 162.814 49.1744 163.49 cv
49.1744 167.764 li
48.1964 167.582 47.3289 167.149 46.7713 166.736 cv
46.0057 166.17 li
46.0057 168.428 li
46.2145 168.571 li
46.5895 168.828 47.5625 169.369 49.1744 169.53 cv
49.1744 170.952 li
49.8463 170.952 li
49.8463 169.57 li
49.9348 169.572 50.0153 169.58 50.1071 169.58 cv
50.4297 169.58 50.7601 169.558 51.0893 169.516 cv
51.0893 170.936 li
51.7611 170.936 li
51.7611 169.401 li
53.429 169.025 54.8951 168.022 54.8951 166.069 cv
cp
.419608 .419608 .564706 rgb
f
75.8287 167.118 mo
74.8845 167.883 73.9443 168.255 72.897 168.255 cv
71.8397 168.255 69.5363 167.885 69.0033 164.827 cv
74.8266 164.827 li
74.8266 164.155 li
68.9197 164.155 li
68.9046 163.965 68.8904 163.774 68.8879 163.567 cv
68.8964 163.335 68.919 163.122 68.9428 162.912 cv
74.816 162.912 li
74.816 162.24 li
69.0506 162.24 li
69.7646 158.82 72.5986 158.7 72.9552 158.7 cv
74.0226 158.7 74.9982 159.096 75.8126 159.483 cv
76.4986 159.81 li
76.4986 157.719 li
76.1553 157.617 li
75.3683 157.383 74.1799 157.071 72.9552 157.071 cv
69.6177 157.071 67.2473 159.098 66.7293 162.24 cv
64.6601 162.24 li
64.6601 162.912 li
66.648 162.912 li
66.6314 163.128 66.6208 163.347 66.6208 163.572 cv
66.6235 163.771 66.6372 163.963 66.653 164.155 cv
64.6707 164.155 li
64.6707 164.827 li
66.7371 164.827 li
67.27 167.984 69.6424 170.028 72.9552 170.028 cv
74.6155 170.028 75.8253 169.377 76.3995 168.988 cv
76.6103 168.846 li
76.6103 166.484 li
75.8287 167.118 li
cp
f
70.2962 156.542 mo
70.2962 150.368 li
69.0153 151.731 li
65.7355 147.986 56.3768 147.986 53.1523 154.297 cv
57.0486 151.092 61.9313 151.092 65.7355 154.896 cv
64.491 156.542 li
70.2962 156.542 li
cp
1 1 1 rgb
f
53.1523 171.11 mo
53.1523 177.284 li
54.4331 175.922 li
57.7128 179.666 67.0717 179.666 70.2962 173.356 cv
66.3998 176.561 61.5171 176.561 57.7128 172.757 cv
58.9574 171.11 li
53.1523 171.11 li
cp
f
312.919 302.876 mo
250.017 302.876 li
248.612 302.876 247.472 301.737 247.472 300.332 cv
247.472 251.806 li
247.472 250.401 248.612 249.262 250.017 249.262 cv
312.919 249.262 li
314.325 249.262 315.464 250.401 315.464 251.806 cv
315.464 300.331 li
315.464 301.737 314.325 302.876 312.919 302.876 cv
cp
.729412 .831373 .886275 rgb
f
309.949 295.472 mo
252.987 295.472 li
252.681 295.472 252.433 295.224 252.433 294.918 cv
252.433 253.818 li
252.433 253.512 252.681 253.264 252.987 253.264 cv
309.949 253.264 li
310.255 253.264 310.503 253.512 310.503 253.818 cv
310.503 294.918 li
310.503 295.224 310.255 295.472 309.949 295.472 cv
cp
.592157 .686275 .737255 rgb
f
252.842 294.963 mo
252.842 253.772 li
252.842 253.717 252.886 253.673 252.941 253.673 cv
309.995 253.673 li
310.049 253.673 310.094 253.717 310.094 253.772 cv
310.094 294.964 li
310.094 295.019 310.049 295.064 309.994 295.064 cv
252.942 295.064 li
252.887 295.064 252.842 295.018 252.842 294.963 cv
cp
.501961 .792157 .964706 rgb
f
252.842 294.993 mo
252.842 253.743 li
252.842 253.704 252.873 253.673 252.912 253.673 cv
281.494 253.673 li
281.532 253.673 281.564 253.704 281.564 253.743 cv
281.564 294.993 li
281.564 295.032 281.532 295.064 281.493 295.064 cv
252.913 295.064 li
252.874 295.064 252.842 295.032 252.842 294.993 cv
cp
.411765 .741176 .933333 rgb
f
287.422 302.876 mo
281.468 302.876 li
275.514 302.876 li
275.514 306.635 272.596 308.75 266.74 309.827 cv
281.468 309.827 li
296.196 309.827 li
290.34 308.75 287.422 306.635 287.422 302.876 cv
cp
.592157 .686275 .737255 rgb
f
302.934 312.177 mo
302.934 310.879 301.882 309.827 300.583 309.827 cv
262.353 309.827 li
261.055 309.827 260.002 310.879 260.002 312.177 cv
302.934 312.177 li
cp
.729412 .831373 .886275 rgb
f
310.219 299.859 mo
307.955 299.859 li
307.955 298.429 li
310.219 298.429 li
310.219 299.859 li
cp
.270588 .807843 .627451 rgb
f
293.562 286.941 mo
269.565 286.941 li
268.27 286.941 267.219 285.89 267.219 284.595 cv
267.219 260.598 li
267.219 259.302 268.27 258.252 269.565 258.252 cv
293.562 258.252 li
294.858 258.252 295.909 259.302 295.909 260.598 cv
295.909 284.595 li
295.909 285.89 294.858 286.941 293.562 286.941 cv
cp
.937255 .67451 .0196078 rgb
f
294.161 284.789 mo
294.161 260.404 li
294.161 260.18 293.98 259.999 293.757 259.999 cv
269.371 259.999 li
269.148 259.999 268.967 260.18 268.967 260.404 cv
268.967 284.789 li
268.967 285.012 269.148 285.193 269.371 285.193 cv
293.756 285.193 li
293.98 285.193 294.161 285.012 294.161 284.789 cv
cp
268.676 284.757 mo
268.676 260.436 li
268.676 260.034 269.001 259.708 269.404 259.708 cv
293.724 259.708 li
294.126 259.708 294.452 260.034 294.452 260.436 cv
294.452 284.756 li
294.452 285.159 294.126 285.485 293.724 285.485 cv
269.404 285.485 li
269.001 285.485 268.676 285.159 268.676 284.757 cv
cp
.866667 .552941 0 rgb
f
292.826 266.771 mo
292.826 262.256 li
294.962 262.256 li
294.962 266.771 li
292.826 266.771 li
cp
f
294.671 266.48 mo
293.117 266.48 li
293.117 262.548 li
294.671 262.548 li
294.671 266.48 li
cp
.937255 .67451 .0196078 rgb
f
292.826 283.519 mo
292.826 279.004 li
294.962 279.004 li
294.962 283.519 li
292.826 283.519 li
cp
.866667 .552941 0 rgb
f
294.671 283.227 mo
293.117 283.227 li
293.117 279.295 li
294.671 279.295 li
294.671 283.227 li
cp
.937255 .67451 .0196078 rgb
f
281.564 280.582 mo
277.161 280.582 273.578 276.999 273.578 272.596 cv
273.578 268.193 277.161 264.611 281.564 264.611 cv
285.967 264.611 289.549 268.193 289.549 272.596 cv
289.549 276.999 285.967 280.582 281.564 280.582 cv
cp
.866667 .552941 0 rgb
f
289.258 272.596 mo
289.258 276.846 285.813 280.29 281.564 280.29 cv
277.315 280.29 273.87 276.846 273.87 272.596 cv
273.87 268.347 277.315 264.902 281.564 264.902 cv
285.813 264.902 289.258 268.347 289.258 272.596 cv
cp
.729412 .831373 .886275 rgb
f
286.998 272.596 mo
286.998 275.597 284.565 278.03 281.564 278.03 cv
278.563 278.03 276.13 275.597 276.13 272.596 cv
276.13 269.595 278.563 267.162 281.564 267.162 cv
284.565 267.162 286.998 269.595 286.998 272.596 cv
cp
.419608 .419608 .564706 rgb
f
282.098 266.237 mo
282.098 266.532 281.859 266.771 281.564 266.771 cv
281.269 266.771 281.03 266.532 281.03 266.237 cv
281.03 265.942 281.269 265.703 281.564 265.703 cv
281.859 265.703 282.098 265.942 282.098 266.237 cv
cp
.0235294 .0235294 .0235294 rgb
f
281.839 267.315 mo
281.289 267.315 li
281.289 268.928 li
281.839 268.928 li
281.839 267.315 li
cp
.729412 .831373 .886275 rgb
f
278.682 268.162 mo
278.237 268.486 li
279.185 269.79 li
279.63 269.467 li
278.682 268.162 li
cp
f
276.627 270.703 mo
276.457 271.226 li
277.99 271.724 li
278.16 271.201 li
276.627 270.703 li
cp
f
276.457 273.967 mo
276.627 274.49 li
278.16 273.991 li
277.99 273.468 li
276.457 273.967 li
cp
f
278.237 276.707 mo
278.682 277.03 li
279.63 275.726 li
279.185 275.403 li
278.237 276.707 li
cp
f
281.289 277.877 mo
281.839 277.877 li
281.839 276.265 li
281.289 276.265 li
281.289 277.877 li
cp
f
284.445 277.03 mo
284.89 276.707 li
283.943 275.403 li
283.498 275.726 li
284.445 277.03 li
cp
f
286.501 274.49 mo
286.671 273.967 li
285.138 273.468 li
284.968 273.991 li
286.501 274.49 li
cp
f
286.671 271.226 mo
286.501 270.703 li
284.968 271.201 li
285.138 271.724 li
286.671 271.226 li
cp
f
284.89 268.486 mo
284.445 268.162 li
283.498 269.467 li
283.943 269.79 li
284.89 268.486 li
cp
f
294.744 264.659 mo
293.045 264.659 li
293.045 264.368 li
294.744 264.368 li
294.744 264.659 li
cp
.866667 .552941 0 rgb
f
294.744 263.64 mo
293.045 263.64 li
293.045 263.349 li
294.744 263.349 li
294.744 263.64 li
cp
f
294.744 265.387 mo
293.045 265.387 li
293.045 265.679 li
294.744 265.679 li
294.744 265.387 li
cp
f
294.744 281.407 mo
293.045 281.407 li
293.045 281.116 li
294.744 281.116 li
294.744 281.407 li
cp
f
294.744 280.387 mo
293.045 280.387 li
293.045 280.096 li
294.744 280.096 li
294.744 280.387 li
cp
f
294.744 282.135 mo
293.045 282.135 li
293.045 282.426 li
294.744 282.426 li
294.744 282.135 li
cp
f
273.044 287.888 mo
269.841 287.888 li
269.841 286.941 li
273.044 286.941 li
273.044 287.888 li
cp
f
290.083 287.888 mo
293.287 287.888 li
293.287 286.941 li
290.083 286.941 li
290.083 287.888 li
cp
f
272.115 272.596 mo
272.115 271.993 271.626 271.503 271.022 271.503 cv
270.419 271.503 269.929 271.993 269.929 272.596 cv
269.929 273.066 270.23 273.459 270.646 273.613 cv
270.472 274.805 li
271.022 274.805 li
271.573 274.805 li
271.399 273.613 li
271.815 273.459 272.115 273.066 272.115 272.596 cv
cp
.0235294 .0235294 .0235294 rgb
f
329.428 381.185 mo
329.219 380.976 329.107 380.674 329.152 380.358 cv
329.84 375.564 328.282 370.862 324.879 367.458 cv
321.476 364.055 316.774 362.497 311.98 363.185 cv
311.448 363.259 310.953 362.893 310.877 362.359 cv
310.801 361.826 311.171 361.333 311.702 361.257 cv
317.11 360.481 322.414 362.239 326.256 366.081 cv
330.098 369.923 331.857 375.227 331.081 380.635 cv
331.005 381.167 330.511 381.536 329.978 381.46 cv
329.761 381.43 329.572 381.329 329.428 381.185 cv
cp
1 .623529 .00784314 rgb
f
324.619 381.202 mo
324.395 380.978 324.284 380.649 324.354 380.315 cv
325.07 376.851 324.014 373.299 321.526 370.811 cv
319.039 368.324 315.486 367.267 312.022 367.983 cv
311.495 368.094 310.977 367.756 310.871 367.227 cv
310.761 366.701 311.101 366.185 311.626 366.076 cv
315.736 365.225 319.951 366.482 322.903 369.434 cv
325.855 372.386 327.112 376.601 326.261 380.711 cv
326.152 381.237 325.636 381.576 325.11 381.467 cv
324.917 381.427 324.749 381.332 324.619 381.202 cv
cp
f
311.12 372.421 mo
311.022 372.323 310.944 372.202 310.893 372.063 cv
310.711 371.558 310.973 370.999 311.479 370.816 cv
314.34 369.785 317.568 370.498 319.704 372.633 cv
321.839 374.769 322.551 377.996 321.521 380.859 cv
321.338 381.364 320.781 381.627 320.275 381.444 cv
319.768 381.26 319.509 380.703 319.688 380.198 cv
320.465 378.043 319.93 375.615 318.326 374.011 cv
316.722 372.407 314.294 371.872 312.139 372.65 cv
311.773 372.781 311.379 372.68 311.12 372.421 cv
cp
f
317.535 418.701 mo
317.535 419.741 316.692 420.585 315.652 420.585 cv
255.826 420.585 li
254.786 420.585 253.943 419.741 253.943 418.701 cv
253.943 376.736 li
253.943 375.696 254.786 374.853 255.826 374.853 cv
315.652 374.853 li
316.692 374.853 317.535 375.696 317.535 376.736 cv
317.535 418.701 li
cp
.501961 .792157 .964706 rgb
f
285.739 374.853 mo
255.826 374.853 li
254.786 374.853 253.943 375.696 253.943 376.736 cv
253.943 418.701 li
253.943 419.741 254.786 420.584 255.826 420.584 cv
285.739 420.584 li
285.739 374.853 li
cp
.411765 .741176 .933333 rgb
f
317.531 393.481 mo
253.939 393.485 li
253.94 384.452 li
317.53 384.45 li
317.531 393.481 li
cp
.419608 .419608 .564706 rgb
f
299.207 407.916 mo
255.025 407.92 li
255.023 396.998 li
299.207 396.996 li
299.207 407.916 li
cp
1 1 1 rgb
f
299.208 397.879 mo
255.025 397.88 li
255.023 396.998 li
299.207 396.996 li
299.208 397.879 li
cp
.976471 .945098 .478431 rgb
f
299.209 401.228 mo
255.023 401.224 li
255.025 400.345 li
299.207 400.345 li
299.209 401.228 li
cp
f
299.209 404.578 mo
255.024 404.571 li
255.026 403.694 li
299.21 403.691 li
299.209 404.578 li
cp
f
299.207 407.916 mo
255.025 407.92 li
255.025 407.04 li
299.208 407.038 li
299.207 407.916 li
cp
f
264.152 414.481 mo
256.776 414.481 li
256.776 413.65 li
264.154 413.651 li
264.152 414.481 li
cp
1 1 1 rgb
f
284.646 416.141 mo
277.27 416.141 li
277.269 415.31 li
284.647 415.311 li
284.646 416.141 li
cp
f
260 416.141 mo
256.775 416.142 li
256.773 415.309 li
259.999 415.31 li
260 416.141 li
cp
f
264.691 416.142 mo
261.464 416.142 li
261.462 415.311 li
264.689 415.309 li
264.691 416.142 li
cp
f
261.613 417.642 mo
258.386 417.642 li
258.388 416.814 li
261.615 416.815 li
261.613 417.642 li
cp
f
268.187 414.481 mo
265.421 414.481 li
265.421 413.65 li
268.187 413.65 li
268.187 414.481 li
cp
f
270.569 414.481 mo
269.533 414.481 li
269.533 413.651 li
270.568 413.65 li
270.569 414.481 li
cp
f
264.879 417.643 mo
262.114 417.643 li
262.113 416.812 li
264.883 416.814 li
264.879 417.643 li
cp
f
267.264 417.644 mo
266.226 417.644 li
266.228 416.816 li
267.26 416.812 li
267.264 417.644 li
cp
f
272.184 414.48 mo
271.147 414.482 li
271.146 413.649 li
272.182 413.65 li
272.184 414.48 li
cp
f
257.81 417.642 mo
256.773 417.641 li
256.775 416.814 li
257.812 416.814 li
257.81 417.642 li
cp
f
283.635 414.482 mo
282.597 414.482 li
282.597 413.651 li
283.635 413.65 li
283.635 414.482 li
cp
f
275.911 414.482 mo
272.988 414.48 li
272.99 413.652 li
275.911 413.65 li
275.911 414.482 li
cp
f
266.456 416.141 mo
265.419 416.14 li
265.418 415.309 li
266.455 415.31 li
266.456 416.141 li
cp
f
270.185 416.141 mo
267.265 416.142 li
267.265 415.311 li
270.184 415.31 li
270.185 416.141 li
cp
f
281.865 414.481 mo
276.909 414.48 li
276.912 413.651 li
281.863 413.649 li
281.865 414.481 li
cp
f
277.269 417.642 mo
273.737 417.644 li
273.734 416.814 li
277.27 416.813 li
277.269 417.642 li
cp
f
276.619 416.141 mo
271.666 416.142 li
271.665 415.311 li
276.621 415.311 li
276.619 416.141 li
cp
f
284.648 417.643 mo
278.159 417.644 li
278.16 416.814 li
284.645 416.814 li
284.648 417.643 li
cp
f
273.044 417.644 mo
268.088 417.641 li
268.09 416.814 li
273.043 416.813 li
273.044 417.644 li
cp
f
305.805 416.892 mo
313.181 416.892 li
313.181 417.723 li
305.803 417.722 li
305.805 416.892 li
cp
f
285.311 415.232 mo
292.688 415.231 li
292.689 416.062 li
285.31 416.061 li
285.311 415.232 li
cp
f
309.957 415.232 mo
313.182 415.231 li
313.184 416.064 li
309.958 416.062 li
309.957 415.232 li
cp
f
305.266 415.23 mo
308.493 415.231 li
308.495 416.061 li
305.268 416.063 li
305.266 415.23 li
cp
f
308.344 413.73 mo
311.571 413.731 li
311.569 414.558 li
308.342 414.557 li
308.344 413.73 li
cp
f
301.77 416.892 mo
304.536 416.892 li
304.537 417.722 li
301.77 417.723 li
301.77 416.892 li
cp
f
299.389 416.892 mo
300.424 416.891 li
300.425 417.722 li
299.389 417.722 li
299.389 416.892 li
cp
f
305.078 413.73 mo
307.844 413.729 li
307.845 414.56 li
305.074 414.558 li
305.078 413.73 li
cp
f
302.694 413.729 mo
303.732 413.729 li
303.729 414.557 li
302.697 414.56 li
302.694 413.729 li
cp
f
297.774 416.892 mo
298.81 416.891 li
298.812 417.724 li
297.776 417.722 li
297.774 416.892 li
cp
f
312.148 413.73 mo
313.184 413.732 li
313.182 414.559 li
312.145 414.558 li
312.148 413.73 li
cp
f
286.323 416.89 mo
287.36 416.891 li
287.361 417.722 li
286.322 417.722 li
286.323 416.89 li
cp
f
294.047 416.891 mo
296.969 416.893 li
296.967 417.721 li
294.047 417.722 li
294.047 416.891 li
cp
f
303.501 415.231 mo
304.539 415.232 li
304.539 416.063 li
303.502 416.062 li
303.501 415.231 li
cp
f
299.772 415.231 mo
302.692 415.231 li
302.693 416.062 li
299.773 416.062 li
299.772 415.231 li
cp
f
288.092 416.891 mo
293.049 416.893 li
293.045 417.722 li
288.094 417.724 li
288.092 416.891 li
cp
f
292.689 413.73 mo
296.22 413.729 li
296.223 414.558 li
292.688 414.56 li
292.689 413.73 li
cp
f
293.338 415.231 mo
298.291 415.231 li
298.292 416.062 li
293.336 416.062 li
293.338 415.231 li
cp
f
285.31 413.729 mo
291.798 413.729 li
291.797 414.558 li
285.312 414.559 li
285.31 413.729 li
cp
f
296.913 413.729 mo
301.869 413.732 li
301.867 414.559 li
296.914 414.559 li
296.913 413.729 li
cp
f
314.943 407.918 mo
304.02 407.918 li
304.02 396.996 li
314.943 396.996 li
314.943 407.918 li
cp
.729412 .831373 .886275 rgb
f
430.107 308.774 mo
353.17 308.774 li
351.915 308.774 350.741 308.544 350.741 307.289 cv
350.741 305.069 li
432.416 305.069 li
432.416 307.506 li
432.416 308.761 431.362 308.774 430.107 308.774 cv
cp
.592157 .686275 .737255 rgb
f
421.496 252.665 mo
361.659 252.665 li
361.034 252.665 360.526 253.173 360.526 253.798 cv
360.526 295.21 li
422.63 295.21 li
422.63 253.798 li
422.63 253.173 422.122 252.665 421.496 252.665 cv
cp
f
363.422 292.565 mo
363.422 255.309 li
419.734 255.309 li
419.734 292.565 li
363.422 292.565 li
cp
.352941 .372549 .470588 rgb
f
363.83 292.156 mo
363.83 255.718 li
419.325 255.718 li
419.325 292.156 li
363.83 292.156 li
cp
.501961 .792157 .964706 rgb
f
363.83 292.156 mo
363.83 255.718 li
391.639 255.718 li
391.639 292.156 li
363.83 292.156 li
cp
.411765 .741176 .933333 rgb
f
360.544 295.21 mo
350.921 304.611 li
350.336 305.399 351.215 306.053 352.899 306.053 cv
430.257 306.053 li
431.941 306.053 432.82 305.399 432.235 304.611 cv
422.612 295.21 li
360.544 295.21 li
cp
.729412 .831373 .886275 rgb
f
403.19 304.213 mo
403.207 304.251 403.091 304.282 402.928 304.282 cv
376.359 304.282 li
376.201 304.282 376.084 304.251 376.102 304.213 cv
377.659 300.87 li
377.673 300.84 377.8 300.816 377.939 300.816 cv
401.349 300.816 li
401.492 300.816 401.619 300.84 401.633 300.87 cv
403.19 304.213 li
cp
.509804 .6 .654902 rgb
f
365.382 296.509 mo
361.424 296.509 li
361.95 296.111 li
365.834 296.111 li
365.382 296.509 li
cp
f
373.473 296.509 mo
369.516 296.509 li
369.891 296.111 li
373.774 296.111 li
373.473 296.509 li
cp
f
378.329 296.509 mo
374.37 296.509 li
374.655 296.111 li
378.54 296.111 li
378.329 296.509 li
cp
f
383.184 296.509 mo
379.226 296.509 li
379.42 296.111 li
383.304 296.111 li
383.184 296.509 li
cp
f
388.037 296.509 mo
384.08 296.509 li
384.184 296.111 li
388.067 296.111 li
388.037 296.509 li
cp
f
392.892 296.509 mo
388.936 296.509 li
388.949 296.111 li
392.832 296.111 li
392.892 296.509 li
cp
f
397.747 296.509 mo
393.79 296.509 li
393.712 296.111 li
397.596 296.111 li
397.747 296.509 li
cp
f
402.602 296.509 mo
398.644 296.509 li
398.477 296.111 li
402.361 296.111 li
402.602 296.509 li
cp
f
372.925 297.233 mo
368.834 297.233 li
369.234 296.808 li
373.246 296.808 li
372.925 297.233 li
cp
f
377.946 297.233 mo
373.853 297.233 li
374.157 296.808 li
378.171 296.808 li
377.946 297.233 li
cp
f
382.965 297.233 mo
378.873 297.233 li
379.08 296.808 li
383.093 296.808 li
382.965 297.233 li
cp
f
387.983 297.233 mo
383.892 297.233 li
384.003 296.808 li
388.015 296.808 li
387.983 297.233 li
cp
f
393.002 297.233 mo
388.912 297.233 li
388.926 296.808 li
392.938 296.808 li
393.002 297.233 li
cp
f
399.659 297.233 mo
393.93 297.233 li
393.848 296.808 li
399.466 296.808 li
399.659 297.233 li
cp
f
403.297 297.655 mo
399.127 297.655 li
398.77 296.808 li
402.784 296.808 li
403.297 297.655 li
cp
f
372.338 298.009 mo
368.103 298.009 li
368.532 297.553 li
372.683 297.553 li
372.338 298.009 li
cp
f
377.535 298.009 mo
373.299 298.009 li
373.624 297.553 li
377.776 297.553 li
377.535 298.009 li
cp
f
382.73 298.009 mo
378.495 298.009 li
378.717 297.553 li
382.868 297.553 li
382.73 298.009 li
cp
f
387.924 298.009 mo
383.69 298.009 li
383.809 297.553 li
387.959 297.553 li
387.924 298.009 li
cp
f
393.12 298.009 mo
388.886 298.009 li
388.901 297.553 li
393.051 297.553 li
393.12 298.009 li
cp
f
398.316 298.009 mo
394.08 298.009 li
393.992 297.553 li
398.143 297.553 li
398.316 298.009 li
cp
f
403.511 298.009 mo
399.276 298.009 li
399.084 297.553 li
403.235 297.553 li
403.511 298.009 li
cp
f
371.709 298.84 mo
367.32 298.84 li
367.781 298.351 li
372.079 298.351 li
371.709 298.84 li
cp
f
377.095 298.84 mo
372.705 298.84 li
373.054 298.351 li
377.353 298.351 li
377.095 298.84 li
cp
f
382.479 298.84 mo
378.089 298.84 li
378.327 298.351 li
382.627 298.351 li
382.479 298.84 li
cp
f
387.862 298.84 mo
383.474 298.84 li
383.601 298.351 li
387.898 298.351 li
387.862 298.84 li
cp
f
393.246 298.84 mo
388.858 298.84 li
388.874 298.351 li
393.172 298.351 li
393.246 298.84 li
cp
f
398.631 298.84 mo
394.241 298.84 li
394.147 298.351 li
398.446 298.351 li
398.631 298.84 li
cp
f
404.015 298.84 mo
399.626 298.84 li
399.42 298.351 li
403.719 298.351 li
404.015 298.84 li
cp
f
410.586 296.509 mo
406.628 296.509 li
406.312 296.111 li
410.196 296.111 li
410.586 296.509 li
cp
f
415.441 296.509 mo
411.484 296.509 li
411.077 296.111 li
414.96 296.111 li
415.441 296.509 li
cp
f
420.295 296.509 mo
416.338 296.509 li
415.841 296.111 li
419.723 296.111 li
420.295 296.509 li
cp
f
411.295 297.233 mo
407.204 297.233 li
406.866 296.808 li
410.879 296.808 li
411.295 297.233 li
cp
f
416.315 297.233 mo
412.223 297.233 li
411.789 296.808 li
415.802 296.808 li
416.315 297.233 li
cp
f
421.333 297.233 mo
417.242 297.233 li
416.711 296.808 li
420.724 296.808 li
421.333 297.233 li
cp
f
411.87 297.82 mo
407.67 297.82 li
407.314 297.372 li
411.432 297.372 li
411.87 297.82 li
cp
f
417.023 297.82 mo
412.823 297.82 li
412.365 297.372 li
416.483 297.372 li
417.023 297.82 li
cp
f
422.174 297.82 mo
417.975 297.82 li
417.416 297.372 li
421.532 297.372 li
422.174 297.82 li
cp
f
419.167 299.597 mo
414.638 299.597 li
414.107 299.077 li
418.54 299.077 li
419.167 299.597 li
cp
f
414.317 300.318 mo
409.655 300.318 li
409.217 299.767 li
413.777 299.767 li
414.317 300.318 li
cp
f
395.655 300.14 mo
370.658 300.14 li
371.27 299.334 li
395.461 299.334 li
395.655 300.14 li
cp
f
404.803 300.14 mo
397.253 300.14 li
397.008 299.334 li
404.315 299.334 li
404.803 300.14 li
cp
f
368.811 300.14 mo
361.26 300.14 li
362.175 299.334 li
369.483 299.334 li
368.811 300.14 li
cp
f
420.038 300.318 mo
415.375 300.318 li
414.812 299.767 li
419.373 299.767 li
420.038 300.318 li
cp
f
425.756 300.318 mo
421.094 300.318 li
420.406 299.767 li
424.966 299.767 li
425.756 300.318 li
cp
f
392.46 253.988 mo
392.46 254.441 392.093 254.809 391.639 254.809 cv
391.186 254.809 390.819 254.441 390.819 253.988 cv
390.819 253.534 391.186 253.167 391.639 253.167 cv
392.093 253.167 392.46 253.534 392.46 253.988 cv
cp
.235294 .207843 .207843 rgb
f
395.736 288.773 mo
387.542 288.773 li
383.907 288.773 380.959 285.825 380.959 282.189 cv
380.959 271.205 li
402.32 271.205 li
402.32 282.189 li
402.32 285.825 399.372 288.773 395.736 288.773 cv
cp
.419608 .419608 .564706 rgb
f
387.45 269.884 mo
387.45 266.671 li
387.45 265.388 388.491 264.347 389.774 264.347 cv
393.504 264.347 li
394.788 264.347 395.828 265.388 395.828 266.671 cv
395.828 269.884 li
399.553 269.884 li
399.553 266.671 li
399.553 263.336 396.84 260.623 393.505 260.623 cv
389.774 260.623 li
386.439 260.623 383.725 263.336 383.725 266.671 cv
383.725 269.884 li
387.45 269.884 li
cp
f
392.95 284.312 mo
392.95 281.317 li
393.906 281.91 393.911 282.569 393.911 282.94 cv
393.911 283.494 393.532 283.984 392.95 284.312 cv
cp
391.296 284.726 mo
391.208 284.726 391.122 284.717 391.035 284.713 cv
391.035 280.579 li
391.139 280.61 391.243 280.641 391.35 280.672 cv
391.349 280.676 li
391.708 280.771 392.013 280.874 392.278 280.982 cv
392.278 284.593 li
391.974 284.678 391.644 284.726 391.296 284.726 cv
cp
389.414 276.878 mo
389.414 276.17 389.812 275.7 390.363 275.431 cv
390.363 278.323 li
389.688 277.973 389.414 277.537 389.414 276.878 cv
cp
391.63 275.156 mo
391.855 275.156 392.068 275.163 392.278 275.174 cv
392.278 278.989 li
392.026 278.906 391.78 278.831 391.55 278.76 cv
391.363 278.709 391.194 278.657 391.035 278.604 cv
391.035 275.216 li
391.23 275.18 391.429 275.156 391.63 275.156 cv
cp
396.084 282.94 mo
396.084 280.813 394.505 279.824 392.95 279.228 cv
392.95 275.242 li
393.586 275.338 394.233 275.531 395.051 275.909 cv
395.732 276.224 li
395.732 274.363 li
395.466 274.23 li
394.921 273.958 394.197 273.682 392.95 273.567 cv
392.95 272.154 li
392.278 272.154 li
392.278 273.524 li
392.078 273.516 391.872 273.51 391.647 273.51 cv
391.435 273.51 391.232 273.52 391.035 273.537 cv
391.035 272.17 li
390.363 272.17 li
390.363 273.63 li
388.199 274.043 387.195 275.495 387.195 276.862 cv
387.195 278.743 388.428 279.685 390.363 280.362 cv
390.363 284.635 li
389.385 284.453 388.518 284.021 387.96 283.608 cv
387.195 283.041 li
387.195 285.3 li
387.404 285.442 li
387.778 285.699 388.751 286.24 390.363 286.401 cv
390.363 287.824 li
391.035 287.824 li
391.035 286.441 li
391.124 286.443 391.204 286.451 391.296 286.451 cv
391.619 286.451 391.949 286.429 392.278 286.387 cv
392.278 287.808 li
392.95 287.808 li
392.95 286.272 li
394.618 285.897 396.084 284.894 396.084 282.94 cv
cp
1 1 1 rgb
f
204.322 424.602 mo
138.391 424.602 li
137.13 424.602 136.107 423.579 136.107 422.318 cv
136.107 359.344 li
136.107 358.082 137.13 357.059 138.391 357.059 cv
204.322 357.059 li
205.584 357.059 206.607 358.082 206.607 359.344 cv
206.607 422.318 li
206.607 423.579 205.584 424.602 204.322 424.602 cv
cp
.729412 .831373 .886275 rgb
f
201.328 416.296 mo
141.274 416.296 li
141.274 359.163 li
201.328 359.163 li
201.328 416.296 li
cp
.509804 .6 .654902 rgb
f
192.957 398.725 mo
149.757 398.725 li
149.757 363.925 li
192.957 363.925 li
192.957 398.725 li
cp
.419608 .419608 .564706 rgb
f
150.207 398.275 mo
150.207 364.375 li
192.507 364.375 li
192.507 398.275 li
150.207 398.275 li
cp
.501961 .792157 .964706 rgb
f
150.207 398.275 mo
150.207 364.375 li
171.398 364.375 li
171.398 398.275 li
150.207 398.275 li
cp
.411765 .741176 .933333 rgb
f
188.931 422.747 mo
150.906 422.747 li
150.906 418.377 li
188.931 418.377 li
188.931 422.747 li
cp
.360784 .482353 .682353 rgb
f
188.931 420.822 mo
150.906 420.822 li
150.906 418.377 li
188.931 418.377 li
188.931 420.822 li
cp
.0235294 .0235294 .0235294 rgb
f
192.507 374.49 mo
189.059 374.49 li
188.246 371.82 li
189.059 369.15 li
192.507 369.15 li
192.507 374.49 li
cp
.419608 .419608 .564706 rgb
f
192.507 383.995 mo
189.059 383.995 li
188.246 381.325 li
189.059 378.655 li
192.507 378.655 li
192.507 383.995 li
cp
f
192.507 393.501 mo
189.059 393.501 li
188.246 390.831 li
189.059 388.161 li
192.507 388.161 li
192.507 393.501 li
cp
f
150.207 374.49 mo
153.654 374.49 li
154.468 371.82 li
153.654 369.15 li
150.207 369.15 li
150.207 374.49 li
cp
f
150.207 383.995 mo
153.654 383.995 li
154.468 381.325 li
153.654 378.655 li
150.207 378.655 li
150.207 383.995 li
cp
f
150.207 393.501 mo
153.654 393.501 li
154.468 390.831 li
153.654 388.161 li
150.207 388.161 li
150.207 393.501 li
cp
f
201.494 416.406 mo
141.109 416.406 li
149.757 400.194 li
192.957 400.194 li
201.494 416.406 li
cp
.780392 .886275 .945098 rgb
f
191.447 404.04 mo
191.598 404.438 191.544 404.885 191.302 405.236 cv
191.06 405.586 190.661 405.795 190.236 405.795 cv
178.062 405.795 li
177.398 405.795 176.841 405.292 176.774 404.631 cv
176.686 403.768 li
176.649 403.403 176.767 403.04 177.013 402.768 cv
177.259 402.496 177.608 402.341 177.974 402.341 cv
189.908 402.341 li
190.446 402.341 190.928 402.674 191.119 403.177 cv
191.447 404.04 li
cp
.811765 .172549 .0980392 rgb
f
193.094 408.38 mo
193.245 408.778 193.191 409.225 192.949 409.575 cv
192.707 409.925 192.309 410.135 191.883 410.135 cv
178.505 410.135 li
177.84 410.135 177.284 409.632 177.216 408.971 cv
177.128 408.107 li
177.091 407.743 177.21 407.38 177.456 407.108 cv
177.701 406.836 178.05 406.681 178.417 406.681 cv
191.555 406.681 li
192.093 406.681 192.575 407.013 192.766 407.516 cv
193.094 408.38 li
cp
.937255 .67451 .0196078 rgb
f
194.741 412.719 mo
194.892 413.117 194.838 413.564 194.596 413.914 cv
194.355 414.265 193.956 414.474 193.531 414.474 cv
178.947 414.474 li
178.283 414.474 177.726 413.971 177.659 413.31 cv
177.571 412.447 li
177.534 412.082 177.653 411.719 177.898 411.447 cv
178.144 411.175 178.493 411.02 178.859 411.02 cv
193.203 411.02 li
193.741 411.02 194.223 411.353 194.413 411.856 cv
194.741 412.719 li
cp
.0588235 .690196 .054902 rgb
f
156.449 405.465 mo
156.396 405.66 156.219 405.795 156.017 405.795 cv
150.97 405.795 li
150.822 405.795 150.684 405.723 150.601 405.601 cv
150.517 405.48 150.499 405.325 150.551 405.187 cv
151.531 402.629 li
151.597 402.456 151.763 402.341 151.949 402.341 cv
156.715 402.341 li
156.854 402.341 156.986 402.406 157.07 402.517 cv
157.155 402.628 157.183 402.772 157.147 402.907 cv
156.449 405.465 li
cp
.509804 .6 .654902 rgb
f
155.267 409.805 mo
155.213 409.999 155.037 410.135 154.835 410.135 cv
149.309 410.135 li
149.161 410.135 149.023 410.062 148.94 409.941 cv
148.856 409.819 148.838 409.664 148.891 409.527 cv
149.87 406.969 li
149.936 406.795 150.102 406.681 150.288 406.681 cv
155.532 406.681 li
155.671 406.681 155.803 406.746 155.888 406.857 cv
155.972 406.968 156.001 407.112 155.964 407.246 cv
155.267 409.805 li
cp
f
154.084 414.144 mo
154.031 414.339 153.854 414.474 153.652 414.474 cv
147.648 414.474 li
147.501 414.474 147.363 414.401 147.279 414.28 cv
147.195 414.159 147.177 414.004 147.23 413.866 cv
148.209 411.308 li
148.275 411.135 148.442 411.02 148.627 411.02 cv
154.349 411.02 li
154.489 411.02 154.62 411.085 154.705 411.196 cv
154.79 411.307 154.818 411.451 154.781 411.586 cv
154.084 414.144 li
cp
f
164.185 405.405 mo
164.156 405.628 163.966 405.795 163.741 405.795 cv
158.662 405.795 li
158.525 405.795 158.395 405.732 158.31 405.624 cv
158.225 405.517 158.195 405.376 158.227 405.242 cv
158.843 402.684 li
158.891 402.483 159.071 402.341 159.278 402.341 cv
164.075 402.341 li
164.204 402.341 164.327 402.397 164.412 402.494 cv
164.497 402.591 164.536 402.719 164.519 402.847 cv
164.185 405.405 li
cp
f
163.618 409.745 mo
163.589 409.968 163.399 410.135 163.174 410.135 cv
157.616 410.135 li
157.479 410.135 157.35 410.072 157.265 409.964 cv
157.18 409.856 157.149 409.715 157.181 409.582 cv
157.797 407.024 li
157.846 406.823 158.026 406.681 158.233 406.681 cv
163.508 406.681 li
163.637 406.681 163.76 406.736 163.845 406.833 cv
163.93 406.93 163.969 407.059 163.952 407.187 cv
163.618 409.745 li
cp
f
163.05 414.084 mo
163.021 414.307 162.831 414.474 162.606 414.474 cv
156.571 414.474 li
156.434 414.474 156.304 414.411 156.219 414.303 cv
156.134 414.195 156.104 414.055 156.136 413.921 cv
156.752 411.363 li
156.8 411.162 156.98 411.02 157.187 411.02 cv
162.941 411.02 li
163.07 411.02 163.192 411.076 163.277 411.173 cv
163.362 411.269 163.402 411.398 163.385 411.526 cv
163.05 414.084 li
cp
f
171.904 405.342 mo
171.905 405.462 171.858 405.577 171.774 405.662 cv
171.69 405.747 171.576 405.795 171.456 405.795 cv
166.363 405.795 li
166.236 405.795 166.116 405.742 166.031 405.648 cv
165.946 405.554 165.904 405.429 165.917 405.303 cv
166.17 402.745 li
166.193 402.516 166.386 402.341 166.616 402.341 cv
171.428 402.341 li
171.673 402.341 171.873 402.539 171.875 402.784 cv
171.904 405.342 li
cp
f
171.952 409.682 mo
171.953 409.801 171.906 409.917 171.822 410.002 cv
171.738 410.087 171.624 410.135 171.504 410.135 cv
165.932 410.135 li
165.806 410.135 165.685 410.081 165.601 409.987 cv
165.516 409.894 165.474 409.768 165.487 409.643 cv
165.74 407.084 li
165.763 406.855 165.956 406.681 166.186 406.681 cv
171.476 406.681 li
171.721 406.681 171.921 406.878 171.924 407.124 cv
171.952 409.682 li
cp
f
171.952 414.021 mo
171.953 414.141 171.906 414.256 171.822 414.341 cv
171.738 414.426 171.624 414.474 171.504 414.474 cv
165.454 414.474 li
165.328 414.474 165.207 414.42 165.122 414.327 cv
165.038 414.233 164.996 414.108 165.009 413.982 cv
165.262 411.424 li
165.285 411.195 165.478 411.02 165.708 411.02 cv
171.476 411.02 li
171.721 411.02 171.921 411.218 171.924 411.463 cv
171.952 414.021 li
cp
f
162.585 378.571 mo
161.57 382.823 li
163.6 382.823 li
162.585 378.571 li
cp
161.181 384.477 mo
160.695 386.548 li
158.332 386.548 li
161.237 376.917 li
164.003 376.917 li
166.907 386.548 li
164.489 386.548 li
163.989 384.477 li
161.181 384.477 li
cp
1 1 1 rgb
f
170.913 378.669 mo
170.913 386.548 li
168.634 386.548 li
168.634 378.669 li
166.146 378.669 li
166.146 376.917 li
173.512 376.917 li
173.29 378.669 li
170.913 378.669 li
cp
f
181.479 386.548 mo
181.312 382.782 li
181.242 381.434 181.215 380.044 181.284 378.849 cv
179.797 385.534 li
177.643 385.534 li
176.059 378.849 li
176.156 380.267 176.156 381.462 176.1 382.81 cv
175.934 386.548 li
173.71 386.548 li
174.433 376.917 li
177.31 376.917 li
178.755 383.449 li
180.103 376.917 li
182.994 376.917 li
183.716 386.548 li
181.479 386.548 li
cp
f
201.328 359.163 mo
192.957 363.925 li
149.757 363.925 li
141.274 359.163 li
201.328 359.163 li
cp
.419608 .419608 .564706 rgb
f
202.808 81.9041 mo
139.905 81.9041 li
138.5 81.9041 137.361 80.7649 137.361 79.3597 cv
137.361 30.8344 li
137.361 29.4291 138.5 28.2899 139.905 28.2899 cv
202.808 28.2899 li
204.213 28.2899 205.352 29.4291 205.352 30.8345 cv
205.352 79.3595 li
205.352 80.7649 204.213 81.9041 202.808 81.9041 cv
cp
.729412 .831373 .886275 rgb
f
199.837 74.5004 mo
142.876 74.5004 li
142.57 74.5004 142.322 74.2523 142.322 73.9464 cv
142.322 32.8458 li
142.322 32.5399 142.57 32.2919 142.876 32.2919 cv
199.837 32.2919 li
200.143 32.2919 200.391 32.5399 200.391 32.8458 cv
200.391 73.9464 li
200.391 74.2523 200.143 74.5004 199.837 74.5004 cv
cp
.592157 .686275 .737255 rgb
f
142.73 73.9914 mo
142.73 32.8009 li
142.73 32.7455 142.775 32.7006 142.831 32.7006 cv
199.883 32.7006 li
199.938 32.7006 199.982 32.7451 199.982 32.8 cv
199.982 73.9919 li
199.982 74.0468 199.938 74.0917 199.883 74.0917 cv
142.831 74.0917 li
142.775 74.0917 142.73 74.0465 142.73 73.9914 cv
cp
.501961 .792157 .964706 rgb
f
142.73 74.0207 mo
142.73 32.7713 li
142.73 32.7322 142.762 32.7006 142.801 32.7006 cv
171.382 32.7006 li
171.421 32.7006 171.452 32.7323 171.452 32.771 cv
171.452 74.0213 li
171.452 74.06 171.421 74.0917 171.382 74.0917 cv
142.801 74.0917 li
142.762 74.0917 142.73 74.0597 142.73 74.0207 cv
cp
.411765 .741176 .933333 rgb
f
177.31 81.9041 mo
171.357 81.9041 li
165.403 81.9041 li
165.403 85.6632 162.485 87.7777 156.628 88.8549 cv
171.357 88.8549 li
186.085 88.8549 li
180.229 87.7777 177.31 85.6632 177.31 81.9041 cv
cp
.592157 .686275 .737255 rgb
f
192.822 91.2052 mo
192.822 89.9071 191.77 88.8549 190.472 88.8549 cv
152.241 88.8549 li
150.943 88.8549 149.891 89.9071 149.891 91.2052 cv
192.822 91.2052 li
cp
.729412 .831373 .886275 rgb
f
200.107 78.8874 mo
197.844 78.8874 li
197.844 77.4573 li
200.107 77.4573 li
200.107 78.8874 li
cp
.270588 .807843 .627451 rgb
f
187.813 53.3961 mo
187.813 44.3747 180.474 37.0352 171.452 37.0352 cv
162.43 37.0352 155.091 44.3747 155.091 53.3961 cv
155.091 62.4178 162.43 69.7573 171.452 69.7573 cv
180.474 69.7573 187.813 62.4178 187.813 53.3961 cv
cp
188.708 53.3962 mo
188.708 62.926 180.982 70.6515 171.452 70.6515 cv
161.922 70.6515 154.197 62.926 154.197 53.3962 cv
154.197 43.8662 161.922 36.1408 171.452 36.1408 cv
180.982 36.1408 188.708 43.8662 188.708 53.3962 cv
cp
.419608 .419608 .564706 rgb
f
180.602 63.4014 mo
179.086 62.9437 177.416 62.5532 175.627 62.2989 cv
176.355 59.8239 176.903 56.9501 176.952 53.8432 cv
182.964 53.8432 li
182.898 57.9718 181.943 61.0752 180.602 63.4014 cv
cp
174.732 62.181 mo
173.671 62.0616 172.578 61.9878 171.452 61.9878 cv
170.326 61.9878 169.232 62.0617 168.171 62.1812 cv
167.447 59.7506 166.896 56.9154 166.846 53.8432 cv
176.058 53.8432 li
176.008 56.9136 175.457 59.7494 174.732 62.181 cv
cp
162.346 63.3881 mo
160.983 61.0595 160.008 57.9584 159.941 53.8432 cv
165.952 53.8432 li
166.001 56.9501 166.55 59.8239 167.277 62.2989 cv
165.506 62.5509 163.851 62.9362 162.346 63.3881 cv
cp
162.419 43.4254 mo
163.904 43.8683 165.534 44.245 167.277 44.493 cv
166.55 46.968 166.001 49.8419 165.952 52.949 cv
159.941 52.949 li
160.011 48.8575 161.018 45.7588 162.419 43.4254 cv
cp
168.173 44.6108 mo
169.233 44.7302 170.326 44.804 171.452 44.804 cv
172.578 44.804 173.671 44.7302 174.732 44.6108 cv
175.456 47.0424 176.008 49.8784 176.058 52.949 cv
166.846 52.949 li
166.896 49.8784 167.448 47.0424 168.173 44.6108 cv
cp
180.485 43.4255 mo
181.886 45.7589 182.894 48.8575 182.963 52.949 cv
176.952 52.949 li
176.903 49.842 176.355 46.968 175.627 44.493 cv
177.37 44.2451 179 43.8683 180.485 43.4255 cv
cp
187.791 52.949 mo
183.857 52.949 li
183.787 48.7933 182.761 45.605 181.323 43.172 cv
182.104 42.9185 182.834 42.6509 183.515 42.3812 cv
183.297 42.1432 183.08 41.9056 182.849 41.681 cv
182.217 41.924 181.546 42.1641 180.832 42.3909 cv
179.368 40.2074 177.587 38.7079 175.975 37.6849 cv
175.021 37.4099 174.036 37.2116 173.021 37.1144 cv
174.836 37.8335 177.766 39.4121 179.986 42.6443 cv
178.568 43.0552 177.019 43.402 175.368 43.6287 cv
174.415 40.6628 173.265 38.3851 172.538 37.0901 cv
172.186 37.0667 171.836 37.037 171.479 37.0363 cv
172.114 38.1105 173.406 40.4951 174.465 43.7383 cv
173.488 43.8424 172.485 43.9098 171.452 43.9098 cv
170.419 43.9098 169.417 43.8424 168.44 43.7383 cv
169.499 40.4951 170.79 38.1106 171.426 37.0364 cv
171.068 37.037 170.718 37.0669 170.366 37.0901 cv
169.639 38.3851 168.489 40.6629 167.536 43.6287 cv
165.885 43.4019 164.336 43.0552 162.919 42.6443 cv
165.138 39.4121 168.069 37.8335 169.883 37.1145 cv
168.868 37.2116 167.883 37.41 166.929 37.685 cv
165.317 38.7082 163.536 40.2076 162.073 42.3908 cv
161.358 42.164 160.687 41.924 160.055 41.6809 cv
159.824 41.9056 159.607 42.143 159.39 42.3809 cv
160.071 42.6507 160.801 42.9184 161.581 43.1718 cv
160.144 45.6049 159.117 48.7932 159.047 52.949 cv
155.113 52.949 li
155.109 53.0989 155.091 53.2451 155.091 53.396 cv
155.091 53.5469 155.109 53.6932 155.113 53.8432 cv
159.047 53.8432 li
159.113 58.0366 160.085 61.2347 161.464 63.6604 cv
160.727 63.9024 160.038 64.1567 159.391 64.4128 cv
159.607 64.6489 159.822 64.8847 160.051 65.1078 cv
160.644 64.8797 161.27 64.6544 161.936 64.4402 cv
163.28 66.5163 164.915 67.9634 166.444 68.9659 cv
167.494 69.3045 168.587 69.543 169.717 69.6626 cv
167.878 68.9502 165 67.3915 162.837 64.1706 cv
164.276 63.7497 165.853 63.3935 167.536 63.1625 cv
168.489 66.1281 169.639 68.4068 170.366 69.7021 cv
170.718 69.7253 171.068 69.7552 171.425 69.7558 cv
170.789 68.6824 169.497 66.2985 168.438 63.0534 cv
169.415 62.9494 170.418 62.8821 171.452 62.8821 cv
172.485 62.8821 173.488 62.9495 174.465 63.0535 cv
173.406 66.297 172.114 68.6817 171.478 69.7558 cv
171.836 69.7553 172.186 69.7255 172.538 69.7022 cv
173.266 68.4068 174.416 66.1277 175.368 63.1631 cv
177.071 63.3969 178.664 63.7594 180.117 64.1869 cv
177.995 67.3905 175.165 68.9326 173.304 69.6449 cv
174.392 69.5216 175.447 69.293 176.46 68.9663 cv
177.989 67.964 179.623 66.5171 180.967 64.4414 cv
181.633 64.6557 182.259 64.8809 182.852 65.1089 cv
183.081 64.8854 183.297 64.6492 183.513 64.4126 cv
182.867 64.1566 182.177 63.9022 181.44 63.6602 cv
182.819 61.2346 183.791 58.0365 183.858 53.8432 cv
187.791 53.8432 li
187.795 53.6932 187.813 53.5469 187.813 53.396 cv
187.813 53.2451 187.795 53.0989 187.791 52.949 cv
cp
f
155.138 38.0635 mo
147.443 37.6472 li
149.233 39.4369 li
145.227 45.3702 145.69 53.4048 150.631 58.8444 cv
149.213 53.8392 150.339 48.2912 153.954 44.1588 cv
155.554 45.7586 li
155.138 38.0635 li
cp
1 1 1 rgb
f
187.767 68.7287 mo
195.462 69.145 li
193.672 67.3554 li
197.677 61.422 197.215 53.3874 192.273 47.9478 cv
193.692 52.9531 192.566 58.5011 188.95 62.6335 cv
187.35 61.0337 li
187.767 68.7287 li
cp
f
171.453 63.5029 mo
165.879 63.5029 161.346 58.9692 161.346 53.3962 cv
161.346 47.823 165.879 43.2894 171.453 43.2894 cv
177.025 43.2894 181.559 47.823 181.559 53.3962 cv
181.559 58.9692 177.025 63.5029 171.453 63.5029 cv
cp
.937255 .67451 .0196078 rgb
f
181.059 53.3962 mo
181.059 58.7016 176.758 63.0025 171.452 63.0025 cv
166.147 63.0025 161.846 58.7016 161.846 53.3962 cv
161.846 48.0908 166.147 43.7897 171.452 43.7897 cv
176.758 43.7897 181.059 48.0908 181.059 53.3962 cv
cp
.780392 .886275 .945098 rgb
f
171.452 63.0025 mo
166.147 63.0025 161.846 58.7016 161.846 53.3962 cv
161.846 48.0908 166.147 43.7897 171.452 43.7897 cv
171.452 63.0025 li
cp
.678431 .780392 .843137 rgb
f
178.646 53.3962 mo
178.646 57.3688 175.425 60.5893 171.452 60.5893 cv
167.48 60.5893 164.259 57.3688 164.259 53.3962 cv
164.259 49.4235 167.48 46.203 171.452 46.203 cv
175.425 46.203 178.646 49.4235 178.646 53.3962 cv
cp
.937255 .67451 .0196078 rgb
f
171.452 60.5893 mo
167.48 60.5893 164.259 57.3688 164.259 53.3962 cv
164.259 49.4235 167.48 46.203 171.452 46.203 cv
171.452 60.5893 li
cp
.901961 .607843 0 rgb
f
172.205 44.9816 mo
172.205 45.3972 171.868 45.7343 171.452 45.7343 cv
171.037 45.7343 170.7 45.3972 170.7 44.9816 cv
170.7 44.5658 171.037 44.2288 171.452 44.2288 cv
171.868 44.2288 172.205 44.5658 172.205 44.9816 cv
cp
.937255 .67451 .0196078 rgb
f
167.115 46.1461 mo
167.36 46.4825 167.285 46.9532 166.949 47.1976 cv
166.613 47.442 166.142 47.3674 165.897 47.0311 cv
165.653 46.6948 165.728 46.224 166.064 45.9795 cv
166.4 45.7352 166.871 45.8098 167.115 46.1461 cv
cp
f
163.682 50.0799 mo
164.078 50.2084 164.294 50.6331 164.166 51.0285 cv
164.037 51.4239 163.612 51.6403 163.217 51.5118 cv
162.822 51.3834 162.605 50.9587 162.734 50.5633 cv
162.862 50.1679 163.287 49.9515 163.682 50.0799 cv
cp
f
163.217 55.2804 mo
163.612 55.152 164.037 55.3684 164.166 55.7638 cv
164.294 56.1592 164.078 56.5839 163.682 56.7123 cv
163.287 56.8409 162.862 56.6245 162.734 56.2291 cv
162.605 55.8336 162.822 55.409 163.217 55.2804 cv
cp
f
165.897 59.7613 mo
166.142 59.4249 166.613 59.3504 166.949 59.5946 cv
167.285 59.8391 167.36 60.3099 167.115 60.6462 cv
166.871 60.9826 166.4 61.0571 166.064 60.8127 cv
165.728 60.5684 165.653 60.0977 165.897 59.7613 cv
cp
f
170.7 61.8108 mo
170.7 61.395 171.037 61.058 171.452 61.058 cv
171.868 61.058 172.205 61.395 172.205 61.8108 cv
172.205 62.2265 171.868 62.5636 171.452 62.5636 cv
171.037 62.5636 170.7 62.2265 170.7 61.8108 cv
cp
f
175.789 60.6462 mo
175.545 60.3099 175.62 59.8391 175.956 59.5946 cv
176.292 59.3504 176.763 59.4249 177.007 59.7613 cv
177.252 60.0977 177.177 60.5684 176.841 60.8127 cv
176.505 61.0571 176.034 60.9826 175.789 60.6462 cv
cp
f
179.223 56.7123 mo
178.827 56.5839 178.611 56.1592 178.739 55.7638 cv
178.868 55.3684 179.292 55.152 179.688 55.2804 cv
180.083 55.409 180.3 55.8336 180.171 56.2291 cv
180.043 56.6245 179.618 56.8409 179.223 56.7123 cv
cp
f
179.688 51.5118 mo
179.292 51.6403 178.868 51.4239 178.739 51.0285 cv
178.611 50.6331 178.827 50.2084 179.223 50.0799 cv
179.618 49.9515 180.043 50.1679 180.171 50.5633 cv
180.3 50.9587 180.083 51.3834 179.688 51.5118 cv
cp
f
177.007 47.0311 mo
176.763 47.3674 176.292 47.442 175.956 47.1976 cv
175.62 46.9532 175.545 46.4825 175.789 46.1461 cv
176.034 45.8098 176.505 45.7352 176.841 45.9795 cv
177.177 46.224 177.252 46.6948 177.007 47.0311 cv
cp
f
172.424 56.6009 mo
172.424 54.381 li
173.133 54.8205 173.137 55.3089 173.137 55.5838 cv
173.137 55.9947 172.855 56.3578 172.424 56.6009 cv
cp
171.198 56.9078 mo
171.133 56.9078 171.069 56.9014 171.005 56.8978 cv
171.005 53.8333 li
171.082 53.8565 171.158 53.8796 171.238 53.9021 cv
171.237 53.9054 li
171.504 53.9759 171.729 54.0524 171.926 54.1324 cv
171.926 56.8091 li
171.701 56.8718 171.456 56.9078 171.198 56.9078 cv
cp
169.803 51.0899 mo
169.803 50.5653 170.098 50.2167 170.506 50.0175 cv
170.506 52.1608 li
170.006 51.9019 169.803 51.5783 169.803 51.0899 cv
cp
171.446 49.8133 mo
171.612 49.8133 171.77 49.8183 171.926 49.827 cv
171.926 52.6549 li
171.739 52.5933 171.557 52.5374 171.386 52.4851 cv
171.248 52.4475 171.122 52.409 171.005 52.3695 cv
171.005 49.8579 li
171.149 49.8312 171.297 49.8133 171.446 49.8133 cv
cp
174.747 55.5838 mo
174.747 54.0069 173.576 53.2739 172.424 52.8318 cv
172.424 49.8772 li
172.896 49.9481 173.375 50.091 173.981 50.3716 cv
174.486 50.605 li
174.486 49.2257 li
174.29 49.1271 li
173.885 48.9253 173.348 48.7209 172.424 48.6356 cv
172.424 47.588 li
171.926 47.588 li
171.926 48.6038 li
171.777 48.598 171.625 48.5934 171.458 48.5934 cv
171.301 48.5934 171.15 48.6011 171.005 48.6129 cv
171.005 47.6001 li
170.506 47.6001 li
170.506 48.6821 li
168.902 48.9886 168.157 50.0644 168.157 51.0779 cv
168.157 52.4727 169.072 53.171 170.506 53.6725 cv
170.506 56.8406 li
169.782 56.7055 169.138 56.3848 168.725 56.0787 cv
168.157 55.6588 li
168.157 57.333 li
168.312 57.4389 li
168.59 57.6291 169.312 58.0302 170.506 58.1496 cv
170.506 59.2043 li
171.005 59.2043 li
171.005 58.179 li
171.07 58.1808 171.13 58.1868 171.198 58.1868 cv
171.437 58.1868 171.682 58.1702 171.926 58.1393 cv
171.926 59.1922 li
172.424 59.1922 li
172.424 58.054 li
173.661 57.7756 174.747 57.0322 174.747 55.5838 cv
cp
1 1 1 rgb
f
383.702 198.027 mo
355.323 198.027 li
354.031 198.027 352.984 196.98 352.984 195.688 cv
352.984 145.528 li
352.984 144.236 354.031 143.189 355.323 143.189 cv
383.702 143.189 li
384.993 143.189 386.04 144.236 386.04 145.528 cv
386.04 195.688 li
386.04 196.98 384.993 198.027 383.702 198.027 cv
cp
.419608 .419608 .564706 rgb
f
382.861 191.992 mo
356.163 191.992 li
356.163 149.224 li
382.861 149.224 li
382.861 191.992 li
cp
.32549 .32549 .470588 rgb
f
356.461 191.694 mo
356.461 149.522 li
382.563 149.522 li
382.563 191.694 li
356.461 191.694 li
cp
.501961 .792157 .964706 rgb
f
356.461 191.694 mo
356.461 149.522 li
369.531 149.522 li
369.531 191.694 li
356.461 191.694 li
cp
.411765 .741176 .933333 rgb
f
361.763 145.586 mo
361.217 145.586 li
361.217 145.04 li
361.763 145.04 li
361.763 145.586 li
cp
.32549 .32549 .470588 rgb
f
362.707 145.586 mo
362.161 145.586 li
362.161 145.04 li
362.707 145.04 li
362.707 145.586 li
cp
f
363.651 145.586 mo
363.104 145.586 li
363.104 145.04 li
363.651 145.04 li
363.651 145.586 li
cp
f
364.595 145.586 mo
364.048 145.586 li
364.048 145.04 li
364.595 145.04 li
364.595 145.586 li
cp
f
365.538 145.586 mo
364.992 145.586 li
364.992 145.04 li
365.538 145.04 li
365.538 145.586 li
cp
f
366.482 145.586 mo
365.936 145.586 li
365.936 145.04 li
366.482 145.04 li
366.482 145.586 li
cp
f
367.426 145.586 mo
366.88 145.586 li
366.88 145.04 li
367.426 145.04 li
367.426 145.586 li
cp
f
368.37 145.586 mo
367.823 145.586 li
367.823 145.04 li
368.37 145.04 li
368.37 145.586 li
cp
f
369.313 145.586 mo
368.767 145.586 li
368.767 145.04 li
369.313 145.04 li
369.313 145.586 li
cp
f
370.257 145.586 mo
369.711 145.586 li
369.711 145.04 li
370.257 145.04 li
370.257 145.586 li
cp
f
371.201 145.586 mo
370.655 145.586 li
370.655 145.04 li
371.201 145.04 li
371.201 145.586 li
cp
f
372.145 145.586 mo
371.598 145.586 li
371.598 145.04 li
372.145 145.04 li
372.145 145.586 li
cp
f
373.089 145.586 mo
372.542 145.586 li
372.542 145.04 li
373.089 145.04 li
373.089 145.586 li
cp
f
374.032 145.586 mo
373.486 145.586 li
373.486 145.04 li
374.032 145.04 li
374.032 145.586 li
cp
f
374.976 145.586 mo
374.43 145.586 li
374.43 145.04 li
374.976 145.04 li
374.976 145.586 li
cp
f
375.92 145.586 mo
375.373 145.586 li
375.373 145.04 li
375.92 145.04 li
375.92 145.586 li
cp
f
376.864 145.586 mo
376.317 145.586 li
376.317 145.04 li
376.864 145.04 li
376.864 145.586 li
cp
f
377.807 145.586 mo
377.261 145.586 li
377.261 145.04 li
377.807 145.04 li
377.807 145.586 li
cp
f
361.763 146.468 mo
361.217 146.468 li
361.217 145.921 li
361.763 145.921 li
361.763 146.468 li
cp
f
362.707 146.468 mo
362.161 146.468 li
362.161 145.921 li
362.707 145.921 li
362.707 146.468 li
cp
f
363.651 146.468 mo
363.104 146.468 li
363.104 145.921 li
363.651 145.921 li
363.651 146.468 li
cp
f
364.595 146.468 mo
364.048 146.468 li
364.048 145.921 li
364.595 145.921 li
364.595 146.468 li
cp
f
365.538 146.468 mo
364.992 146.468 li
364.992 145.921 li
365.538 145.921 li
365.538 146.468 li
cp
f
366.482 146.468 mo
365.936 146.468 li
365.936 145.921 li
366.482 145.921 li
366.482 146.468 li
cp
f
367.426 146.468 mo
366.88 146.468 li
366.88 145.921 li
367.426 145.921 li
367.426 146.468 li
cp
f
368.37 146.468 mo
367.823 146.468 li
367.823 145.921 li
368.37 145.921 li
368.37 146.468 li
cp
f
369.313 146.468 mo
368.767 146.468 li
368.767 145.921 li
369.313 145.921 li
369.313 146.468 li
cp
f
370.257 146.468 mo
369.711 146.468 li
369.711 145.921 li
370.257 145.921 li
370.257 146.468 li
cp
f
371.201 146.468 mo
370.655 146.468 li
370.655 145.921 li
371.201 145.921 li
371.201 146.468 li
cp
f
372.145 146.468 mo
371.598 146.468 li
371.598 145.921 li
372.145 145.921 li
372.145 146.468 li
cp
f
373.089 146.468 mo
372.542 146.468 li
372.542 145.921 li
373.089 145.921 li
373.089 146.468 li
cp
f
374.032 146.468 mo
373.486 146.468 li
373.486 145.921 li
374.032 145.921 li
374.032 146.468 li
cp
f
374.976 146.468 mo
374.43 146.468 li
374.43 145.921 li
374.976 145.921 li
374.976 146.468 li
cp
f
375.92 146.468 mo
375.373 146.468 li
375.373 145.921 li
375.92 145.921 li
375.92 146.468 li
cp
f
376.864 146.468 mo
376.317 146.468 li
376.317 145.921 li
376.864 145.921 li
376.864 146.468 li
cp
f
377.807 146.468 mo
377.261 146.468 li
377.261 145.921 li
377.807 145.921 li
377.807 146.468 li
cp
f
361.763 147.349 mo
361.217 147.349 li
361.217 146.803 li
361.763 146.803 li
361.763 147.349 li
cp
f
362.707 147.349 mo
362.161 147.349 li
362.161 146.803 li
362.707 146.803 li
362.707 147.349 li
cp
f
363.651 147.349 mo
363.104 147.349 li
363.104 146.803 li
363.651 146.803 li
363.651 147.349 li
cp
f
364.595 147.349 mo
364.048 147.349 li
364.048 146.803 li
364.595 146.803 li
364.595 147.349 li
cp
f
365.538 147.349 mo
364.992 147.349 li
364.992 146.803 li
365.538 146.803 li
365.538 147.349 li
cp
f
366.482 147.349 mo
365.936 147.349 li
365.936 146.803 li
366.482 146.803 li
366.482 147.349 li
cp
f
367.426 147.349 mo
366.88 147.349 li
366.88 146.803 li
367.426 146.803 li
367.426 147.349 li
cp
f
368.37 147.349 mo
367.823 147.349 li
367.823 146.803 li
368.37 146.803 li
368.37 147.349 li
cp
f
369.313 147.349 mo
368.767 147.349 li
368.767 146.803 li
369.313 146.803 li
369.313 147.349 li
cp
f
370.257 147.349 mo
369.711 147.349 li
369.711 146.803 li
370.257 146.803 li
370.257 147.349 li
cp
f
371.201 147.349 mo
370.655 147.349 li
370.655 146.803 li
371.201 146.803 li
371.201 147.349 li
cp
f
372.145 147.349 mo
371.598 147.349 li
371.598 146.803 li
372.145 146.803 li
372.145 147.349 li
cp
f
373.089 147.349 mo
372.542 147.349 li
372.542 146.803 li
373.089 146.803 li
373.089 147.349 li
cp
f
374.032 147.349 mo
373.486 147.349 li
373.486 146.803 li
374.032 146.803 li
374.032 147.349 li
cp
f
374.976 147.349 mo
374.43 147.349 li
374.43 146.803 li
374.976 146.803 li
374.976 147.349 li
cp
f
375.92 147.349 mo
375.373 147.349 li
375.373 146.803 li
375.92 146.803 li
375.92 147.349 li
cp
f
376.864 147.349 mo
376.317 147.349 li
376.317 146.803 li
376.864 146.803 li
376.864 147.349 li
cp
f
377.807 147.349 mo
377.261 147.349 li
377.261 146.803 li
377.807 146.803 li
377.807 147.349 li
cp
f
382.377 146.195 mo
382.377 146.812 381.877 147.312 381.259 147.312 cv
380.642 147.312 380.142 146.812 380.142 146.195 cv
380.142 145.577 380.642 145.077 381.259 145.077 cv
381.877 145.077 382.377 145.577 382.377 146.195 cv
cp
.235294 .207843 .207843 rgb
f
366.035 195.895 mo
366.035 194.199 li
366.035 193.789 366.367 193.457 366.777 193.457 cv
372.247 193.457 li
372.657 193.457 372.989 193.789 372.989 194.199 cv
372.989 195.895 li
372.989 196.304 372.657 196.636 372.248 196.636 cv
366.776 196.636 li
366.367 196.636 366.035 196.304 366.035 195.895 cv
cp
.32549 .32549 .470588 rgb
f
372.281 196.338 mo
366.744 196.338 li
366.517 196.338 366.333 196.154 366.333 195.928 cv
366.333 194.166 li
366.333 193.939 366.517 193.755 366.744 193.755 cv
372.281 193.755 li
372.507 193.755 372.691 193.939 372.691 194.166 cv
372.691 195.928 li
372.691 196.154 372.507 196.338 372.281 196.338 cv
cp
.419608 .419608 .564706 rgb
f
429.063 176.64 mo
429.063 165.458 419.966 156.361 408.785 156.361 cv
397.602 156.361 388.505 165.458 388.505 176.64 cv
388.505 187.822 397.602 196.919 408.785 196.919 cv
419.966 196.919 429.063 187.822 429.063 176.64 cv
cp
430.172 176.64 mo
430.172 188.452 420.596 198.027 408.785 198.027 cv
396.973 198.027 387.397 188.452 387.397 176.64 cv
387.397 164.828 396.973 155.253 408.785 155.253 cv
420.596 155.253 430.172 164.828 430.172 176.64 cv
cp
.411765 .741176 .933333 rgb
f
420.126 189.041 mo
418.247 188.474 416.177 187.99 413.959 187.674 cv
414.861 184.607 415.54 181.045 415.602 177.194 cv
423.053 177.194 li
422.971 182.311 421.788 186.158 420.126 189.041 cv
cp
412.849 187.528 mo
411.535 187.38 410.18 187.289 408.785 187.289 cv
407.389 187.289 406.033 187.38 404.718 187.528 cv
403.82 184.516 403.138 181.002 403.076 177.194 cv
414.494 177.194 li
414.431 181 413.748 184.514 412.849 187.528 cv
cp
397.498 189.024 mo
395.809 186.138 394.6 182.295 394.517 177.194 cv
401.967 177.194 li
402.029 181.045 402.708 184.607 403.61 187.674 cv
401.414 187.987 399.363 188.464 397.498 189.024 cv
cp
397.588 164.282 mo
399.429 164.83 401.449 165.297 403.61 165.605 cv
402.708 168.672 402.029 172.234 401.967 176.086 cv
394.517 176.086 li
394.604 171.014 395.852 167.174 397.588 164.282 cv
cp
404.72 165.751 mo
406.035 165.899 407.389 165.99 408.785 165.99 cv
410.18 165.99 411.534 165.899 412.849 165.751 cv
413.748 168.765 414.431 172.28 414.494 176.086 cv
403.076 176.086 li
403.138 172.28 403.821 168.765 404.72 165.751 cv
cp
419.981 164.282 mo
421.717 167.174 422.966 171.014 423.052 176.086 cv
415.602 176.086 li
415.54 172.235 414.861 168.672 413.959 165.605 cv
416.12 165.298 418.14 164.83 419.981 164.282 cv
cp
429.036 176.086 mo
424.16 176.086 li
424.073 170.935 422.801 166.983 421.019 163.967 cv
421.987 163.653 422.891 163.322 423.736 162.987 cv
423.466 162.692 423.197 162.398 422.911 162.119 cv
422.127 162.421 421.296 162.718 420.41 162.999 cv
418.596 160.293 416.388 158.434 414.39 157.166 cv
413.209 156.826 411.988 156.58 410.729 156.459 cv
412.978 157.351 416.611 159.307 419.361 163.314 cv
417.604 163.823 415.684 164.253 413.638 164.534 cv
412.457 160.858 411.032 158.034 410.13 156.429 cv
409.694 156.4 409.26 156.363 408.817 156.363 cv
409.605 157.694 411.206 160.65 412.519 164.669 cv
411.307 164.798 410.065 164.882 408.785 164.882 cv
407.504 164.882 406.262 164.798 405.051 164.669 cv
406.363 160.65 407.964 157.694 408.752 156.363 cv
408.309 156.363 407.875 156.4 407.439 156.429 cv
406.537 158.034 405.112 160.858 403.931 164.534 cv
401.885 164.252 399.965 163.823 398.208 163.313 cv
400.958 159.307 404.591 157.351 406.84 156.46 cv
405.581 156.58 404.36 156.826 403.178 157.167 cv
401.181 158.435 398.973 160.293 397.159 162.999 cv
396.273 162.718 395.442 162.421 394.659 162.119 cv
394.372 162.398 394.103 162.692 393.834 162.987 cv
394.678 163.321 395.582 163.653 396.55 163.967 cv
394.768 166.983 393.496 170.935 393.409 176.086 cv
388.534 176.086 li
388.529 176.271 388.505 176.453 388.505 176.639 cv
388.505 176.827 388.529 177.008 388.534 177.194 cv
393.409 177.194 li
393.491 182.391 394.695 186.355 396.405 189.362 cv
395.492 189.662 394.637 189.977 393.836 190.294 cv
394.103 190.587 394.37 190.879 394.654 191.156 cv
395.388 190.873 396.165 190.594 396.99 190.328 cv
398.656 192.902 400.682 194.695 402.577 195.938 cv
403.878 196.357 405.234 196.653 406.634 196.801 cv
404.355 195.918 400.787 193.987 398.106 189.994 cv
399.89 189.473 401.844 189.031 403.931 188.745 cv
405.112 192.421 406.537 195.245 407.439 196.85 cv
407.874 196.879 408.308 196.916 408.751 196.917 cv
407.963 195.586 406.361 192.632 405.048 188.61 cv
406.26 188.481 407.503 188.397 408.785 188.397 cv
410.065 188.397 411.307 188.481 412.519 188.61 cv
411.206 192.63 409.605 195.586 408.817 196.917 cv
409.26 196.916 409.695 196.879 410.131 196.85 cv
411.032 195.245 412.458 192.42 413.638 188.745 cv
415.749 189.035 417.724 189.485 419.525 190.015 cv
416.894 193.985 413.386 195.897 411.079 196.779 cv
412.428 196.627 413.736 196.343 414.991 195.938 cv
416.887 194.696 418.912 192.903 420.578 190.33 cv
421.403 190.595 422.18 190.875 422.914 191.157 cv
423.199 190.88 423.466 190.587 423.734 190.294 cv
422.932 189.977 422.078 189.662 421.165 189.362 cv
422.874 186.355 424.079 182.391 424.16 177.194 cv
429.036 177.194 li
429.041 177.008 429.064 176.827 429.064 176.639 cv
429.064 176.453 429.041 176.271 429.036 176.086 cv
cp
f
409.644 152.037 mo
409.855 143.837 li
408.004 145.795 li
401.571 141.712 393.036 142.446 387.397 147.868 cv
392.68 146.208 398.617 147.239 403.123 150.961 cv
401.469 152.712 li
409.644 152.037 li
cp
.937255 .67451 .0196078 rgb
f
369.512 182.296 mo
363.067 182.296 357.823 177.053 357.823 170.608 cv
357.823 164.163 363.067 158.92 369.512 158.92 cv
375.957 158.92 381.201 164.163 381.201 170.608 cv
381.201 177.053 375.957 182.296 369.512 182.296 cv
cp
1 1 1 rgb
f
380.622 170.608 mo
380.622 176.744 375.648 181.718 369.512 181.718 cv
363.376 181.718 358.402 176.744 358.402 170.608 cv
358.402 164.472 363.376 159.498 369.512 159.498 cv
375.648 159.498 380.622 164.472 380.622 170.608 cv
cp
.937255 .67451 .0196078 rgb
f
369.512 181.718 mo
363.376 181.718 358.402 176.744 358.402 170.608 cv
358.402 164.472 363.376 159.498 369.512 159.498 cv
369.512 181.718 li
cp
.866667 .552941 0 rgb
f
377.831 170.608 mo
377.831 175.202 374.107 178.927 369.512 178.927 cv
364.918 178.927 361.193 175.202 361.193 170.608 cv
361.193 166.014 364.918 162.289 369.512 162.289 cv
374.107 162.289 377.831 166.014 377.831 170.608 cv
cp
.780392 .886275 .945098 rgb
f
369.512 178.927 mo
364.918 178.927 361.193 175.202 361.193 170.608 cv
361.193 166.014 364.918 162.289 369.512 162.289 cv
369.512 178.927 li
cp
.678431 .780392 .843137 rgb
f
370.383 160.877 mo
370.383 161.357 369.993 161.747 369.512 161.747 cv
369.031 161.747 368.642 161.357 368.642 160.877 cv
368.642 160.396 369.031 160.006 369.512 160.006 cv
369.993 160.006 370.383 160.396 370.383 160.877 cv
cp
.419608 .419608 .564706 rgb
f
364.496 162.223 mo
364.779 162.612 364.693 163.157 364.304 163.439 cv
363.915 163.722 363.37 163.636 363.088 163.247 cv
362.805 162.858 362.891 162.313 363.28 162.031 cv
363.669 161.748 364.214 161.834 364.496 162.223 cv
cp
f
360.526 166.773 mo
360.983 166.922 361.233 167.413 361.085 167.87 cv
360.936 168.327 360.445 168.577 359.988 168.429 cv
359.531 168.28 359.28 167.789 359.429 167.332 cv
359.577 166.875 360.069 166.624 360.526 166.773 cv
cp
f
359.988 172.787 mo
360.445 172.639 360.936 172.889 361.085 173.346 cv
361.233 173.804 360.983 174.295 360.526 174.443 cv
360.069 174.592 359.577 174.342 359.429 173.884 cv
359.28 173.427 359.531 172.936 359.988 172.787 cv
cp
f
363.088 177.969 mo
363.37 177.58 363.915 177.494 364.304 177.777 cv
364.693 178.059 364.779 178.604 364.496 178.993 cv
364.214 179.382 363.669 179.468 363.28 179.185 cv
362.891 178.903 362.805 178.358 363.088 177.969 cv
cp
f
368.642 180.34 mo
368.642 179.859 369.031 179.469 369.512 179.469 cv
369.993 179.469 370.383 179.859 370.383 180.34 cv
370.383 180.82 369.993 181.21 369.512 181.21 cv
369.031 181.21 368.642 180.82 368.642 180.34 cv
cp
f
374.528 178.993 mo
374.245 178.604 374.331 178.059 374.72 177.777 cv
375.109 177.494 375.654 177.58 375.937 177.969 cv
376.219 178.358 376.133 178.903 375.744 179.185 cv
375.355 179.468 374.81 179.382 374.528 178.993 cv
cp
f
378.498 174.443 mo
378.041 174.295 377.791 173.804 377.939 173.346 cv
378.088 172.889 378.579 172.639 379.036 172.787 cv
379.494 172.936 379.744 173.427 379.595 173.884 cv
379.447 174.342 378.956 174.592 378.498 174.443 cv
cp
f
379.036 168.429 mo
378.579 168.577 378.088 168.327 377.939 167.87 cv
377.791 167.413 378.041 166.922 378.498 166.773 cv
378.956 166.624 379.447 166.875 379.595 167.332 cv
379.744 167.789 379.494 168.28 379.036 168.429 cv
cp
f
375.937 163.247 mo
375.654 163.636 375.109 163.722 374.72 163.439 cv
374.331 163.157 374.245 162.612 374.528 162.223 cv
374.81 161.834 375.355 161.748 375.744 162.031 cv
376.133 162.313 376.219 162.858 375.937 163.247 cv
cp
f
370.636 174.314 mo
370.636 171.747 li
371.455 172.255 371.46 172.82 371.46 173.138 cv
371.46 173.613 371.135 174.033 370.636 174.314 cv
cp
369.218 174.669 mo
369.143 174.669 369.069 174.662 368.994 174.658 cv
368.994 171.114 li
369.083 171.14 369.172 171.167 369.264 171.193 cv
369.263 171.197 li
369.571 171.278 369.832 171.367 370.06 171.46 cv
370.06 174.555 li
369.799 174.628 369.516 174.669 369.218 174.669 cv
cp
367.604 167.941 mo
367.604 167.334 367.946 166.931 368.418 166.701 cv
368.418 169.179 li
367.839 168.88 367.604 168.506 367.604 167.941 cv
cp
369.504 166.464 mo
369.697 166.464 369.88 166.47 370.06 166.48 cv
370.06 169.751 li
369.843 169.68 369.633 169.615 369.435 169.554 cv
369.276 169.511 369.13 169.467 368.994 169.421 cv
368.994 166.516 li
369.161 166.485 369.332 166.464 369.504 166.464 cv
cp
373.323 173.138 mo
373.323 171.314 371.969 170.467 370.636 169.955 cv
370.636 166.538 li
371.181 166.62 371.735 166.786 372.437 167.11 cv
373.021 167.38 li
373.021 165.785 li
372.793 165.671 li
372.326 165.437 371.705 165.201 370.636 165.102 cv
370.636 163.891 li
370.06 163.891 li
370.06 165.066 li
369.888 165.059 369.711 165.054 369.519 165.054 cv
369.337 165.054 369.163 165.062 368.994 165.076 cv
368.994 163.905 li
368.418 163.905 li
368.418 165.156 li
366.562 165.511 365.702 166.755 365.702 167.927 cv
365.702 169.54 366.759 170.348 368.418 170.928 cv
368.418 174.592 li
367.58 174.435 366.836 174.064 366.358 173.71 cv
365.702 173.225 li
365.702 175.161 li
365.881 175.284 li
366.202 175.504 367.036 175.967 368.418 176.106 cv
368.418 177.325 li
368.994 177.325 li
368.994 176.14 li
369.07 176.142 369.139 176.148 369.218 176.148 cv
369.494 176.148 369.778 176.129 370.06 176.094 cv
370.06 177.311 li
370.636 177.311 li
370.636 175.995 li
372.066 175.673 373.323 174.813 373.323 173.138 cv
cp
f
304.448 97.3384 mo
258.488 97.3384 li
255.647 97.3384 253.343 95.0348 253.343 92.1932 cv
253.343 27.302 li
253.343 24.4603 255.647 22.1567 258.488 22.1567 cv
304.448 22.1567 li
307.289 22.1567 309.593 24.4603 309.593 27.302 cv
309.593 92.193 li
309.593 95.0347 307.289 97.3384 304.448 97.3384 cv
cp
f
305.235 89.0644 mo
257.701 89.0644 li
257.701 30.4306 li
305.235 30.4306 li
305.235 89.0644 li
cp
.32549 .32549 .470588 rgb
f
258.11 88.6557 mo
258.11 30.8391 li
304.826 30.8391 li
304.826 88.6557 li
258.11 88.6557 li
cp
.501961 .792157 .964706 rgb
f
258.11 88.6557 mo
258.11 30.8391 li
281.672 30.8391 li
281.672 88.6557 li
258.11 88.6557 li
cp
.411765 .741176 .933333 rgb
f
287.413 25.3573 mo
275.523 25.3573 li
275.015 25.3573 274.604 25.7689 274.604 26.2767 cv
274.604 26.7845 275.015 27.196 275.523 27.196 cv
287.413 27.196 li
287.921 27.196 288.332 26.7845 288.332 26.2767 cv
288.332 25.7689 287.921 25.3573 287.413 25.3573 cv
cp
.235294 .207843 .207843 rgb
f
301.081 26.2767 mo
301.081 26.8408 301.538 27.2982 302.102 27.2982 cv
302.666 27.2982 303.124 26.8408 303.124 26.2767 cv
303.124 25.7126 302.666 25.2552 302.102 25.2552 cv
301.538 25.2552 301.081 25.7126 301.081 26.2767 cv
cp
f
279.986 95.5675 mo
278.615 95.5675 277.501 94.4527 277.501 93.0821 cv
277.501 91.7115 278.615 90.5965 279.986 90.5965 cv
282.95 90.5965 li
284.321 90.5965 285.435 91.7115 285.435 93.0821 cv
285.435 94.4527 284.321 95.5675 282.95 95.5675 cv
279.986 95.5675 li
cp
.32549 .32549 .470588 rgb
f
282.95 91.005 mo
279.986 91.005 li
278.839 91.005 277.909 91.9349 277.909 93.0821 cv
277.909 94.2291 278.839 95.1591 279.986 95.1591 cv
282.95 95.1591 li
284.097 95.1591 285.027 94.2291 285.027 93.0821 cv
285.027 91.9349 284.097 91.005 282.95 91.005 cv
cp
.509804 .635294 .843137 rgb
f
281.468 42.71 mo
275.636 42.71 260.109 58.3148 262.907 69.7144 cv
264.697 77.0049 268.268 79.3067 281.468 79.3067 cv
294.668 79.3067 298.239 77.0049 300.029 69.7144 cv
302.827 58.3148 287.3 42.71 281.468 42.71 cv
cp
.937255 .67451 .0196078 rgb
f
281.468 42.71 mo
275.636 42.71 260.109 58.3148 262.907 69.7144 cv
264.697 77.0049 268.268 79.3067 281.468 79.3067 cv
281.468 42.71 li
cp
.866667 .552941 0 rgb
f
288.287 37.4445 mo
287.731 36.3325 285.785 37.4445 285.159 37.4445 cv
284.534 37.4445 283.546 35.6373 281.468 35.6373 cv
279.39 35.6373 278.403 37.4445 277.777 37.4445 cv
277.151 37.4445 275.205 36.3325 274.649 37.4445 cv
274.093 38.5567 276.109 42.1712 276.109 42.1712 cv
286.827 42.1712 li
286.827 42.1712 288.843 38.5567 288.287 37.4445 cv
cp
.937255 .67451 .0196078 rgb
f
281.468 35.6373 mo
279.39 35.6373 278.403 37.4445 277.777 37.4445 cv
277.151 37.4445 275.205 36.3325 274.649 37.4445 cv
274.093 38.5567 276.109 42.1712 276.109 42.1712 cv
281.468 42.1712 li
281.468 35.6373 li
cp
.866667 .552941 0 rgb
f
286.805 42.1712 mo
276.132 42.1712 li
275.249 42.1712 274.533 42.887 274.533 43.77 cv
274.533 44.6529 275.249 45.3687 276.132 45.3687 cv
286.805 45.3687 li
287.688 45.3687 288.404 44.6529 288.404 43.77 cv
288.404 42.887 287.688 42.1712 286.805 42.1712 cv
cp
.592157 .686275 .737255 rgb
f
281.468 76.3459 mo
274.754 76.3459 269.291 70.8838 269.291 64.1692 cv
269.291 57.4547 274.754 51.9926 281.468 51.9926 cv
288.182 51.9926 293.645 57.4547 293.645 64.1692 cv
293.645 70.8838 288.182 76.3459 281.468 76.3459 cv
cp
.780392 .886275 .945098 rgb
f
293.042 64.1693 mo
293.042 70.5614 287.86 75.7432 281.468 75.7432 cv
275.076 75.7432 269.894 70.5614 269.894 64.1693 cv
269.894 57.7771 275.076 52.5953 281.468 52.5953 cv
287.86 52.5953 293.042 57.7771 293.042 64.1693 cv
cp
.937255 .67451 .0196078 rgb
f
281.468 75.7432 mo
275.076 75.7432 269.894 70.5614 269.894 64.1693 cv
269.894 57.7771 275.076 52.5953 281.468 52.5953 cv
281.468 75.7432 li
cp
.866667 .552941 0 rgb
f
290.135 64.1693 mo
290.135 68.9556 286.254 72.8358 281.468 72.8358 cv
276.682 72.8358 272.802 68.9556 272.802 64.1693 cv
272.802 59.3829 276.682 55.5028 281.468 55.5028 cv
286.254 55.5028 290.135 59.3829 290.135 64.1693 cv
cp
.780392 .886275 .945098 rgb
f
281.468 72.8358 mo
276.682 72.8358 272.802 68.9556 272.802 64.1693 cv
272.802 59.3829 276.682 55.5028 281.468 55.5028 cv
281.468 72.8358 li
cp
.678431 .780392 .843137 rgb
f
282.375 54.0313 mo
282.375 54.5321 281.969 54.9382 281.468 54.9382 cv
280.967 54.9382 280.561 54.5321 280.561 54.0313 cv
280.561 53.5303 280.967 53.1241 281.468 53.1241 cv
281.969 53.1241 282.375 53.5303 282.375 54.0313 cv
cp
.419608 .419608 .564706 rgb
f
276.243 55.4343 mo
276.537 55.8395 276.447 56.4067 276.042 56.7012 cv
275.637 56.9956 275.07 56.9058 274.775 56.5005 cv
274.481 56.0952 274.571 55.528 274.976 55.2337 cv
275.381 54.9393 275.948 55.0291 276.243 55.4343 cv
cp
f
272.106 60.1738 mo
272.583 60.3287 272.844 60.8404 272.689 61.3168 cv
272.534 61.7931 272.022 62.0539 271.546 61.8991 cv
271.069 61.7443 270.809 61.2326 270.964 60.7561 cv
271.118 60.2798 271.63 60.019 272.106 60.1738 cv
cp
f
271.546 66.4396 mo
272.022 66.2848 272.534 66.5455 272.689 67.0219 cv
272.844 67.4982 272.583 68.0099 272.106 68.1647 cv
271.63 68.3196 271.118 68.0587 270.964 67.5824 cv
270.809 67.106 271.069 66.5944 271.546 66.4396 cv
cp
f
274.775 71.838 mo
275.07 71.4328 275.637 71.343 276.042 71.6374 cv
276.447 71.9318 276.537 72.4991 276.243 72.9043 cv
275.948 73.3095 275.381 73.3993 274.976 73.1049 cv
274.571 72.8106 274.481 72.2434 274.775 71.838 cv
cp
f
280.561 74.3074 mo
280.561 73.8066 280.967 73.4004 281.468 73.4004 cv
281.969 73.4004 282.375 73.8066 282.375 74.3074 cv
282.375 74.8084 281.969 75.2144 281.468 75.2144 cv
280.967 75.2144 280.561 74.8084 280.561 74.3074 cv
cp
f
286.693 72.9043 mo
286.399 72.4991 286.489 71.9318 286.894 71.6374 cv
287.299 71.343 287.866 71.4328 288.161 71.838 cv
288.455 72.2434 288.366 72.8106 287.96 73.1049 cv
287.555 73.3993 286.988 73.3095 286.693 72.9043 cv
cp
f
290.83 68.1647 mo
290.353 68.0099 290.093 67.4982 290.247 67.0219 cv
290.402 66.5455 290.914 66.2848 291.39 66.4396 cv
291.867 66.5944 292.127 67.106 291.973 67.5824 cv
291.818 68.0587 291.306 68.3196 290.83 68.1647 cv
cp
f
291.39 61.8991 mo
290.914 62.0539 290.402 61.7931 290.247 61.3168 cv
290.093 60.8404 290.353 60.3287 290.83 60.1738 cv
291.306 60.019 291.818 60.2798 291.973 60.7561 cv
292.127 61.2326 291.867 61.7443 291.39 61.8991 cv
cp
f
288.161 56.5005 mo
287.866 56.9058 287.299 56.9956 286.894 56.7012 cv
286.489 56.4067 286.399 55.8395 286.693 55.4343 cv
286.988 55.0291 287.555 54.9393 287.96 55.2337 cv
288.366 55.528 288.455 56.0952 288.161 56.5005 cv
cp
f
282.639 68.0305 mo
282.639 65.3558 li
283.492 65.8853 283.497 66.4739 283.497 66.8051 cv
283.497 67.3001 283.158 67.7377 282.639 68.0305 cv
cp
281.162 68.4003 mo
281.083 68.4003 281.006 68.3925 280.929 68.3882 cv
280.929 64.696 li
281.021 64.7239 281.114 64.7519 281.209 64.779 cv
281.209 64.7828 li
281.53 64.8676 281.802 64.96 282.039 65.0563 cv
282.039 68.2814 li
281.767 68.3569 281.472 68.4003 281.162 68.4003 cv
cp
279.481 61.3906 mo
279.481 60.7586 279.836 60.3386 280.329 60.0985 cv
280.329 62.681 li
279.725 62.3689 279.481 61.9791 279.481 61.3906 cv
cp
281.46 59.8525 mo
281.661 59.8525 281.851 59.8586 282.039 59.8691 cv
282.039 63.2761 li
281.813 63.202 281.594 63.1347 281.388 63.0717 cv
281.222 63.0262 281.07 62.98 280.929 62.9325 cv
280.929 59.9063 li
281.103 59.8741 281.28 59.8525 281.46 59.8525 cv
cp
285.438 66.8051 mo
285.438 64.9052 284.027 64.0221 282.639 63.4893 cv
282.639 59.9296 li
283.207 60.0151 283.784 60.1873 284.515 60.5252 cv
285.124 60.8065 li
285.124 59.1446 li
284.886 59.0259 li
284.399 58.7826 283.752 58.5366 282.639 58.4336 cv
282.639 57.1714 li
282.039 57.1714 li
282.039 58.3953 li
281.86 58.3882 281.676 58.3828 281.475 58.3828 cv
281.285 58.3828 281.104 58.392 280.929 58.4064 cv
280.929 57.1861 li
280.329 57.1861 li
280.329 58.4897 li
278.395 58.8589 277.498 60.155 277.498 61.376 cv
277.498 63.0566 278.6 63.898 280.329 64.5022 cv
280.329 68.3193 li
279.455 68.1565 278.68 67.7701 278.182 67.4012 cv
277.498 66.8953 li
277.498 68.9126 li
277.685 69.0401 li
278.02 69.2693 278.889 69.7525 280.329 69.8965 cv
280.329 71.1671 li
280.929 71.1671 li
280.929 69.9318 li
281.008 69.9341 281.08 69.9412 281.162 69.9412 cv
281.45 69.9412 281.745 69.9212 282.039 69.8839 cv
282.039 71.1525 li
282.639 71.1525 li
282.639 69.7813 li
284.128 69.4457 285.438 68.55 285.438 66.8051 cv
cp
f
428.21 394.077 mo
428.21 394.882 427.557 395.534 426.753 395.534 cv
380.475 395.534 li
379.671 395.534 379.019 394.882 379.019 394.077 cv
379.019 361.615 li
379.019 360.811 379.671 360.159 380.475 360.159 cv
426.753 360.159 li
427.557 360.159 428.21 360.811 428.21 361.615 cv
428.21 394.077 li
cp
.937255 .67451 .0196078 rgb
f
428.206 374.569 mo
379.016 374.571 li
379.017 367.584 li
428.206 367.583 li
428.206 374.569 li
cp
.419608 .419608 .564706 rgb
f
414.032 385.734 mo
379.856 385.737 li
379.855 377.288 li
414.032 377.287 li
414.032 385.734 li
cp
1 1 1 rgb
f
414.033 377.97 mo
379.856 377.971 li
379.855 377.288 li
414.032 377.287 li
414.033 377.97 li
cp
.976471 .945098 .478431 rgb
f
414.034 380.561 mo
379.854 380.557 li
379.856 379.878 li
414.033 379.878 li
414.034 380.561 li
cp
f
414.034 383.152 mo
379.855 383.147 li
379.857 382.468 li
414.034 382.466 li
414.034 383.152 li
cp
f
414.032 385.734 mo
379.856 385.737 li
379.856 385.056 li
414.033 385.055 li
414.032 385.734 li
cp
f
386.916 390.812 mo
381.211 390.812 li
381.211 390.169 li
386.918 390.17 li
386.916 390.812 li
cp
1 1 1 rgb
f
402.769 392.096 mo
397.063 392.097 li
397.062 391.454 li
402.769 391.455 li
402.769 392.096 li
cp
f
383.705 392.096 mo
381.21 392.097 li
381.208 391.453 li
383.704 391.454 li
383.705 392.096 li
cp
f
387.333 392.098 mo
384.837 392.097 li
384.835 391.455 li
387.332 391.453 li
387.333 392.098 li
cp
f
384.952 393.258 mo
382.456 393.257 li
382.458 392.617 li
384.954 392.618 li
384.952 393.258 li
cp
f
390.037 390.812 mo
387.898 390.812 li
387.897 390.17 li
390.037 390.169 li
390.037 390.812 li
cp
f
391.88 390.812 mo
391.079 390.813 li
391.078 390.17 li
391.879 390.17 li
391.88 390.812 li
cp
f
387.479 393.258 mo
385.339 393.258 li
385.339 392.616 li
387.482 392.617 li
387.479 393.258 li
cp
f
389.323 393.259 mo
388.52 393.259 li
388.522 392.619 li
389.32 392.616 li
389.323 393.259 li
cp
f
393.129 390.812 mo
392.327 390.813 li
392.326 390.169 li
393.127 390.17 li
393.129 390.812 li
cp
f
382.01 393.258 mo
381.208 393.257 li
381.21 392.617 li
382.012 392.617 li
382.01 393.258 li
cp
f
401.986 390.814 mo
401.184 390.813 li
401.183 390.17 li
401.987 390.17 li
401.986 390.814 li
cp
f
396.012 390.813 mo
393.751 390.811 li
393.753 390.171 li
396.012 390.17 li
396.012 390.813 li
cp
f
388.698 392.097 mo
387.896 392.096 li
387.895 391.453 li
388.698 391.454 li
388.698 392.097 li
cp
f
391.583 392.097 mo
389.324 392.097 li
389.324 391.454 li
391.582 391.454 li
391.583 392.097 li
cp
f
400.618 390.813 mo
396.784 390.811 li
396.787 390.17 li
400.616 390.169 li
400.618 390.813 li
cp
f
397.062 393.258 mo
394.33 393.259 li
394.328 392.617 li
397.063 392.616 li
397.062 393.258 li
cp
f
396.56 392.097 mo
392.729 392.097 li
392.728 391.454 li
396.561 391.454 li
396.56 392.097 li
cp
f
402.77 393.258 mo
397.751 393.259 li
397.752 392.617 li
402.768 392.617 li
402.77 393.258 li
cp
f
393.794 393.259 mo
389.961 393.257 li
389.962 392.617 li
393.793 392.616 li
393.794 393.259 li
cp
f
419.136 392.677 mo
424.842 392.677 li
424.842 393.32 li
419.135 393.319 li
419.136 392.677 li
cp
f
403.283 391.393 mo
408.989 391.393 li
408.99 392.036 li
403.283 392.035 li
403.283 391.393 li
cp
f
422.348 391.393 mo
424.842 391.393 li
424.844 392.037 li
422.348 392.036 li
422.348 391.393 li
cp
f
418.719 391.392 mo
421.216 391.392 li
421.217 392.035 li
418.721 392.036 li
418.719 391.392 li
cp
f
421.1 390.232 mo
423.596 390.232 li
423.595 390.872 li
421.099 390.872 li
421.1 390.232 li
cp
f
416.015 392.677 mo
418.154 392.677 li
418.155 393.32 li
416.015 393.32 li
416.015 392.677 li
cp
f
414.173 392.677 mo
414.973 392.677 li
414.974 393.319 li
414.173 393.32 li
414.173 392.677 li
cp
f
418.574 390.231 mo
420.713 390.231 li
420.714 390.874 li
418.571 390.872 li
418.574 390.231 li
cp
f
416.729 390.23 mo
417.532 390.231 li
417.53 390.871 li
416.732 390.874 li
416.729 390.23 li
cp
f
412.923 392.678 mo
413.725 392.677 li
413.727 393.321 li
412.925 393.32 li
412.923 392.678 li
cp
f
424.042 390.232 mo
424.844 390.233 li
424.842 390.873 li
424.04 390.872 li
424.042 390.232 li
cp
f
404.066 392.676 mo
404.868 392.677 li
404.869 393.319 li
404.065 393.32 li
404.066 392.676 li
cp
f
410.04 392.677 mo
412.301 392.678 li
412.299 393.319 li
410.04 393.32 li
410.04 392.677 li
cp
f
417.354 391.393 mo
418.156 391.394 li
418.157 392.036 li
417.355 392.036 li
417.354 391.393 li
cp
f
414.47 391.393 mo
416.728 391.393 li
416.728 392.035 li
414.47 392.036 li
414.47 391.393 li
cp
f
405.435 392.677 mo
409.268 392.678 li
409.266 393.319 li
405.436 393.321 li
405.435 392.677 li
cp
f
408.99 390.232 mo
411.722 390.231 li
411.724 390.872 li
408.989 390.873 li
408.99 390.232 li
cp
f
409.492 391.393 mo
413.324 391.393 li
413.324 392.035 li
409.491 392.035 li
409.492 391.393 li
cp
f
403.282 390.231 mo
408.301 390.23 li
408.301 390.872 li
403.284 390.873 li
403.282 390.231 li
cp
f
412.258 390.23 mo
416.091 390.233 li
416.09 390.873 li
412.259 390.873 li
412.258 390.23 li
cp
f
426.204 385.736 mo
417.756 385.736 li
417.756 377.287 li
426.204 377.287 li
426.204 385.736 li
cp
.729412 .831373 .886275 rgb
f
401.355 415.305 mo
356.751 415.305 li
355.754 415.305 354.946 414.497 354.946 413.501 cv
354.946 379.092 li
354.946 378.095 355.754 377.287 356.751 377.287 cv
401.355 377.287 li
402.351 377.287 403.159 378.095 403.159 379.092 cv
403.159 413.501 li
403.159 414.497 402.351 415.305 401.355 415.305 cv
cp
f
399.249 410.055 mo
358.857 410.055 li
358.64 410.055 358.464 409.879 358.464 409.662 cv
358.464 380.518 li
358.464 380.301 358.64 380.125 358.857 380.125 cv
399.249 380.125 li
399.465 380.125 399.641 380.301 399.641 380.518 cv
399.641 409.662 li
399.641 409.879 399.465 410.055 399.249 410.055 cv
cp
.592157 .686275 .737255 rgb
f
358.754 409.694 mo
358.754 380.486 li
358.754 380.447 358.785 380.415 358.824 380.415 cv
399.281 380.415 li
399.32 380.415 399.351 380.446 399.351 380.485 cv
399.351 409.695 li
399.351 409.734 399.32 409.765 399.281 409.765 cv
358.825 409.765 li
358.786 409.765 358.754 409.733 358.754 409.694 cv
cp
.501961 .792157 .964706 rgb
f
358.754 409.715 mo
358.754 380.465 li
358.754 380.437 358.776 380.415 358.804 380.415 cv
379.071 380.415 li
379.098 380.415 379.121 380.437 379.121 380.465 cv
379.121 409.715 li
379.121 409.743 379.098 409.765 379.071 409.765 cv
358.804 409.765 li
358.776 409.765 358.754 409.743 358.754 409.715 cv
cp
.411765 .741176 .933333 rgb
f
383.275 415.305 mo
379.053 415.305 li
374.831 415.305 li
374.831 417.971 372.762 419.47 368.609 420.234 cv
379.053 420.234 li
389.497 420.234 li
385.344 419.47 383.275 417.971 383.275 415.305 cv
cp
.592157 .686275 .737255 rgb
f
394.274 421.901 mo
394.274 420.98 393.528 420.234 392.607 420.234 cv
365.498 420.234 li
364.578 420.234 363.831 420.98 363.831 421.901 cv
394.274 421.901 li
cp
.729412 .831373 .886275 rgb
f
399.44 413.166 mo
397.835 413.166 li
397.835 412.152 li
399.44 412.152 li
399.44 413.166 li
cp
.270588 .807843 .627451 rgb
f
379.019 365.591 mo
373.787 359.761 li
373.787 362.333 li
366.644 363.719 361.202 369.826 360.844 377.287 cv
363.422 372.671 368.219 369.492 373.787 369.121 cv
373.787 371.42 li
379.019 365.591 li
cp
.419608 .419608 .564706 rgb
f
403.214 407.23 mo
408.445 413.06 li
408.445 410.488 li
415.589 409.102 421.031 402.995 421.389 395.534 cv
418.811 400.15 414.014 403.329 408.445 403.7 cv
408.445 401.4 li
403.214 407.23 li
cp
f
379.053 407.628 mo
372.139 407.628 366.514 402.004 366.514 395.09 cv
366.514 388.176 372.139 382.552 379.053 382.552 cv
385.967 382.552 391.591 388.176 391.591 395.09 cv
391.591 402.004 385.967 407.628 379.053 407.628 cv
cp
.780392 .886275 .945098 rgb
f
390.97 395.09 mo
390.97 401.672 385.635 407.008 379.053 407.008 cv
372.471 407.008 367.135 401.672 367.135 395.09 cv
367.135 388.508 372.471 383.172 379.053 383.172 cv
385.635 383.172 390.97 388.508 390.97 395.09 cv
cp
.937255 .67451 .0196078 rgb
f
379.053 407.008 mo
372.471 407.008 367.135 401.672 367.135 395.09 cv
367.135 388.508 372.471 383.172 379.053 383.172 cv
379.053 407.008 li
cp
.866667 .552941 0 rgb
f
387.977 395.09 mo
387.977 400.019 383.981 404.014 379.053 404.014 cv
374.124 404.014 370.129 400.019 370.129 395.09 cv
370.129 390.162 374.124 386.166 379.053 386.166 cv
383.981 386.166 387.977 390.162 387.977 395.09 cv
cp
.780392 .886275 .945098 rgb
f
379.053 404.014 mo
374.124 404.014 370.129 400.019 370.129 395.09 cv
370.129 390.162 374.124 386.166 379.053 386.166 cv
379.053 404.014 li
cp
.678431 .780392 .843137 rgb
f
379.987 384.651 mo
379.987 385.167 379.569 385.585 379.053 385.585 cv
378.537 385.585 378.119 385.167 378.119 384.651 cv
378.119 384.135 378.537 383.717 379.053 383.717 cv
379.569 383.717 379.987 384.135 379.987 384.651 cv
cp
.419608 .419608 .564706 rgb
f
373.672 386.096 mo
373.975 386.513 373.883 387.097 373.466 387.4 cv
373.048 387.703 372.464 387.611 372.161 387.193 cv
371.858 386.776 371.951 386.192 372.368 385.889 cv
372.785 385.586 373.369 385.678 373.672 386.096 cv
cp
f
369.413 390.976 mo
369.904 391.135 370.172 391.662 370.013 392.153 cv
369.853 392.643 369.326 392.912 368.836 392.752 cv
368.345 392.593 368.077 392.066 368.236 391.576 cv
368.396 391.085 368.922 390.817 369.413 390.976 cv
cp
f
368.836 397.428 mo
369.326 397.268 369.853 397.537 370.013 398.027 cv
370.172 398.518 369.904 399.045 369.413 399.204 cv
368.922 399.364 368.396 399.095 368.236 398.605 cv
368.077 398.114 368.345 397.587 368.836 397.428 cv
cp
f
372.161 402.987 mo
372.464 402.569 373.048 402.477 373.466 402.78 cv
373.883 403.083 373.975 403.667 373.672 404.085 cv
373.369 404.502 372.785 404.594 372.368 404.291 cv
371.951 403.988 371.858 403.404 372.161 402.987 cv
cp
f
378.119 405.529 mo
378.119 405.014 378.537 404.595 379.053 404.595 cv
379.569 404.595 379.987 405.014 379.987 405.529 cv
379.987 406.045 379.569 406.463 379.053 406.463 cv
378.537 406.463 378.119 406.045 378.119 405.529 cv
cp
f
384.433 404.085 mo
384.13 403.667 384.223 403.083 384.64 402.78 cv
385.057 402.477 385.641 402.569 385.944 402.987 cv
386.247 403.404 386.155 403.988 385.738 404.291 cv
385.32 404.594 384.736 404.502 384.433 404.085 cv
cp
f
388.693 399.204 mo
388.202 399.045 387.934 398.518 388.093 398.027 cv
388.252 397.537 388.779 397.268 389.27 397.428 cv
389.76 397.587 390.029 398.114 389.869 398.605 cv
389.71 399.095 389.183 399.364 388.693 399.204 cv
cp
f
389.27 392.752 mo
388.779 392.912 388.252 392.643 388.093 392.153 cv
387.934 391.662 388.202 391.135 388.693 390.976 cv
389.183 390.817 389.71 391.085 389.869 391.576 cv
390.029 392.066 389.76 392.593 389.27 392.752 cv
cp
f
385.944 387.193 mo
385.641 387.611 385.057 387.703 384.64 387.4 cv
384.223 387.097 384.13 386.513 384.433 386.096 cv
384.736 385.678 385.32 385.586 385.738 385.889 cv
386.155 386.192 386.247 386.776 385.944 387.193 cv
cp
f
380.258 399.066 mo
380.258 396.312 li
381.137 396.857 381.142 397.463 381.142 397.804 cv
381.142 398.314 380.793 398.764 380.258 399.066 cv
cp
378.737 399.447 mo
378.656 399.447 378.577 399.439 378.497 399.434 cv
378.497 395.632 li
378.593 395.661 378.688 395.69 378.786 395.718 cv
378.786 395.722 li
379.116 395.809 379.396 395.904 379.64 396.003 cv
379.64 399.324 li
379.361 399.402 379.057 399.447 378.737 399.447 cv
cp
377.006 392.229 mo
377.006 391.578 377.372 391.146 377.879 390.898 cv
377.879 393.558 li
377.258 393.236 377.006 392.835 377.006 392.229 cv
cp
379.044 390.645 mo
379.251 390.645 379.447 390.651 379.64 390.662 cv
379.64 394.17 li
379.408 394.094 379.182 394.025 378.97 393.96 cv
378.799 393.913 378.643 393.865 378.497 393.817 cv
378.497 390.7 li
378.676 390.667 378.859 390.645 379.044 390.645 cv
cp
383.141 397.804 mo
383.141 395.848 381.688 394.938 380.258 394.39 cv
380.258 390.724 li
380.843 390.812 381.438 390.99 382.19 391.338 cv
382.817 391.627 li
382.817 389.916 li
382.572 389.794 li
382.071 389.543 381.405 389.29 380.258 389.184 cv
380.258 387.884 li
379.64 387.884 li
379.64 389.145 li
379.456 389.137 379.266 389.132 379.06 389.132 cv
378.865 389.132 378.678 389.141 378.497 389.156 cv
378.497 387.899 li
377.879 387.899 li
377.879 389.242 li
375.888 389.622 374.965 390.957 374.965 392.214 cv
374.965 393.944 376.1 394.811 377.879 395.433 cv
377.879 399.363 li
376.98 399.196 376.182 398.798 375.669 398.418 cv
374.965 397.897 li
374.965 399.974 li
375.157 400.106 li
375.502 400.342 376.397 400.839 377.879 400.987 cv
377.879 402.296 li
378.497 402.296 li
378.497 401.024 li
378.579 401.026 378.653 401.033 378.737 401.033 cv
379.034 401.033 379.338 401.013 379.64 400.974 cv
379.64 402.281 li
380.258 402.281 li
380.258 400.869 li
381.792 400.523 383.141 399.601 383.141 397.804 cv
cp
f
190.81 208.199 mo
151.903 208.199 li
150.132 208.199 148.697 206.764 148.697 204.993 cv
148.697 136.224 li
148.697 134.453 150.132 133.017 151.903 133.017 cv
190.81 133.017 li
192.581 133.017 194.017 134.453 194.017 136.224 cv
194.017 204.993 li
194.017 206.764 192.581 208.199 190.81 208.199 cv
cp
.729412 .831373 .886275 rgb
f
189.658 199.925 mo
153.055 199.925 li
153.055 141.291 li
189.658 141.291 li
189.658 199.925 li
cp
.360784 .482353 .682353 rgb
f
153.464 199.516 mo
153.464 141.7 li
189.25 141.7 li
189.25 199.516 li
153.464 199.516 li
cp
.501961 .792157 .964706 rgb
f
153.464 199.516 mo
153.464 141.7 li
171.383 141.7 li
171.383 199.516 li
153.464 199.516 li
cp
.411765 .741176 .933333 rgb
f
160.733 136.303 mo
159.984 136.303 li
159.984 135.554 li
160.733 135.554 li
160.733 136.303 li
cp
.360784 .482353 .682353 rgb
f
162.027 136.303 mo
161.278 136.303 li
161.278 135.554 li
162.027 135.554 li
162.027 136.303 li
cp
f
163.321 136.303 mo
162.572 136.303 li
162.572 135.554 li
163.321 135.554 li
163.321 136.303 li
cp
f
164.615 136.303 mo
163.866 136.303 li
163.866 135.554 li
164.615 135.554 li
164.615 136.303 li
cp
f
165.909 136.303 mo
165.16 136.303 li
165.16 135.554 li
165.909 135.554 li
165.909 136.303 li
cp
f
167.203 136.303 mo
166.454 136.303 li
166.454 135.554 li
167.203 135.554 li
167.203 136.303 li
cp
f
168.496 136.303 mo
167.747 136.303 li
167.747 135.554 li
168.496 135.554 li
168.496 136.303 li
cp
f
169.79 136.303 mo
169.041 136.303 li
169.041 135.554 li
169.79 135.554 li
169.79 136.303 li
cp
f
171.084 136.303 mo
170.335 136.303 li
170.335 135.554 li
171.084 135.554 li
171.084 136.303 li
cp
f
172.378 136.303 mo
171.629 136.303 li
171.629 135.554 li
172.378 135.554 li
172.378 136.303 li
cp
f
173.672 136.303 mo
172.923 136.303 li
172.923 135.554 li
173.672 135.554 li
173.672 136.303 li
cp
f
174.966 136.303 mo
174.217 136.303 li
174.217 135.554 li
174.966 135.554 li
174.966 136.303 li
cp
f
176.26 136.303 mo
175.511 136.303 li
175.511 135.554 li
176.26 135.554 li
176.26 136.303 li
cp
f
177.554 136.303 mo
176.805 136.303 li
176.805 135.554 li
177.554 135.554 li
177.554 136.303 li
cp
f
178.848 136.303 mo
178.099 136.303 li
178.099 135.554 li
178.848 135.554 li
178.848 136.303 li
cp
f
180.142 136.303 mo
179.392 136.303 li
179.392 135.554 li
180.142 135.554 li
180.142 136.303 li
cp
f
181.435 136.303 mo
180.686 136.303 li
180.686 135.554 li
181.435 135.554 li
181.435 136.303 li
cp
f
182.729 136.303 mo
181.98 136.303 li
181.98 135.554 li
182.729 135.554 li
182.729 136.303 li
cp
f
160.733 137.512 mo
159.984 137.512 li
159.984 136.763 li
160.733 136.763 li
160.733 137.512 li
cp
f
162.027 137.512 mo
161.278 137.512 li
161.278 136.763 li
162.027 136.763 li
162.027 137.512 li
cp
f
163.321 137.512 mo
162.572 137.512 li
162.572 136.763 li
163.321 136.763 li
163.321 137.512 li
cp
f
164.615 137.512 mo
163.866 137.512 li
163.866 136.763 li
164.615 136.763 li
164.615 137.512 li
cp
f
165.909 137.512 mo
165.16 137.512 li
165.16 136.763 li
165.909 136.763 li
165.909 137.512 li
cp
f
167.203 137.512 mo
166.454 137.512 li
166.454 136.763 li
167.203 136.763 li
167.203 137.512 li
cp
f
168.496 137.512 mo
167.747 137.512 li
167.747 136.763 li
168.496 136.763 li
168.496 137.512 li
cp
f
169.79 137.512 mo
169.041 137.512 li
169.041 136.763 li
169.79 136.763 li
169.79 137.512 li
cp
f
171.084 137.512 mo
170.335 137.512 li
170.335 136.763 li
171.084 136.763 li
171.084 137.512 li
cp
f
172.378 137.512 mo
171.629 137.512 li
171.629 136.763 li
172.378 136.763 li
172.378 137.512 li
cp
f
173.672 137.512 mo
172.923 137.512 li
172.923 136.763 li
173.672 136.763 li
173.672 137.512 li
cp
f
174.966 137.512 mo
174.217 137.512 li
174.217 136.763 li
174.966 136.763 li
174.966 137.512 li
cp
f
176.26 137.512 mo
175.511 137.512 li
175.511 136.763 li
176.26 136.763 li
176.26 137.512 li
cp
f
177.554 137.512 mo
176.805 137.512 li
176.805 136.763 li
177.554 136.763 li
177.554 137.512 li
cp
f
178.848 137.512 mo
178.099 137.512 li
178.099 136.763 li
178.848 136.763 li
178.848 137.512 li
cp
f
180.142 137.512 mo
179.392 137.512 li
179.392 136.763 li
180.142 136.763 li
180.142 137.512 li
cp
f
181.435 137.512 mo
180.686 137.512 li
180.686 136.763 li
181.435 136.763 li
181.435 137.512 li
cp
f
182.729 137.512 mo
181.98 137.512 li
181.98 136.763 li
182.729 136.763 li
182.729 137.512 li
cp
f
160.733 138.721 mo
159.984 138.721 li
159.984 137.972 li
160.733 137.972 li
160.733 138.721 li
cp
f
162.027 138.721 mo
161.278 138.721 li
161.278 137.972 li
162.027 137.972 li
162.027 138.721 li
cp
f
163.321 138.721 mo
162.572 138.721 li
162.572 137.972 li
163.321 137.972 li
163.321 138.721 li
cp
f
164.615 138.721 mo
163.866 138.721 li
163.866 137.972 li
164.615 137.972 li
164.615 138.721 li
cp
f
165.909 138.721 mo
165.16 138.721 li
165.16 137.972 li
165.909 137.972 li
165.909 138.721 li
cp
f
167.203 138.721 mo
166.454 138.721 li
166.454 137.972 li
167.203 137.972 li
167.203 138.721 li
cp
f
168.496 138.721 mo
167.747 138.721 li
167.747 137.972 li
168.496 137.972 li
168.496 138.721 li
cp
f
169.79 138.721 mo
169.041 138.721 li
169.041 137.972 li
169.79 137.972 li
169.79 138.721 li
cp
f
171.084 138.721 mo
170.335 138.721 li
170.335 137.972 li
171.084 137.972 li
171.084 138.721 li
cp
f
172.378 138.721 mo
171.629 138.721 li
171.629 137.972 li
172.378 137.972 li
172.378 138.721 li
cp
f
173.672 138.721 mo
172.923 138.721 li
172.923 137.972 li
173.672 137.972 li
173.672 138.721 li
cp
f
174.966 138.721 mo
174.217 138.721 li
174.217 137.972 li
174.966 137.972 li
174.966 138.721 li
cp
f
176.26 138.721 mo
175.511 138.721 li
175.511 137.972 li
176.26 137.972 li
176.26 138.721 li
cp
f
177.554 138.721 mo
176.805 138.721 li
176.805 137.972 li
177.554 137.972 li
177.554 138.721 li
cp
f
178.848 138.721 mo
178.099 138.721 li
178.099 137.972 li
178.848 137.972 li
178.848 138.721 li
cp
f
180.142 138.721 mo
179.392 138.721 li
179.392 137.972 li
180.142 137.972 li
180.142 138.721 li
cp
f
181.435 138.721 mo
180.686 138.721 li
180.686 137.972 li
181.435 137.972 li
181.435 138.721 li
cp
f
182.729 138.721 mo
181.98 138.721 li
181.98 137.972 li
182.729 137.972 li
182.729 138.721 li
cp
f
188.994 137.137 mo
188.994 137.984 188.308 138.67 187.462 138.67 cv
186.616 138.67 185.93 137.984 185.93 137.137 cv
185.93 136.291 186.616 135.605 187.462 135.605 cv
188.308 135.605 188.994 136.291 188.994 137.137 cv
cp
.235294 .207843 .207843 rgb
f
156.154 137.137 mo
156.154 137.56 155.811 137.903 155.387 137.903 cv
154.964 137.903 154.621 137.56 154.621 137.137 cv
154.621 136.714 154.964 136.371 155.387 136.371 cv
155.811 136.371 156.154 136.714 156.154 137.137 cv
cp
.360784 .482353 .682353 rgb
f
166.589 205.275 mo
166.589 202.951 li
166.589 202.389 167.045 201.934 167.606 201.934 cv
175.107 201.934 li
175.668 201.934 176.124 202.389 176.124 202.951 cv
176.124 205.276 li
176.124 205.837 175.669 206.292 175.107 206.292 cv
167.606 206.292 li
167.047 206.292 166.589 205.834 166.589 205.275 cv
cp
f
175.152 205.884 mo
167.561 205.884 li
167.25 205.884 166.998 205.632 166.998 205.321 cv
166.998 202.905 li
166.998 202.594 167.25 202.342 167.561 202.342 cv
175.152 202.342 li
175.463 202.342 175.715 202.594 175.715 202.905 cv
175.715 205.321 li
175.715 205.632 175.463 205.884 175.152 205.884 cv
cp
.678431 .843137 1 rgb
f
166.068 162.275 mo
166.068 158.954 li
167.128 159.612 167.134 160.342 167.134 160.753 cv
167.134 161.368 166.713 161.911 166.068 162.275 cv
cp
164.234 162.734 mo
164.137 162.734 164.041 162.724 163.945 162.719 cv
163.945 158.135 li
164.06 158.17 164.175 158.205 164.294 158.238 cv
164.293 158.243 li
164.691 158.348 165.029 158.463 165.323 158.582 cv
165.323 162.586 li
164.986 162.68 164.62 162.734 164.234 162.734 cv
cp
162.148 154.032 mo
162.148 153.247 162.589 152.726 163.2 152.428 cv
163.2 155.634 li
162.451 155.246 162.148 154.762 162.148 154.032 cv
cp
164.605 152.122 mo
164.854 152.122 165.09 152.13 165.323 152.143 cv
165.323 156.373 li
165.043 156.281 164.771 156.197 164.515 156.119 cv
164.309 156.062 164.121 156.005 163.945 155.946 cv
163.945 152.189 li
164.161 152.149 164.382 152.122 164.605 152.122 cv
cp
169.543 160.753 mo
169.543 158.395 167.792 157.299 166.068 156.637 cv
166.068 152.218 li
166.773 152.324 167.49 152.538 168.397 152.957 cv
169.153 153.307 li
169.153 151.244 li
168.858 151.096 li
168.254 150.794 167.45 150.489 166.068 150.361 cv
166.068 148.794 li
165.323 148.794 li
165.323 150.313 li
165.101 150.305 164.873 150.298 164.624 150.298 cv
164.388 150.298 164.163 150.309 163.945 150.327 cv
163.945 148.812 li
163.2 148.812 li
163.2 150.431 li
160.8 150.889 159.687 152.498 159.687 154.014 cv
159.687 156.1 161.055 157.145 163.2 157.895 cv
163.2 162.633 li
162.116 162.431 161.154 161.951 160.535 161.494 cv
159.687 160.866 li
159.687 163.37 li
159.918 163.528 li
160.334 163.813 161.413 164.412 163.2 164.591 cv
163.2 166.169 li
163.945 166.169 li
163.945 164.635 li
164.043 164.638 164.132 164.647 164.234 164.647 cv
164.592 164.647 164.958 164.622 165.323 164.576 cv
165.323 166.15 li
166.068 166.15 li
166.068 164.448 li
167.918 164.032 169.543 162.92 169.543 160.753 cv
cp
1 1 1 rgb
f
158.979 176.234 mo
158.979 175.497 158.382 174.899 157.645 174.899 cv
156.907 174.899 156.31 175.497 156.31 176.234 cv
156.31 176.746 156.602 177.186 157.026 177.41 cv
157.026 192.646 li
158.263 192.646 li
158.263 177.41 li
158.687 177.186 158.979 176.746 158.979 176.234 cv
cp
.694118 .713726 .0196078 rgb
f
164.53 180.558 mo
164.53 179.821 163.933 179.223 163.195 179.223 cv
162.458 179.223 161.861 179.821 161.861 180.558 cv
161.861 181.071 162.153 181.51 162.577 181.734 cv
162.577 192.646 li
163.814 192.646 li
163.814 181.734 li
164.238 181.51 164.53 181.071 164.53 180.558 cv
cp
.937255 .517647 .0196078 rgb
f
170.081 184.882 mo
170.081 184.145 169.484 183.548 168.746 183.548 cv
168.009 183.548 167.412 184.145 167.412 184.882 cv
167.412 185.395 167.704 185.835 168.128 186.058 cv
168.128 192.646 li
169.365 192.646 li
169.365 186.058 li
169.789 185.835 170.081 185.395 170.081 184.882 cv
cp
.811765 .172549 .0980392 rgb
f
175.632 177.889 mo
175.632 177.152 175.034 176.554 174.297 176.554 cv
173.56 176.554 172.963 177.152 172.963 177.889 cv
172.963 178.401 173.255 178.841 173.679 179.065 cv
173.679 192.646 li
174.916 192.646 li
174.916 179.065 li
175.34 178.841 175.632 178.401 175.632 177.889 cv
cp
.937255 .517647 .0196078 rgb
f
181.183 169.901 mo
181.183 169.164 180.585 168.566 179.848 168.566 cv
179.111 168.566 178.514 169.164 178.514 169.901 cv
178.514 170.413 178.806 170.853 179.23 171.076 cv
179.23 192.646 li
180.467 192.646 li
180.467 171.077 li
180.891 170.853 181.183 170.413 181.183 169.901 cv
cp
.694118 .713726 .0196078 rgb
f
186.734 163.567 mo
186.734 162.83 186.136 162.233 185.399 162.233 cv
184.662 162.233 184.065 162.83 184.065 163.567 cv
184.065 164.08 184.357 164.52 184.781 164.743 cv
184.781 192.646 li
186.018 192.646 li
186.018 164.743 li
186.442 164.52 186.734 164.08 186.734 163.567 cv
cp
.439216 .713726 .0196078 rgb
f
180.547 158.321 mo
181.128 158.821 li
167.13 175.249 li
158.164 169.025 li
157.211 170.353 li
167.412 177.439 li
182.368 159.885 li
182.949 160.385 li
183.355 157.481 li
180.547 158.321 li
cp
.419608 .419608 .564706 rgb
f
185.959 196.586 mo
157.026 196.586 li
157.026 194.952 li
185.959 194.952 li
185.959 196.586 li
cp
f
32.0088 382.925 mo
32.0088 366.778 45.0989 353.687 61.2465 353.687 cv
77.394 353.687 90.4842 366.778 90.4842 382.925 cv
90.4842 399.073 77.394 412.163 61.2465 412.163 cv
45.0989 412.163 32.0088 399.073 32.0088 382.925 cv
cp
.411765 .741176 .933333 rgb
f
61.2466 406.241 mo
48.3898 406.241 37.9302 395.782 37.9302 382.925 cv
37.9302 370.068 48.3898 359.608 61.2466 359.608 cv
74.1033 359.608 84.563 370.068 84.563 382.925 cv
84.563 395.782 74.1033 406.241 61.2466 406.241 cv
cp
.780392 .886275 .945098 rgb
f
61.2466 406.241 mo
48.3898 406.241 37.9302 395.782 37.9302 382.925 cv
37.9302 370.068 48.3898 359.608 61.2466 359.608 cv
61.2466 406.241 li
cp
.678431 .780392 .843137 rgb
f
61.2465 410.157 mo
51.712 410.157 li
61.2465 427.974 li
70.781 410.157 li
61.2465 410.157 li
cp
.411765 .741176 .933333 rgb
f
74.4362 374.876 mo
61.2476 365.245 li
48.0583 374.876 li
74.4362 374.876 li
cp
77.4261 374.179 mo
77.4261 377.202 li
45.0684 377.202 li
45.0684 374.179 li
61.2474 362.365 li
77.4261 374.179 li
cp
.937255 .67451 .0196078 rgb
f
53.9986 372.938 mo
61.2476 367.645 li
68.4959 372.938 li
53.9986 372.938 li
cp
f
57.4727 392.017 mo
57.4727 391.888 57.5773 391.784 57.7063 391.784 cv
64.7909 391.783 li
64.8529 391.783 64.9124 391.808 64.9562 391.852 cv
64.9999 391.896 65.0246 391.955 65.0246 392.017 cv
65.0246 392.904 li
57.4727 392.904 li
57.4727 392.017 li
cp
f
56.8972 393.138 mo
56.8972 393.009 57.0018 392.904 57.1309 392.904 cv
65.3662 392.904 li
65.4281 392.904 65.4876 392.929 65.5314 392.973 cv
65.5752 393.016 65.5999 393.076 65.5999 393.138 cv
65.5999 394.024 li
56.8972 394.025 li
56.8972 393.138 li
cp
f
63.9484 378.911 mo
63.5768 378.911 63.2755 379.212 63.2755 379.584 cv
63.2755 379.956 63.5768 380.257 63.9484 380.257 cv
64.32 380.257 64.6212 379.956 64.6212 379.584 cv
64.6212 379.212 64.32 378.911 63.9484 378.911 cv
cp
57.8733 379.584 mo
57.8733 379.956 58.1746 380.257 58.5462 380.257 cv
58.9178 380.257 59.219 379.956 59.219 379.584 cv
59.219 379.212 58.9178 378.911 58.5462 378.911 cv
58.1746 378.911 57.8733 379.212 57.8733 379.584 cv
cp
58.5462 378.009 mo
63.9484 378.009 li
64.8179 378.009 65.5229 378.714 65.5229 379.584 cv
65.5229 380.453 64.8179 381.158 63.9484 381.158 cv
63.0789 381.158 59.4158 381.158 58.5462 381.158 cv
57.6766 381.158 56.9717 380.453 56.9717 379.584 cv
56.9717 378.714 57.6766 378.009 58.5462 378.009 cv
cp
f
58.977 383.004 mo
58.977 389.76 li
58.977 390.022 59.1894 390.235 59.4516 390.235 cv
59.7136 390.235 59.9261 390.022 59.9261 389.76 cv
59.9261 383.004 li
59.9261 382.742 59.7136 382.529 59.4516 382.529 cv
59.1894 382.529 58.977 382.742 58.977 383.004 cv
cp
63.043 382.529 mo
62.7809 382.529 62.5685 382.742 62.5685 383.004 cv
62.5685 389.76 li
62.5685 390.022 62.7809 390.235 63.043 390.235 cv
63.3051 390.235 63.5175 390.022 63.5175 389.76 cv
63.5175 383.004 li
63.5175 382.742 63.3051 382.529 63.043 382.529 cv
cp
61.2472 382.529 mo
60.9852 382.529 60.7727 382.742 60.7727 383.004 cv
60.7727 389.76 li
60.7727 390.022 60.9852 390.235 61.2472 390.235 cv
61.5094 390.235 61.7219 390.022 61.7219 389.76 cv
61.7219 383.004 li
61.7219 382.742 61.5094 382.529 61.2472 382.529 cv
cp
58.5462 381.158 mo
63.9484 381.158 li
63.9484 391.779 li
58.5462 391.779 li
58.5462 381.158 li
cp
f
46.9764 392.017 mo
46.9764 391.888 47.081 391.784 47.2101 391.784 cv
54.2947 391.783 li
54.3566 391.783 54.4161 391.808 54.4599 391.852 cv
54.5037 391.896 54.5283 391.955 54.5283 392.017 cv
54.5283 392.904 li
46.9764 392.904 li
46.9764 392.017 li
cp
.866667 .552941 0 rgb
f
46.401 393.138 mo
46.401 393.009 46.5056 392.904 46.6346 392.904 cv
54.87 392.904 li
54.9319 392.904 54.9914 392.929 55.0351 392.973 cv
55.079 393.016 55.1036 393.076 55.1036 393.138 cv
55.1036 394.024 li
46.401 394.025 li
46.401 393.138 li
cp
f
53.4521 378.911 mo
53.0805 378.911 52.7793 379.212 52.7793 379.584 cv
52.7793 379.956 53.0805 380.257 53.4521 380.257 cv
53.8237 380.257 54.125 379.956 54.125 379.584 cv
54.125 379.212 53.8237 378.911 53.4521 378.911 cv
cp
47.377 379.584 mo
47.377 379.956 47.6783 380.257 48.0499 380.257 cv
48.4216 380.257 48.7227 379.956 48.7227 379.584 cv
48.7227 379.212 48.4216 378.911 48.0499 378.911 cv
47.6783 378.911 47.377 379.212 47.377 379.584 cv
cp
48.0499 378.009 mo
53.4521 378.009 li
54.3217 378.009 55.0267 378.714 55.0267 379.584 cv
55.0267 380.453 54.3217 381.158 53.4521 381.158 cv
52.5826 381.158 48.9195 381.158 48.0499 381.158 cv
47.1804 381.158 46.4754 380.453 46.4754 379.584 cv
46.4754 378.714 47.1804 378.009 48.0499 378.009 cv
cp
f
48.4808 383.004 mo
48.4808 389.76 li
48.4808 390.022 48.6932 390.235 48.9554 390.235 cv
49.2173 390.235 49.4298 390.022 49.4298 389.76 cv
49.4298 383.004 li
49.4298 382.742 49.2173 382.529 48.9554 382.529 cv
48.6932 382.529 48.4808 382.742 48.4808 383.004 cv
cp
52.5467 382.529 mo
52.2846 382.529 52.0722 382.742 52.0722 383.004 cv
52.0722 389.76 li
52.0722 390.022 52.2846 390.235 52.5467 390.235 cv
52.8089 390.235 53.0213 390.022 53.0213 389.76 cv
53.0213 383.004 li
53.0213 382.742 52.8089 382.529 52.5467 382.529 cv
cp
50.7509 382.529 mo
50.489 382.529 50.2765 382.742 50.2765 383.004 cv
50.2765 389.76 li
50.2765 390.022 50.489 390.235 50.7509 390.235 cv
51.0131 390.235 51.2256 390.022 51.2256 389.76 cv
51.2256 383.004 li
51.2256 382.742 51.0131 382.529 50.7509 382.529 cv
cp
48.0499 381.158 mo
53.4521 381.158 li
53.4521 391.779 li
48.0499 391.779 li
48.0499 381.158 li
cp
f
75.5187 392.017 mo
75.5187 391.888 75.4141 391.784 75.285 391.784 cv
68.2004 391.783 li
68.1384 391.783 68.079 391.808 68.0352 391.852 cv
67.9913 391.896 67.9667 391.955 67.9667 392.017 cv
67.9667 392.904 li
75.5187 392.904 li
75.5187 392.017 li
cp
.937255 .67451 .0196078 rgb
f
76.094 393.138 mo
76.094 393.009 75.9895 392.904 75.8604 392.904 cv
67.6251 392.904 li
67.5632 392.904 67.5037 392.929 67.4599 392.972 cv
67.4161 393.016 67.3915 393.076 67.3915 393.138 cv
67.3915 394.024 li
76.094 394.025 li
76.094 393.138 li
cp
f
68.3701 379.584 mo
68.3701 379.956 68.6713 380.257 69.043 380.257 cv
69.4146 380.257 69.7157 379.956 69.7157 379.584 cv
69.7157 379.212 69.4146 378.911 69.043 378.911 cv
68.6713 378.911 68.3701 379.212 68.3701 379.584 cv
cp
74.4452 378.911 mo
74.0734 378.911 73.7724 379.212 73.7724 379.584 cv
73.7724 379.956 74.0734 380.257 74.4452 380.257 cv
74.8168 380.257 75.118 379.956 75.118 379.584 cv
75.118 379.212 74.8168 378.911 74.4452 378.911 cv
cp
76.0196 379.584 mo
76.0196 380.453 75.3147 381.158 74.4451 381.158 cv
73.5755 381.158 69.9125 381.158 69.043 381.158 cv
68.1733 381.158 67.4684 380.453 67.4684 379.584 cv
67.4684 378.714 68.1733 378.009 69.043 378.009 cv
74.4451 378.009 li
75.3147 378.009 76.0196 378.714 76.0196 379.584 cv
cp
f
73.5397 382.529 mo
73.2778 382.529 73.0652 382.742 73.0652 383.004 cv
73.0652 389.76 li
73.0652 390.022 73.2778 390.235 73.5397 390.235 cv
73.8019 390.235 74.0143 390.022 74.0143 389.76 cv
74.0143 383.004 li
74.0143 382.742 73.8019 382.529 73.5397 382.529 cv
cp
69.4737 383.004 mo
69.4737 389.76 li
69.4737 390.022 69.6862 390.235 69.9483 390.235 cv
70.2104 390.235 70.4229 390.022 70.4229 389.76 cv
70.4229 383.004 li
70.4229 382.742 70.2104 382.529 69.9483 382.529 cv
69.6862 382.529 69.4737 382.742 69.4737 383.004 cv
cp
71.2695 383.004 mo
71.2695 389.76 li
71.2695 390.022 71.4819 390.235 71.7441 390.235 cv
72.0061 390.235 72.2186 390.022 72.2186 389.76 cv
72.2186 383.004 li
72.2186 382.742 72.0061 382.529 71.7441 382.529 cv
71.4819 382.529 71.2695 382.742 71.2695 383.004 cv
cp
74.4451 391.779 mo
69.043 391.779 li
69.043 381.158 li
74.4451 381.158 li
74.4451 391.779 li
cp
f
45.0942 394.832 mo
77.3989 394.832 li
77.5423 394.832 77.6585 394.948 77.6585 395.092 cv
77.6585 397.762 li
44.8346 397.762 li
44.8346 395.092 li
44.8346 394.948 44.9508 394.832 45.0942 394.832 cv
cp
f
48.0583 374.876 mo
61.2474 365.245 li
61.2474 362.365 li
45.0684 374.179 li
45.0684 377.202 li
61.2474 377.202 li
61.2474 374.876 li
48.0583 374.876 li
cp
.866667 .552941 0 rgb
f
53.9986 372.938 mo
61.2474 372.938 li
61.2474 367.645 li
53.9986 372.938 li
cp
f
57.4727 392.017 mo
57.4727 392.904 li
61.2474 392.904 li
61.2474 391.784 li
57.7063 391.784 li
57.5773 391.784 57.4727 391.888 57.4727 392.017 cv
cp
f
56.8972 393.138 mo
56.8972 394.025 li
61.2474 394.025 li
61.2474 392.904 li
57.131 392.904 li
57.0018 392.904 56.8972 393.009 56.8972 393.138 cv
cp
f
59.219 379.584 mo
59.219 379.955 58.9178 380.257 58.5461 380.257 cv
58.1746 380.257 57.8734 379.955 57.8734 379.584 cv
57.8734 379.212 58.1746 378.911 58.5461 378.911 cv
58.9178 378.911 59.219 379.212 59.219 379.584 cv
cp
56.9717 379.584 mo
56.9717 380.453 57.6766 381.158 58.5462 381.158 cv
58.981 381.158 60.1142 381.158 61.2474 381.158 cv
61.2474 378.01 li
58.5462 378.01 li
57.6766 378.01 56.9717 378.714 56.9717 379.584 cv
cp
f
59.9262 389.76 mo
59.9262 390.022 59.7136 390.235 59.4516 390.235 cv
59.1894 390.235 58.977 390.022 58.977 389.76 cv
58.977 383.004 li
58.977 382.742 59.1894 382.529 59.4516 382.529 cv
59.7136 382.529 59.9262 382.742 59.9262 383.004 cv
59.9262 389.76 li
cp
61.2472 390.235 mo
60.9852 390.235 60.7727 390.022 60.7727 389.76 cv
60.7727 383.004 li
60.7727 382.742 60.9852 382.529 61.2472 382.529 cv
61.2474 382.529 li
61.2474 381.158 li
60.1142 381.158 58.981 381.158 58.5462 381.158 cv
58.5462 391.779 li
61.2474 391.779 li
61.2474 390.235 li
61.2472 390.235 li
cp
f
45.0683 394.832 mo
44.9393 394.832 44.8347 394.937 44.8347 395.066 cv
44.8347 397.762 li
61.2474 397.762 li
61.2474 394.832 li
45.0683 394.832 li
cp
f
96.3092 258.783 mo
96.1033 258.577 95.9943 258.281 96.0378 257.971 cv
96.7131 253.265 95.1844 248.651 91.8442 245.31 cv
88.5038 241.97 83.8889 240.441 79.1837 241.116 cv
78.6622 241.189 78.1758 240.829 78.1013 240.306 cv
78.0266 239.783 78.3896 239.298 78.9117 239.223 cv
84.2196 238.462 89.4251 240.188 93.1958 243.959 cv
96.9665 247.729 98.6926 252.935 97.9308 258.243 cv
97.8563 258.765 97.3719 259.128 96.8484 259.053 cv
96.6359 259.023 96.4498 258.924 96.3092 258.783 cv
cp
1 .623529 .00784314 rgb
f
91.5893 258.8 mo
91.3695 258.58 91.2606 258.257 91.3286 257.929 cv
92.0316 254.529 90.9948 251.042 88.5533 248.601 cv
86.1119 246.16 82.6249 245.123 79.2252 245.826 cv
78.7078 245.934 78.1995 245.603 78.0953 245.084 cv
77.9877 244.567 78.321 244.061 78.837 243.954 cv
82.8705 243.119 87.0075 244.352 89.905 247.249 cv
92.8026 250.147 94.0354 254.284 93.2004 258.317 cv
93.0936 258.833 92.5873 259.167 92.0705 259.059 cv
91.8811 259.02 91.7167 258.927 91.5893 258.8 cv
cp
f
78.3401 250.181 mo
78.2438 250.085 78.1672 249.966 78.1177 249.829 cv
77.9388 249.334 78.1962 248.786 78.6926 248.606 cv
81.5003 247.594 84.669 248.294 86.7647 250.39 cv
88.8602 252.485 89.5598 255.653 88.5486 258.462 cv
88.3691 258.959 87.8219 259.217 87.3256 259.037 cv
86.828 258.857 86.5738 258.309 86.7494 257.814 cv
87.5118 255.699 86.987 253.316 85.4129 251.741 cv
83.8388 250.167 81.4553 249.643 79.3407 250.406 cv
78.9809 250.534 78.5941 250.435 78.3401 250.181 cv
cp
f
79.4251 322.392 mo
39.4212 322.392 li
36.6405 322.392 34.3863 320.138 34.3863 317.357 cv
34.3863 257.579 li
34.3863 254.798 36.6405 252.544 39.4211 252.544 cv
79.4251 252.544 li
82.2057 252.544 84.4599 254.798 84.4599 257.579 cv
84.4599 317.357 li
84.4599 320.138 82.2057 322.392 79.4251 322.392 cv
cp
.419608 .419608 .564706 rgb
f
78.5822 283.896 mo
40.264 283.896 li
39.3255 283.896 38.5647 283.135 38.5647 282.196 cv
38.5647 258.686 li
38.5647 257.747 39.3255 256.987 40.264 256.987 cv
78.5822 256.987 li
79.5207 256.987 80.2815 257.747 80.2815 258.686 cv
80.2815 282.196 li
80.2815 283.135 79.5207 283.896 78.5822 283.896 cv
cp
.411765 .741176 .933333 rgb
f
78.7522 256.987 mo
59.4231 256.987 li
59.4231 283.896 li
78.7522 283.896 li
79.5968 283.896 80.2815 283.211 80.2815 282.366 cv
80.2815 258.516 li
80.2815 257.671 79.5968 256.987 78.7522 256.987 cv
cp
.501961 .792157 .964706 rgb
f
62.9941 274.437 mo
62.9941 275.433 63.3017 276.475 64.5348 276.475 cv
65.7671 276.475 66.0518 275.457 66.0518 274.437 cv
66.0518 273.441 65.7671 272.447 64.5348 272.447 cv
63.3017 272.447 62.9941 273.441 62.9941 274.437 cv
cp
68.7535 274.437 mo
68.7535 277.069 66.9052 278.703 64.5348 278.703 cv
62.1643 278.703 60.2915 277.069 60.2915 274.437 cv
60.2915 271.83 62.1643 270.195 64.5348 270.195 cv
66.9052 270.195 68.7535 271.83 68.7535 274.437 cv
cp
54.9582 279.249 mo
52.659 277.78 li
63.634 261.235 li
65.9331 262.705 li
54.9582 279.249 li
cp
52.4463 266.212 mo
52.4463 267.208 52.7539 268.227 53.987 268.227 cv
55.2193 268.227 55.5041 267.232 55.5041 266.212 cv
55.5041 265.217 55.2193 264.198 53.987 264.198 cv
52.7539 264.198 52.4463 265.193 52.4463 266.212 cv
cp
58.2058 266.212 mo
58.2058 268.82 56.3566 270.479 53.987 270.479 cv
51.6404 270.479 49.7674 268.82 49.7674 266.212 cv
49.7674 263.605 51.6404 261.946 53.987 261.946 cv
56.3566 261.946 58.2058 263.605 58.2058 266.212 cv
cp
.937255 .67451 .0196078 rgb
f
46.3466 296.058 mo
39.6218 296.058 li
39.038 296.058 38.5647 295.585 38.5647 295.001 cv
38.5647 288.276 li
38.5647 287.692 39.038 287.219 39.6218 287.219 cv
46.3466 287.219 li
46.9304 287.219 47.4037 287.692 47.4037 288.276 cv
47.4037 295.001 li
47.4037 295.585 46.9304 296.058 46.3466 296.058 cv
cp
.729412 .831373 .886275 rgb
f
57.3034 296.058 mo
50.5786 296.058 li
49.9947 296.058 49.5214 295.585 49.5214 295.001 cv
49.5214 288.276 li
49.5214 287.692 49.9947 287.219 50.5785 287.219 cv
57.3033 287.219 li
57.8872 287.219 58.3605 287.692 58.3605 288.276 cv
58.3605 295.001 li
58.3605 295.585 57.8872 296.058 57.3034 296.058 cv
cp
f
68.2601 296.058 mo
61.5353 296.058 li
60.9515 296.058 60.4782 295.585 60.4782 295.001 cv
60.4782 288.276 li
60.4782 287.692 60.9515 287.219 61.5353 287.219 cv
68.2601 287.219 li
68.8439 287.219 69.3172 287.692 69.3172 288.276 cv
69.3172 295.001 li
69.3172 295.585 68.8439 296.058 68.2601 296.058 cv
cp
f
46.3465 307.383 mo
39.6218 307.383 li
39.038 307.383 38.5647 306.91 38.5647 306.326 cv
38.5647 299.601 li
38.5647 299.017 39.0381 298.544 39.6219 298.544 cv
46.3466 298.544 li
46.9304 298.544 47.4037 299.017 47.4037 299.601 cv
47.4037 306.326 li
47.4037 306.91 46.9304 307.383 46.3465 307.383 cv
cp
f
57.3033 307.383 mo
50.5786 307.383 li
49.9947 307.383 49.5214 306.91 49.5214 306.326 cv
49.5214 299.601 li
49.5214 299.017 49.9947 298.544 50.5786 298.544 cv
57.3033 298.544 li
57.8872 298.544 58.3605 299.017 58.3605 299.601 cv
58.3605 306.326 li
58.3605 306.91 57.8872 307.383 57.3033 307.383 cv
cp
f
68.26 307.383 mo
61.5353 307.383 li
60.9515 307.383 60.4782 306.91 60.4782 306.326 cv
60.4782 299.601 li
60.4782 299.017 60.9515 298.544 61.5354 298.544 cv
68.2601 298.544 li
68.8439 298.544 69.3172 299.017 69.3172 299.601 cv
69.3172 306.326 li
69.3172 306.91 68.8439 307.383 68.26 307.383 cv
cp
f
79.3225 287.219 mo
72.3863 287.219 li
71.8609 287.219 71.4349 287.645 71.4349 288.17 cv
71.4349 292.114 li
71.4349 295.107 li
71.4349 306.432 li
71.4349 306.957 71.8609 307.383 72.3863 307.383 cv
79.3225 307.383 li
79.8479 307.383 80.274 306.957 80.274 306.432 cv
80.274 295.107 li
80.274 292.114 li
80.274 288.17 li
80.274 287.645 79.8479 287.219 79.3225 287.219 cv
cp
f
46.3466 318.708 mo
39.6218 318.708 li
39.038 318.708 38.5647 318.235 38.5647 317.651 cv
38.5647 310.926 li
38.5647 310.342 39.038 309.869 39.6218 309.869 cv
46.3466 309.869 li
46.9304 309.869 47.4037 310.342 47.4037 310.926 cv
47.4037 317.651 li
47.4037 318.235 46.9304 318.708 46.3466 318.708 cv
cp
f
57.3034 318.708 mo
50.5786 318.708 li
49.9947 318.708 49.5214 318.235 49.5214 317.651 cv
49.5214 310.926 li
49.5214 310.342 49.9947 309.869 50.5786 309.869 cv
57.3033 309.869 li
57.8872 309.869 58.3605 310.342 58.3605 310.926 cv
58.3605 317.651 li
58.3605 318.235 57.8872 318.708 57.3034 318.708 cv
cp
f
68.2601 318.708 mo
61.5353 318.708 li
60.9515 318.708 60.4782 318.235 60.4782 317.651 cv
60.4782 310.926 li
60.4782 310.342 60.9515 309.869 61.5353 309.869 cv
68.2601 309.869 li
68.8439 309.869 69.3172 310.342 69.3172 310.926 cv
69.3172 317.651 li
69.3172 318.235 68.8439 318.708 68.2601 318.708 cv
cp
f
79.2169 318.708 mo
72.492 318.708 li
71.9082 318.708 71.4349 318.235 71.4349 317.651 cv
71.4349 310.926 li
71.4349 310.342 71.9082 309.869 72.492 309.869 cv
79.2168 309.869 li
79.8006 309.869 80.274 310.342 80.274 310.926 cv
80.274 317.651 li
80.274 318.235 79.8007 318.708 79.2169 318.708 cv
cp
f
422.513 86.3515 mo
421.885 85.7237 421.553 84.82 421.685 83.8741 cv
423.744 69.5272 419.083 55.4558 408.898 45.2707 cv
398.713 35.0853 384.642 30.4246 370.295 32.4831 cv
368.704 32.7047 367.221 31.6078 366.994 30.0117 cv
366.767 28.4158 367.874 26.9387 369.465 26.7113 cv
385.65 24.389 401.522 29.6515 413.02 41.1491 cv
424.517 52.6465 429.78 68.519 427.457 84.7032 cv
427.23 86.2953 425.753 87.4022 424.157 87.1747 cv
423.509 87.0823 422.941 86.7801 422.513 86.3515 cv
cp
.501961 .792157 .964706 rgb
f
408.121 86.4021 mo
407.451 85.7321 407.119 84.7477 407.326 83.7476 cv
409.47 73.3812 406.308 62.7491 398.864 55.3049 cv
391.419 47.8605 380.788 44.6991 370.421 46.8423 cv
368.843 47.1726 367.294 46.162 366.976 44.5802 cv
366.648 43.0046 367.664 41.4608 369.237 41.1349 cv
381.536 38.5891 394.151 42.3482 402.986 51.1831 cv
411.821 60.0181 415.579 72.6326 413.034 84.931 cv
412.708 86.5047 411.164 87.5209 409.589 87.1929 cv
409.011 87.0744 408.51 86.7905 408.121 86.4021 cv
cp
f
367.722 60.123 mo
367.428 59.8291 367.195 59.4666 367.044 59.0502 cv
366.499 57.539 367.284 55.8683 368.797 55.321 cv
377.359 52.2336 387.02 54.369 393.41 60.7587 cv
399.8 67.1483 401.933 76.8081 398.85 85.3736 cv
398.302 86.8869 396.634 87.6739 395.12 87.1264 cv
393.603 86.5752 392.828 84.9066 393.364 83.3973 cv
395.688 76.9473 394.088 69.6802 389.288 64.8805 cv
384.488 60.0806 377.221 58.4805 370.773 60.807 cv
369.676 61.1996 368.497 60.8978 367.722 60.123 cv
cp
f
385.909 81.2493 mo
385.909 87.9168 380.504 93.322 373.836 93.322 cv
367.169 93.322 361.763 87.9168 361.763 81.2493 cv
361.763 74.5817 367.169 69.1766 373.836 69.1766 cv
380.504 69.1766 385.909 74.5817 385.909 81.2493 cv
cp
.937255 .67451 .0196078 rgb
f
373.836 93.322 mo
367.169 93.322 361.763 87.9168 361.763 81.2493 cv
361.763 74.5817 367.169 69.1766 373.836 69.1766 cv
373.836 93.322 li
cp
.866667 .552941 0 rgb
f
382.876 81.2493 mo
382.876 86.2419 378.829 90.2892 373.836 90.2892 cv
368.844 90.2892 364.796 86.2419 364.796 81.2493 cv
364.796 76.2567 368.844 72.2093 373.836 72.2093 cv
378.829 72.2093 382.876 76.2567 382.876 81.2493 cv
cp
.780392 .886275 .945098 rgb
f
373.836 90.2892 mo
368.844 90.2892 364.796 86.2419 364.796 81.2493 cv
364.796 76.2567 368.844 72.2093 373.836 72.2093 cv
373.836 90.2892 li
cp
.678431 .780392 .843137 rgb
f
374.782 70.6743 mo
374.782 71.1967 374.359 71.6204 373.836 71.6204 cv
373.314 71.6204 372.89 71.1967 372.89 70.6743 cv
372.89 70.1518 373.314 69.7282 373.836 69.7282 cv
374.359 69.7282 374.782 70.1518 374.782 70.6743 cv
cp
.419608 .419608 .564706 rgb
f
368.386 72.1378 mo
368.693 72.5605 368.599 73.1522 368.176 73.4593 cv
367.754 73.7664 367.162 73.6727 366.855 73.2499 cv
366.548 72.8273 366.642 72.2356 367.064 71.9285 cv
367.487 71.6215 368.079 71.7151 368.386 72.1378 cv
cp
f
364.071 77.0817 mo
364.568 77.2432 364.84 77.7769 364.678 78.2738 cv
364.517 78.7707 363.983 79.0426 363.486 78.8812 cv
362.99 78.7197 362.718 78.186 362.879 77.6891 cv
363.04 77.1922 363.574 76.9202 364.071 77.0817 cv
cp
f
363.486 83.6173 mo
363.983 83.4559 364.517 83.7278 364.678 84.2248 cv
364.84 84.7217 364.568 85.2554 364.071 85.4169 cv
363.574 85.5783 363.04 85.3064 362.879 84.8095 cv
362.718 84.3125 362.99 83.7788 363.486 83.6173 cv
cp
f
366.855 89.2485 mo
367.162 88.8259 367.754 88.7321 368.176 89.0392 cv
368.599 89.3463 368.693 89.938 368.386 90.3608 cv
368.079 90.7834 367.487 90.877 367.064 90.57 cv
366.642 90.2629 366.548 89.6712 366.855 89.2485 cv
cp
f
372.89 91.8242 mo
372.89 91.3018 373.314 90.8782 373.836 90.8782 cv
374.359 90.8782 374.782 91.3018 374.782 91.8242 cv
374.782 92.3467 374.359 92.7703 373.836 92.7703 cv
373.314 92.7703 372.89 92.3467 372.89 91.8242 cv
cp
f
379.287 90.3608 mo
378.98 89.938 379.073 89.3463 379.496 89.0392 cv
379.919 88.7321 380.51 88.8259 380.817 89.2485 cv
381.124 89.6712 381.031 90.2629 380.608 90.57 cv
380.185 90.877 379.594 90.7834 379.287 90.3608 cv
cp
f
383.601 85.4169 mo
383.104 85.2554 382.832 84.7217 382.994 84.2248 cv
383.155 83.7278 383.689 83.4559 384.186 83.6173 cv
384.683 83.7788 384.955 84.3125 384.793 84.8095 cv
384.632 85.3064 384.098 85.5783 383.601 85.4169 cv
cp
f
384.186 78.8812 mo
383.689 79.0426 383.155 78.7707 382.994 78.2738 cv
382.832 77.7769 383.104 77.2432 383.601 77.0817 cv
384.098 76.9202 384.632 77.1922 384.793 77.6891 cv
384.955 78.186 384.683 78.7197 384.186 78.8812 cv
cp
f
380.817 73.2499 mo
380.51 73.6727 379.919 73.7664 379.496 73.4593 cv
379.073 73.1522 378.98 72.5605 379.287 72.1378 cv
379.594 71.7151 380.185 71.6215 380.608 71.9285 cv
381.031 72.2356 381.124 72.8273 380.817 73.2499 cv
cp
f
375.057 85.2768 mo
375.057 82.4869 li
375.948 83.0393 375.953 83.6531 375.953 83.9986 cv
375.953 84.5151 375.599 84.9714 375.057 85.2768 cv
cp
373.516 85.6625 mo
373.435 85.6625 373.354 85.6544 373.273 85.65 cv
373.273 81.7987 li
373.37 81.8277 373.466 81.8569 373.566 81.8852 cv
373.566 81.8892 li
373.9 81.9777 374.184 82.074 374.431 82.1744 cv
374.431 85.5385 li
374.148 85.6173 373.84 85.6625 373.516 85.6625 cv
cp
371.763 78.3508 mo
371.763 77.6915 372.134 77.2535 372.647 77.003 cv
372.647 79.6968 li
372.018 79.3714 371.763 78.9646 371.763 78.3508 cv
cp
373.827 76.7465 mo
374.037 76.7465 374.236 76.7528 374.431 76.7638 cv
374.431 80.3176 li
374.196 80.2403 373.967 80.1701 373.753 80.1043 cv
373.579 80.057 373.421 80.0087 373.273 79.9592 cv
373.273 76.8026 li
373.455 76.769 373.64 76.7465 373.827 76.7465 cv
cp
377.977 83.9986 mo
377.977 82.0169 376.506 81.0957 375.057 80.5399 cv
375.057 76.8268 li
375.65 76.9161 376.252 77.0957 377.014 77.4481 cv
377.649 77.7416 li
377.649 76.008 li
377.402 75.8843 li
376.894 75.6305 376.219 75.3738 375.057 75.2664 cv
375.057 73.9499 li
374.431 73.9499 li
374.431 75.2265 li
374.245 75.2191 374.053 75.2134 373.844 75.2134 cv
373.646 75.2134 373.457 75.223 373.273 75.238 cv
373.273 73.9651 li
372.647 73.9651 li
372.647 75.3249 li
370.631 75.7101 369.695 77.0621 369.695 78.3357 cv
369.695 80.0887 370.845 80.9664 372.647 81.5965 cv
372.647 85.5781 li
371.736 85.4083 370.928 85.0053 370.409 84.6206 cv
369.695 84.0928 li
369.695 86.1969 li
369.89 86.33 li
370.239 86.5691 371.146 87.0731 372.647 87.2232 cv
372.647 88.5487 li
373.273 88.5487 li
373.273 87.2601 li
373.356 87.2625 373.431 87.2699 373.516 87.2699 cv
373.817 87.2699 374.125 87.2491 374.431 87.2102 cv
374.431 88.5333 li
375.057 88.5333 li
375.057 87.1031 li
376.611 86.753 377.977 85.8187 377.977 83.9986 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.0.0
%%For: (IvAN) ()
%%Title: (1410.i043.024.P.m004.c23.mobile banking icons.eps)
%%CreationDate: 10/14/2014 10:34 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",Kf30+be*qk"ca3?g#Ac(:-3q=E$4)8Q0]3r?+:TGL$<C94hh1COs/HRX4c1I%>@D0Xl]k)5Wk,c>=*H;LAa>mj\Pg&bf)OQ"
%.B.I-<)WL`o(QKa9.qcmIVWVRI(e%/qR-#gZX33,X^"#f2d;cNgeY,>3qTT6(GGI<%taY=<&X5<[nnHYDdF,-JR>?7X'Rl!V%j']
%01b3V/Z8g^i+E,#0D;FH3qM*C(^.3?qE<ZXb$F#BnB^[G;uaGWC,`hLV-a&3JjhKm(2`olDg:mZBP]K$_OkE70pVL:]M?hNIATC]
%pt/nE@2#]@is%hRUm;0)WT9,Wrm5S`'*@s$FVXok`Hjc-B.]sX%,0%L8KRcUBE8Ji%6nX0K%eZS6C,_9Ob2bF[1RY#T1kNIR;"Ib
%:B)\kiIt\M8ATFAa8aYrV56jc#<_@WOI0DTT8NYY1\JWZb'oOKA#@pCX8EL*Mt$oPT6::Nq79U@"2-5eF6O)Qf#rLBpke9i^a!nM
%Th#)o--j3d[GM08X9Tc9JBa=RnDB6eeY;fe7s7g6-cZ\2G$]Yc#.e]`B%f+Z/#B:]g9iN"TX:FT:.hp"4/FE]_.UsrR*%LW]>sWL
%2;XCRPB6l]GhfB*=)+5)DPu'.c"2jFf;t2?TA!JkTmr1OduO'mbPu&S#;W[@IZ7j3C)=EJM;slni>HgP>:\n%<Lf*cIa%qtf3fI!
%okX9%pd0F^-9;Tj$NXKPeY,=+L(41]f+Iu+\MsmVnDdi]hJ)?.Y3LN:[@A\t0E'B>^XTDF@>;t)j3)B1AL4`X<b(F-l'7nNp`>_m
%H^2UnL^!n+VOsTt6='/Is$'8,=K3K$6j".7>PlGOl4'_$=tWR.-\5@jRORepfO1uT&,bDfSOAZDcu6[WeKutC"3<f4+_A7=+&YB#
%.99MVqZ\=H?RrV&f'-6jEl<^Lij<t(Z[,ab.]mI<Sd[XLRdE]rnBZQlg3u-c,A/rNa#,p-AuBd83j7-;5n$qIr?S8Kfqrlt*,Ec)
%Ddfbs4i*3Ne4\'pK$&5bCYVl]rAs68He>+kgK:#<Q,n(>lS&*5fG+M7?n\%VG0:U3L]\Flcn]5u]QWP:=LfEV:iUBV.Q,SjWO#?r
%m>F!)<uYhTV9WtkL/4*c06nn51bV*maI6Lb4bet>^Cc&O,[_auCGi:&b(3F9CTmZ<Ub[H"V52uHq"q6)Ic)Qr]:\lc!'Yf5fFQ?D
%WPd6+cUt2G<Sj;GrR\XJ>#pOY<@-N2.rCZ6:-lj:OIETe;!CEJ@NQ/\=Mp_kiNKV*.VMt]/bfX@_%2F#BrHh&eM?nr^$a2<Zt&EL
%=>!\jIE!DG[Bu^]7V!Wi5XsJX*P8fS+F"tPcuB*]lL2JoZ[%/5NR#t*1Ti5"a0R^O@'-ock1^/+V`*Mg]>NV?(j+h[^/@;pb\R1t
%n^CNRq;5p`K-/]RJBc5JVsT-%>(_EpB%-&u;nAq2jecB0-+)1A5,dQ38,TFd',_g>>ZMSNBdL0,#*%3:UP8^;Jds;Rj&`C%g&oJ@
%2j7])!a]h_VU>3:.CX5)@)L,]$^o6<74)^'GSfXYPUbc3pgBe0+]BbcYiHR\`p&A^)WDCK5V>r\>$/f'^-S.0aS\-S./]$T_Trd[
%;<+0(RFppa0>SO0Q2K$oTX@6%,A_`W#hA3Qm0X\%UX<e<EZ!knZfE=,VhLX!)QR&>H<b33s275r/j(_UO98"Jeb!(:+HBLb"fE\F
%dY^%'SP-0J(Rk?t%]m<&!iE#G9OT^_"*GFbUK*S/5"]KZ6Q\K&;jehOi'nkmDtm$;4KoZD,Dse?&usFcM3!JKKVbQ"aB?4*/GXWL
%:(RZ*=9qWL]b%BZ7JuWlbN1[BJs_Ll#I'?bY>SS].lW+EbaU+q,d(D3b0:P+Ms\Ym2*J2*K;3ahPrNi+i69.OO,5YOD.bIj3&:$c
%&mm9]jUtoQn`;*>IZ28:j^Oo>5JCCRs2PYqDS1#ga$OUfX_S=&mDMA$Z2L6:TJK+CcD.KZ_]<EubBa,[$HYGkjlOS&VeZO!LsY-`
%!IJ.NeZ*l%lsLm)D7d?-Fk-';6\`@K9;ih#-C0/,2@a_k;gF8S.@t(AQaM99QHEI8nc2BmbiUF<1GD%2#5]ta2=iV[',tKDVT!,6
%"b5;F1bnSM^LAGuZoZG^YN2=@]Qd?h.D@e4?ojlbN9LA7li^WN=0K$c?7cZ9oi@J!IS+tjGQ2O0C]7EAMCN]4E3,Od&q`TYmQ.@?
%/2Z?JO43ZMA"iG-(hihcl8HXR]i&V^j$gK/Ibuj)fMX:V]4!=OSqYo3=?Jr`ba?2imrcR?Tm?0R`nTUB2$r1u/+&h+hi>&31foh_
%W3j[?irp&!@k=1=(BZD9OkW/sKT$$LRUIT,2U4_G:2q?7i1S-,6(`"#)AF]\i*]5_c2Yg_!.L($Z_gsIff5@c#sIpMf03)Q0!1]>
%7_rQZa);teP3%m<q=I*G?*#TL>eM1hS%ep;)#HZVTAoJ"34,r.`o+X8%n=U&$B(Iq<3G/=Hj^^hL_JC0FYOL2LUd_tW9G.C#;j,7
%V%ZAunUf54//Kk8m',>_gu.RY0uVlV\fhG1`o7uWQut-l8-cF998k16CK?,?jW^42LkEY$XRu0S8EPnSP&EN"p`*q_0&XS@b8=u5
%k2k,[TC.c&b<'pGqr;YOgaF!cN[aeiBDZ>m&ssKS1ZoPg>Rj@_QmYHG#Douopp"r(lmEakR$(M*;^,.(*cf<LC+;cE`n63kh0?>r
%+.W--GnMFKekAl)C#PD8Yt[#<I_AaYXDRNn<[7*+5!GZ]kV_L#j]"BV0#jLGI!@]1E/S*D,j%RGMRUQ&4Wi4qa3dGAO)`qs?>u2^
%TR!f@kt>g0KZ%]M\'#W&p$@Ti(eDl18;M=BFrp*)M5>UfGh(-oC:f@k'm<R`Jp=7n_=T(]<j0J-`@I37e]s9DC`+D,n?gOL.Q-+A
%OcU$$?4!7VN.I9C3\@.r5-`%99NSc0_<2Bi9NG8;>$/b*K/.2So-8k*B`+UdVhLp,aJ>"Yn)E,m6q^8!dZ&gtV10LY"0cgp6H'=]
%GX#]2"-u@0CW<_ABZ[5.=UYhM*ll$tca;YQeZ;j4kZ(MsWh+oGX&NTnbdH=cJd&ZOXgAA%-uk?9)s:hh8MX.T.=@7gU<HM_[Zk<s
%%#\T=5UK*nCVAj_'dX@Ec&IJR;f;lcX=Z+ZWb9Uu;+cb.M\68O\QSa5[--f=U;X9tk9Ll*Y,,-]Mt.hV96*nl7cc1#/kTgiE`(g=
%0fSrM6itM?k+]dLj6":ST(cKSdN[bH`'IjM7)G\\U;TqnF0b*"EgLAZF)#/UNB*EMq7\sE<\@f9'?Oekao-p'O'n[L0?icijN.ii
%(O$ieSO`XdOE^ZAM(?oqbq]ZQoCA9XbTq4G*4]Z-Ebuu]>)[`$jB<bZ(/M+#2?Au.CO[r58;IG5C5K?a8@AK%<(i1XKp6>/Xd2Mc
%s.iVXGD%U:36bnRKj+rur9>os>\sHfb@pfbA1,PK"ppH(PUrTtATUiGf+1UXn)qY6SAtJF4GRGs.5OGZ+!'Z]X@,:Pm$u55VI-G9
%]GMm(]O`EBDeV)uqNfNb-'u)7rUQ7HXmBCpC4i.-N?h1UI'9*%Fj#V@G$:i(P)Jp].?,8/3gVk:Pt"KI>FL^Q:&%pa_1,\Y)?.AS
%5GT&CbrrUcB6]_bGl,eY4HOQ#I$lk@kVD!.f!B8La$X?SZM4BL_`l%Ipk$1]3;8ak%4(SYmN7_ZeOI4Up??QE`d@2r,8J5T8t,Ph
%o.dZ!S-X]dB=k^=!a`4]^8^tr335!HdU82TA/eI8cFbie&[o=m1k.7n=D2GUBac!@9Z6<4k91<FKC[;339[]n97o-h,<-OH+h&(1
%3>(4_9ui9nMWSJFPEUH2MnT/&#e+"bqnL8PDmKDt(SP!as%OR'8G7OsrSM/cG:Z1<42@;j'iX?CHbNF7.OKMV1M71DHbKUW.bXFl
%%<s1G^9]3ib*B$.:7UK+AmPna`ais46&a">>+Odj3#6.HY7ls2T,(`tr?/'=(l_cs\\;cFJb9X^M])]2mKun!XlD0Fgj+gBSme_Q
%)U-`I@%5^+XKe?8ZY`,^qX_-eKIhtA,n[F.65G=a@jpLD#a6j]j1Wt)g:D1uIVfI7S\G?@=h1\RrDT[#IXA-[Qac6SY;U@_1l7hN
%nZsKi(7>gd7]b8Ri*4DbNDt(9im*C3PP;ga[F62h4Cgj9o9*#^e)W$t]-sE!RVH_4T"7!PVEF%)m9:%7"=A)/Z'+D&7?+a+AmaIm
%bMBet;qd4j_0p.UN=fI\XYSAKMiDoShZe>n@j*8#,_;:-n<*o\P/'^'GY%riZOh@i@29c+@8RjSIn9\p8`1m$]M'pZ(Ed94#p:Mp
%UbN*p`Z1S\NZ]q/72(Rs&mM_qj^ZQ`]OW-3QVG]"6jP:0'<a/FL,G%O+F^?Sm#-HTG8nd&*><G\2OO/!-K<sFgbJ>s<;j\I:6I$G
%R9#?+F:6Qb`oYE[aQ+,6g!Gi&/PNLE+laO6s#K1#O8J<SW1\F(cfFer[D*OIp8,)7Y?_*i4M<PmeP#K^R25-KH]0JmP2ko8U-e#A
%3.(VhWo^^0peALCF)pDT.E-N8ZQ/!C<`3UsE>YJe+uoK^4WG7'[dmq6AH%KN^a-d+?=n=BB40;&AjO>^M2/Na*h')Z9;=N>`fHHH
%'Gd4)DGuNSkkqBDA#4+KEmm?EGgFLN`=mLB;o*K[2.J=J*#!=L(1KBOin3N\P;pQu3+#]!a-[r9.u@c[nksKD+H@$=LEqnB`%bk(
%=Nnsi-?5!TT9LU]0b874oTe0;XB`Z];dP-*k,Y@\C4!co]b2]jT@OrQR'?CcTN#*J0Meg"eulAQK>MC9IhU"r=+XOe_BYnTKj:-p
%DJGa-0lZ8>Z*9B!cSF8"NH:tmA),RTl*^FUe,S:pCSa"^>$(O!:"0l_rFSdj-Pm4$7jto]kdN9QEm`6=>r36caNslL6ORqZd-nZF
%AkJ@[N2Mckof-8LIE(ZRX(K$`8(j&70b'3$'D*.)g7[=<pc7e"0092*V>1N,0&5hAMfqleX>%M]KPJOhjHTj?j+K*%/)_uo3qJR)
%-'Z<dTOY7u'FjtY,^mX?_&6&EMM&cT-[`<lR:YuuSZpJ'p_X;gEu0X&%U>r/]^eR%n^Fj@'43B^jea[D&oTDmjq;TM[_93gW\Eu*
%&oTDmk*#A@s.V^oj'm_\T:<8R(LrU@G:mmu&pGsJkB[q;im,O4J'>lPk@1,@5OR=]HG+^^o\t\[`0Zr"?Z'.T!,jJ2&rZ/'`B<KK
%l`4p>DO$%:&Bs[H&drpQF[>G\=9(@cckg4<(O[VHADFlf\sj'_VA"mu^i?"X?>j-S?KlV`77$U$=/rWWDT3$c[G!it3)OEkDH^9]
%o3LgQ(XXu-Qp`E"Eu>^Sn`Fj,/R3D(74rf./]`6@BTm&64,RW6*Z\<_c\[K4hs][GJ"Uo776t``k%=S4aPLWRRTEh;5:_$LXL(Og
%C#SaF-J$T5J3DMu5"oA*fQC8_(4NN\BT,#iOjZ%E'jH:#HEG`k#!Vo"nPm,9r3tJ4=jmRc"YITF:f`N:PPbEp`Jb@$AZ*!9oGIG?
%qd62RM7'T+QCP8VPcp16?];J+]_4Dl6:=\5.?V0Jk/M^D2mIuJ4(uo]lDtmfI,0cjq=I^U)LaD_,p2OB^Q!Qa*t(A3AY+mU`$S)m
%UApfZFN2o$>T6+i(W'NM.rWh`Y/d!-,hW&c0)TKcg,E"reqNL4,nY`$qo#ND1s>#Y*5pa%R!hgC_h5H><(9=Y$V_"a(rkTQS;FbH
%i]P/q@F,0[&KLGr`aM\M:BUo4g8]V\10kRTQmg"CZn5os6,jLOZ`YG2./@"IOE#51']^g%XT+f.SAtnUo%;m%)Ej"fd,s_d_-,fS
%j:7gX]#//(?Ul&\--SJ4/Uutrep5o\Qk*1Pk8+e34_QIf%23e+_tTgICIiWt4:23KV6E2_5)#*G(mC##A32G(%s!))U]`\MFuX<?
%c*j!Ad)0@OI7qS3C"g,4,NF$2cXEusYZkc>DMe$T\6NJt6YLOgai)'XemY'e\a4^KY0ie.50q'Zi>>nK]Ej/c:*Pdd:Q0@JF0g>F
%3%r_*V*-u5^mgZj2"q23:<U7"^KIKl(FeE$7=dU;1Yh[Vj,d\%U6Ab1`\%ZcpeBO??)7+WV+I@Z/"Ot^(g/+29A:mA[HMG8Qa#/M
%fh>\!@@!I!EX6Z)n4<%oe#TmZik2'@K06o1Tar&I?SJ6rm,J:++86Vu4.$h^D8&@Z,ipTk"M\U.bbKqLY!ABk5+T.sbMP..0cr\b
%b3Z1O`GVdt5))I5-A!k1lEq:=L"ok<cJVk*\l+`Aq>7@j#5QN;^RYKJq"pGk.0B[pPj=Zb.bj<sDGl6rc+E\=WT.S.`]38('`BoP
%"[V7=WX2_u]Nu+,;L5@j:8^kWfp[oWZ7@@@nT)!kWXQ!B/Sq:&Zjis2#e]lP$Kq(Wl)*WVg.(C_=3i_Xa0cSaI1rRf;"e2N=@o>,
%4^ehpeGKb31B<s\P/Jfj7D9uIahRI4.5PZ4Qm_6-n*XM;5B>r0DsZ7)S`@Z;^.nBT]t*4]hq<(#5&/oX.F?/Nj&4j=fqoi1P8,Yd
%R>uJ9ot#luVp)q(\<?V/jI_DG@3RR>-M?d]ETqBq\21c0^BOJtAZbs,7_YQo>0bX_2'Au34!6VG@(]HQJP,p^%ngaN>6rkY4<(c"
%]C@AY'J33j_ABK0?tIpc=$(2EV;(O@`T\u?[48"D=3^TD5J3.K^')JN<d:ai+9@q\gS]M"%`5bMI\d2cBquHZG<c-,91^/>Vf)S4
%Jb%eSp$oAO.fTrBT&Ph#s"_$D)CPbMD-:U(<):k$lDN.OM$GT^&$Kg-f?,=O0cUGH650ST%LUY272(;D4rfPe]iOQ#g4N4X<k]fE
%^q'Fjb$bBr1\Y<NKRPV0/4brRo';UVqi>)G/sdBG,8LM3W3cB)?g?QWk`>Y@c$n)A1Nbhm[Y_4_KP_oL'4Le8KrpUGgI0[@_DW"7
%M6Qs'_U_OW2%d9RYYBdf,&@p$qjW;AW?ku+7+`j'2A*BSYl1-0p*7Ad:=/tk$er![[1N[QX/(b)_pGMor:A3$#kCjH2AHZT8R&W=
%3BHu/BH#foFqrO_3(%;^6>Z?@I3<m")oEj:OH%$2>$9SQ)ng`GiWXeCm8Gi:0&r">q;WpRDmc(qkg8K-6@j@\6cqiIq"q7Y')\(2
%UC$f;D]?"gNCG7l(M-c\_Hg)?Tg,.IXBsH[D!M&B#pWa&5s;G<kNes>eZZCP?5kk5l!f8IODjW(,lJ#L;JoI+T*K!I6/aNLkYF'W
%8%f='$!OnWRaSTcZ2CQO](j<][^JZfF$X74@:Xh/31<n?leI[2CrXk*Dbr'bQYubaY6U2Pn=j\SJ`(+9<e^X9^7beS!mdD4m3@3W
%$q04:GKCQ6:6_GTF%[>>85[2*!O5ZpS=,s0,E+8i2ZJUe(9m.A0Ke>tlEo:<l3rK`ho_[_/J%5#e=j)Vj)aLX=>slf0?a.>j&rI[
%gq*>:"8k:eP.VN/8rFq6%20`%;r7t;@!q"TH'F<tJessad2`J$+-lE\B*-0l=NQuHCc#HCDfqefcNl`#EMdL3D-LNN5A(*FQ,g!2
%icA7@K2GM<YM.%Ab4XtN0OulNQ"J$b+G,`IrQ/M:E]+=3ctbElNiM"1b$\B._-l&**mB6l$]i6c3N7+"qIB]c0;$i8Dksg9ro7<]
%^\!+V^X3?kr3i*_\u2JYjP&"ROj,+fCPLt*j>6[Nb%nF=lX$of,*-'.[+'6I&#hCkE&2U9/^r4o_*uo(jVVKhb,PQeFib1Gd)L^c
%%BkVT=p#t6EiN.8T0sJF9euUGRc<q$WjM&BfCkn6T6TIF`HOs:Rs.hL<75#51(]D"%nF)gq&<YNgtd,'CYa0O>)dj?)s.;=am@4;
%V_Xfd4a$%tg4")g7^odOl*fG_!sRt\7W2EgeaOK+'51>3"QC>r(iq[VFN\Kr>.UJaKm?cTkLKS%>%[mW21j+Fdr5',J,Ig,s)1!,
%>HY?Hb=YTFF602J+f"&tN]ZV4TZftqcq9l*0Y&216e.,p3qQW8UT,kp4S6g^:0%/PZaAf8=MmZY\29`\3KqtdCHu?\6ou^6A!E&b
%^%I7hmCM=`ql,d*,Fl8MF13*mXJ@GuZo-)`/^9M5@1`$aAR%lL>Qp&,A`S]";ECmReZkfAUm/51JKa]]USEeHm]H14oBPQ,gX@DE
%e3(iD$sTd_gOu0#rM)/k/5/a\efE"4LL?k0MX+H'X4uc59Pi6u$nO4q-7?>[NSN$2;CUGuc#GGb'h;7t_fG+[QoLu'30p[-,;?B%
%Rn_%2bfSQ6qf#:eeZ]KQ[g\`\B!,9TA=C6!_`JArI2*-"a&_H#7)p1]fQ;5%:!+R=_Dc+2+.6i>Y/6Ihe_69&Lg@477iEgS_$66!
%omcmO"*[X4eL1Td#095l$iLGWoGRtQWn9Xm7]J;%9NqJ:0==*7JdpY#]?gB<pFJ%2AI[NY<DhfLbR\$)D%JkWZ/=?_\&cno%Ge7)
%Z!Qu&'P!9REf"iGl!W+JaZJHH:])QR]SBW3H_?TVcmIHE[k5+*86KEY6jbTJ:0L64CiPrt06Der9@GiH"Q0g*G,]0iq+N\V]iQ3b
%ogu1Is5O?4fL)5A:o?UUk,6q+N(-K"0A7WG(G4#gT4mWO$rfF(s1M_S%)!g&0R(cOcN^a1I#>]i)5_lWoDP&L:Z[\p)oC4[-oDpf
%F<pc,BIoKc[=`Rr;6IdoK3C[N%;8]6qmf#Eh-cZ=O[?Z)qkg&t;:9R1[+2@$m(6.!NLF`W8G*o&Q=M4JV4=nI]ZG>fX(]s>e(UJ3
%1@C0rVO^!V,D:82+V_^1l=-m`Js8rVe`?ZZi6$**nn0H0K[hAU6-rn9RT)e`e)ipVkZFcN4dlcDm)%m^*8"Q"#J4pI9:2h^jgle.
%YPh(V#)QR2jXtX67jRmVo=9X"9M3m>.RCO8f=.F)\u`9>?=VV)K4_\E"@<'%_$4\gAn6*IV0WTJ[Z*Ji0KcRQW4sqeYB2k-E3l(;
%2_-"R7oC9u?@fPsWAji)I+c6QaGi'*I+mG;YL>FM$Lu@n<>entgn5On2R;7*,;<u")F<WN&>;DuQ"mG[4HBc`>QeA#`jBZ"D=E'B
%(Nj8(_[pKd=)ZQ:%@)*^<3]JkUGRcg8MOW#G,64W,aD'o&kZqO?Q"Km5q\p!Pm-EfTpD/?@7uTE\O=&D<1sL%[S#qe5,qjdarCaO
%7[EM,HL"pU]W%.oqSlqaS6,a^!1=3iF5R^[h8`I\`=X\W9<["e`WlQDOJZ=;@T7'8fg[E+'Ha#M'Vf5B%JNqC=M3oVDd-MbN_rsg
%4%A1+#/O<ASLt/1=RJ*gZr!NC<NciH[off`\SM__5[*Eq$JK8X^<s\h&2dMc'gYn'S<VTD=UbOMrj@N9p8I+=h:4t/$<6BBis=rK
%ALeI2h0<MGfjbeAQh&mE:tG[T6*e5lFVQ,ApU'^6,7Vq7=('):Vja8heCu/ZUOL1bHQ!l#OK%<>kKp[\B[.29R!'jK`UI4"NRBN6
%"XVOU,n=i]U\&K*26s]3B8D*B-!HiD@EKZNQ*qbee.KO)Xu8c%5L"5T'gng[@TT+(Bc(L16Hl>8\Z>bO86HIU%E!"5l=_,t1_d@O
%>Gli$eGa@2;I.ILf@&q,%8m@N;`78F9`l(rH!RBYZ`Qel1rN70hh8jp!)C1?WVZ40-uQt9V!;F-1npg>D<?9tCm9[2p`_Hb5brd7
%\K#=te+3,'&rF7h!q[aGNTn\*?8EnH6:Q7\K2$e9<sK8uHF/<T7Z1NW+$ROt$%`c.>.9b$3!Zj"c2j5HJkg'hr&VA)DKo$cFM)eP
%nT!pmPPUr$\ITIE9P@G_jf$]uN%S,0OUrME-SpeP_+79MZTfq.01?OoT*E2hRAa)M"%B$)*!QOe/0K0U#mg6h4_E*;ZgML)s'k.X
%bK-qW;MK(2CqQH-`GAMuFd5,X%W9;>#2).")hV<rH5*o'Rka.r$]cW:[+kY=d6]QZ``h`+RG=bj2LA1Ks8'Qghn8L`hobgoF9_H-
%?5\1ZPZKBANN-l9(tetc[>KbQ?L`cXaNiK.4YSedYre`2@e;SPIM]W1mNc.I*/&cP^!W^@*aP<Z!E-u1-^i:MM;.-Qqa&RP?5q+g
%FD</2Dq7^'+bh]9$bgU0oms`Acu@9GcooU15MTT,9c_f#p!QR@?3R1sUIJ0THRR\$NZDUo@/qnu%Y3uIi^Q59I7!</Ur#\dW!nZ5
%5^`b#F'Ue"Irf.sm>N2\,c!3bc2M\^S/3K6p?W'73AQIjaZ1?l1<?1W1aHNE4`=B$EnOk@'FL#U"$RglYmWlp`t29fm$<RH"Wu;P
%/R'*-.e'_I@)f\TjdV/-,6eOI[6_<Q%D]s#q$emYPh5P+@%F/s+<gu0!`rJSp#F&qV-;_?\;n7+$5_Y.[A;Jr7ikEN/c8I:)P0$Q
%:;(P-L>hS:XVY^HB>'LD^u@r9CFPl.C,-4OkV\qLXjh$tPdLGA;UBF95Rg8LC=f_aP+S`cgVc_g*j,/M1H2s9"'-8`88-snUG1X)
%>+UD[7:W];efW*[(oOA0Po*>oQ0Qk:nW7.)J8jO:L6bKW8n3N1b=eHd@=7%.*l\uo"PCmi/Y(&[mU+$tiVjkJ%['ZVC[HmmMX2c+
%?mrhh5O-MJoAS)kJb?;n*K5PL:Idjg#1eaD$G#HDPa_8<Y?gdLqOuCp@SKcr`/^X=1AV2@jP"'hpMihSF'0$k8crNg@j^ROQgR5j
%US\LIO8Whf$sk]T\d'<)H,poSFan]J(ZNhWC_o/KXmd45M+JGage4UY<<j%[[/&."90Gb`+fQ9q"l]O"-\f?Eo7MTT`&2!R`T\%S
%/g*5cqdo!'E`EtqK&Lk*)#%el:cdFg%^i'F9En4To13p"@.d6nHS4D`nc94XB$WN).+IOip*m-[hU@"GT5M:*Xh6aP0/bF%3RE4#
%=)]R+,,9C"s88`m]rZLE+P\D(8$:]i+F,ep0s71+\_*Zm:9$-KSV(Y9FZD%kd-4`-;GY1=!AKfFs.%9eP%-4l/6_)l\k"tl<23B8
%#3$iSClC6p/e7Y:@c)'&Z5I6mjpT\5ab:3PGA"5sm`K.eEr5`oR0RrE9^[+,17fRPqRF-8p?CThn(l]KroeSi]@5Q9hJ?NMmN!#0
%XXuc_<P3G>U%S9$Y4Z1DkOm]<6f[uSn^HO9SS"d1(O!2RB1Xt>#E$sPJ'23&.1^X2^8.CfCp,^"40=k'#'@2X<P6rEV%254lPHa^
%455L>QE*,r<m%>hO0<p,.[JsZLN^D9ZtY$BCZiH\c5IeUf.tm&Z'F!,CYu3WZQ=2qH/ml<m'kpC>NdD`V&Wb6D=+%a?J07'IJf<i
%c_]M-mStmKq0?WM[d\QTZ^%\rk1>n[L#p#='m)h,<VQpFR(rLqf$4I]_7RsmlqKQc@t.<"'`%SR?W)g>GIF,.IS1W36+:lAY.rKF
%e"cC-rUTs$m(2fU@HMD)6&cB6SQG5E2t"0:e^A?WI'oKV0eToC1J@S>ea1];f@?GIj4B!Thg+eZc,#%%X]!9Q`D;cLh5fNEm93LJ
%4M+aApiWq6je/+QQC^<IDm"QSA;Y#\^*<\04'MqK3cnkK^%o=)WKeN+=.^OOD:mB7:FiledCRa^c-j>;HFp/29pY>TXZ&L*qlt(S
%eWo];-+DjL,cc\rQe0jeCg`l7.1Yg)909]_m0@QRf3AtBk/d"@ZlV?9F7h2egMb4V2mpg6T1QZ@C.j**1[E-bS<f5e>O,8u8bFW]
%]4.lu#(9E&.dH1%L\VBtqbc>/lA$^0A)Rr*81UJAFJE*th`&WCeRsSQp1aEkmRp_I\$l1![\gaip47kR.BCddmB11!kLWL46Z8T7
%DjA'XI3Gp7NYpJ3cC2Bb.$Zq$L[\FT6!\qcMPY]Q^s%/Yqun6&#`.YuotgK*b+.Y0XlcfF?@Lf)]Z1Phf&c4!gFr+6cSFZBV0;"^
%@HfIeY3F"/)>j%&#>hDt@JAU0kFI],P^+M/qW1bbjojr2$U/:nlhRTfh(g-&[-Oiq5'sO,QHg,O%,L8VW2jjB`k-l?::#6;g=SN8
%qjbln@of$6bi"\meSO(?dS7t7l8%TaWT`DP;p`e?lI4%!+WmXcjhTZ)^\3m!D<RC1=l7mnDr8m2+1+,CeEiVuM=c2hh_jjGll9Tj
%pN._19rcL<lPGj/2-+`Vf'.tG94dulhJY=('`[7Y<]C^aOcUR%^!+HH8pG6#rG)G#m)sL"s-rC1.6qOr3W!-2R5t804Y5Zs%NIoc
%H!)c\b165SP4k<!]kh(>I4H5Fg;Ts3Z7jKF4RF$iF9CRmO7R_-90W"@C)_kdY$>hXXnRjb]3GY+XgRmApFffrFiuc0U<1u8X+$>7
%Zmlh'Sa.@n[$:mn0*GTcroTt*XQe1KA?s,'V[":RGd#_k5c3f8lVd8p?MgI%c('2FaDY%L/f/1'=-$]jRIe>mp!0&uIBTm@]Qsh=
%Cp,>#T0eDlG1Z"L>2bUOq$nacj6i4N^H^^@OG+<l<(oOQpp^U8o',2YC!_)KQ[@i-!)`ODYYT2/Uba[]T@KSR8YYeX(H^gRUZ5VL
%qmdVB+\s0@Y;20R6r_$;Tl@8WmtMqd!k@C1dP<JfIcW,2"`>QR8#lOkeEU@gGO<'8'F=O"/M-F9%p,Ad[<1tTk%nn4QE*tkPnCQR
%=QDUEo&Yf&_Y1.C6@L65>X,48o&kci9A/5g8`P2H'FWH7Sl_L#4)Z`1m#r6@Vs<B1f,=P7]na5Rb/5kmFY?hO_,&C-e((@RJ%>A[
%?!GT;%q3eWRqO*OPecd((+!LOe0JD'Z_I.#IsjqhLHX]0QDI;e[atnq\Xl%9/j;+8Z,egqBIo4+I+VL99-&kDBK+RP[#LVqps6eq
%>GMN7kCeeN$j*\bL,*j)Lag:\LP5jl8(\Sk9lrbVkb\t&\mMZ%.jl5nGnq\SWO.Ao&k&<!C=9sY3_IKIp"$1*#\Sgd@5lpr2IZl_
%%@uD/PL26$cqW,&cq6h^d5XFFO=EkbVZ\[CPr'5!]dF!bh*`X_=[0nF3\>I#jAUjNm8\OFSCX#i@djR;/r"TWId-!"L<Vu04f,ZO
%'uVQl<+(]>O8I>4CWSn%+W6nq@2b;?1YTk?k\tR:0);oU=$AQP!D7_QRG);*GtDEi7]+Lpfa<LZ&rI:DWXP?uTd=D30"IfE$tU>D
%F^tNKA_?daIaX<#(Tu0UR$#T!,MI=n!u^4"jes]Mj:e)9&6IV4PJ.*<r_7$_d*:&qVcVJ'_;K^okgCQ@o/A=<KcO1,Kl6UMp+CkH
%k-?:9/=fj8gP(RZq3.@$jlG:`m[JDR\8GN#.+oH#V9nU!alSVXd;P[I%;=j'aa$fjE+iQiXiFf_Y'_5QDV859MM7"<qs],\#uQpf
%M>I;/3;!BmhHaL#1@d)jIlHG+Z57uP[!).(F4T3Om]I<aQD;2!KcPB:_0q?m(#bb3*qhgiJ'T+tZ7!Sr@9-Ge65slBd5m3F.Tmnf
%<pB9k`r:(!RQkILq:`$'N;;K)IcfbH=(jt-Z+XJTh.n&.9kG%SXXpFA:[-668.TnrLAM_(jP[0E[V"9t5Pm,*=0Ge?)jQVJ?rHHB
%cV\1WfC",.mO\liQ(T)L>7umPaAGJ*?08YYs7Z.1=8?HFCgC&-Y/0aYU&nJhIC8IkEZIZZ0$GYSiLU4F78q:SXL6#f4KKo=i8@c;
%H@=m8mGX?0lmiola,b:#X7(*KQ"NlOfmH4['ld5kJc!n"i@UfuPNUoc"doGU<I]NrL*G`-`hUsQ#5K7"Sl'YIlephmJ<#D(&#-dh
%1fX5#J!gD'b,^6"(XLn7hL#,,]_5W*dIrO:mWMsn>PZe1__=j?jW/i!Q+qXY\d)-FOOmOU]6#J7G8=21982#bm74X<esB\;o(gC[
%_JZLI<EjLE%VL@[[>,\C*P595aM'^g!GpUoO'!Nto6r.[lKIS/+hpq;57!ja5>pk&cK0m\I!OBVSof0q6Mk_[F-F63FDl6ng"s[O
%kHE3GR)\dAm-Wa])#bma@e">F<9?jI<dT-gr"'&@Pg+5+:f+&0+i-C!\-P-LI<rZoY*f<5,VS.HqUOm&2r8c8_n!Iep%&'0E%u;!
%72nJ:SF)TV_;%.iC-/Wf\RZc&,WoB#BKe3.(&7lAg@Le7LWm.&$:HFeo>Q>?c<Ims%J=aSlh0;F'NEQ*i;V;-kN#k0r3c8?HIrXj
%_P\CpL@\k;Ph"T`%ZI:hL&0=B^/;eBkBn/jXi4PbH6`bVHmL;3Q$JV/2#O\Bb?,Yh0&p_XkebJ6YZ8c6+10R2mls&$D)+R;5\dbV
%/`U[;ieEO/kN81Td)i1]bNh6Z8)J2OSTSi+0@Y"nRKtIShY:E\j>Yq4m;S4Pp,?me040j;/N12Rr)4q;h``npo5!%EnM=-[&Td$S
%a<#Qt%m]R3f'_f:lUk&`K):Y'XG7>#4$/pM^K7kH?<gh*Cq_F@9i:^\?$uAZj3XaD\(BJ@01b,d5%d<LAT6he-()R\>C!u'>U24^
%oq5t\5a[jeH%(!FoP_JNMW^Z.Sj2#D:hlWo=6Fi;&FZdP%m(YM-hD>eF:tZs=]$`=H+e;-dac$L[l09'ABp)p\/sK!hViB+mkiYP
%:?LVZj7?mEMfT'.rq6ZDNF_]YrUb16pnmfhba)&.$Q!#+)r82Bcb<IhVQ]IUI",Jn`=Fq8SW%XC\5'(XhQ/FK9JbC:k7>>2(RFCT
%9%S"HAT;&jD1jAT#CWtN%B@Pc0[8tile1FjqjjjDX7daXb)s5cU:0Znra]Cc;Im+=^AQhljMQ:MEBcQ<jF$8OF.W-UCu@Ep'Q*5a
%AS:W0<Bqm*(,e=g7!:M\QJR%C`KNO1S=]1smq%RcX^'uP@;BM^YiJs5X`o-&UYM@%U"O+!I:I1s8g![%V:1X0nQ'H"bl3q6pHY,p
%Y6rGXc\q4L:PC\_OP*%!J_aX9>;%(1Y4C0T4ra3-,Fno]WU`G67En,7mE2UWmsWttH+7sI9YS2e\ac@*29Y7:SF]5]cO(I!*h<=d
%X.ORMHu#'>fWpj>HgTY4m#u#EB(KtAs-Pf2Irm?\1=,^4G)IoM`H\.K75Fo>B`OL4GYlIm5(i74Z]EMM6@S=W%)\$G]^BWKpH2rt
%Vq8*A2-U5@Zc^'-W#%SgV,l/_CZhDE#(G;%S*.7BgWpeJ9p?*%b+h.;pt=EBm=VM1rr24":Ho_XA)YSs^ITlukte+Eg\i@9:Nl'p
%!jm.9W#lO(5RIddq?-405.I>H:"?du<*4Eqda#LQYEl"kT>!E;kK?kL/[FC;@p9/2IscSpUbNV+org<OZt.(f%k<$0O6YWn=7/A9
%^O/p^Ef4:ogP&<t]2)n7>tfl%J/a*08%FUTq3NbD2lI1`]fK@Nm&F.1L!@j+I6O]MQU)4RDcfdCR:fZ<WF=r`]jRg0'Eoj75b66!
%-s4soQi$M3d+,Oe[b!PfmgD3LqZ8+YG$2?LA5*4lpGGul2-<0@='1O0*N<?Camod]5j`Xi$fCs;=mF_X@s$?Q/FQXrm`hZ)#DN)t
%iE9Tg@=XknlX0,Efaig>Pfu1?:VuND)hAn(lp36+s1R(<?;IcsmflEJg;>')-RcC'pF`lZ[i&[9qg*IsFnlndMV:cXV7$#J9EM<R
%p%O*N3@e^LQ)jMjD5`L+b32sBbg^QkT?+1cYU)rP5BI6f/q>Wns,lXji-]6amqhIAhU:7n#FOY^,8G)4$_MtRFrh:nKPYcD)qs"+
%bbpM?[O('aB!'Sk:KH$tY`=Ygn2,:iZ=g`0];7H&+3uum/`S>$.\:F0XgS&CcgTsP=d:qg=,#b&H`fK[KOnM=H@S3_RBt)V'm1o^
%li)%8HJeNF),NCJ)W/Ho.J+)6k,lAbfitY?:GQRRf35A00q8";C8D)[/6dfO#$0^KiK?:T.QH;?`^!VnYZuS&J'PTuiOJQ?ddC]F
%`VPC2kE"JKhY"VNhp5>)+%\LTj>=t*H%,AqVRn&6!Hb^r/\iE4;8HLC^dPn]nf>sErM*1\'4La>q=n7S;5`AcND:6o+`PLKf:<VT
%/it1Ne%7p>gUEB;r-nHA4+FKI>ep<fICf$7$+qamR!.5Fp@%OS%rcm'O'PuVBA>6M\+u\Ugp`Spp#H0rAuVfQ_YKkR<q\cGD0IQ>
%NX_@-V=Vs,0:/6Hf.U;B3DC%Yk!-oqp!h;[g&P2:V8SO;q[mqh]B/t@UW*D:rNcC/E"Sm)U>8e_XBi`&[%>p>?WPKl7qoAXDY03_
%%Ru'/AW4Zjl`U*Xj[R8CCUGl-!=ZYin(g`Sjk]n5bCe-uoD\HMqdS!P8+>%/[=-R*8b-T5g:TOs'Xp-SFi!s$nY1!Mrk)RiH0h.n
%GP!Gl?C7tUI_uJ*l^d\f#<H,Eg\]p!J(hRucb.M0Ru]%)Ot7;V>^hBaRu/aT/\>OS0`(m[135Ar\%`_7-Td=4_cEZVN@%i[GL\k$
%QZCr"r^g[rA8geGrpGQBrS90'8W'%Sg-7*\Y4=?nHMTfp:%jAGUI73>@%VpsYu/Sd11Yb''pp/*fCO]"jq'B7q+C@(CO;V?/R;(W
%K<RH'S<lZ"#aL@Md9$(Kk"5[GCj+!kq.iQDZ3'2"(o8,G?>!%!`NRk!mjklQ@uY$E52Ip[Y'nUPK=Y5dKQIO65T>3Q+OQd/Ir^Xc
%I-7-=Z?u:Sn,5]8.hS0-1)`FVE.V2&nL9:cotgg3q<Gq?0Sl<Q^jc)B9?%[#<4,fND<.^6lh*hp".&<>[DJ*<%,UZXe$]+i]dlOk
%JJN.%esl,0)588]91=36X7<DJEa%GLL[/.CWr@:/"If/k^7"'.3Z(j\hs7'W?SX9!X>ke80W!^tDQ.^WMf\e_5Ble.K<<#0g7-?)
%Cr1qPGO&P74PJ06h"=D#1%(_sO[4a31p"AarHi;^;auf=T.B@P7(0g`.+gZOhAck87%EXG?lL1'*q(Zq?;s;,#s>/q&(C?,eH_u,
%FjPTI>In&iPI-"Pg2dJ$hLC3bIt<@0FsKQVg"tEYZJN]nkNiTG9Zu@MDle;RHH%UodEu"ejil<$f&tXf]=*3lk!*4&ehA^q(@5l,
%ej+>IP[P_9[K5QIQ+C1EZr_("<2]B%8+%>>3iH:fkNhS$BY4#iZPtj2ZM2_ZIbTOl^;0'\Z>-O_n)In_2lf_Hht,".obp^'k.TO`
%'jQLYI;fBs?g_@4F\1-`n(HUW.FRGEYroQt2L;1'q^SnXRb-^\bqnf1s0*0D.uh?jFIcKmE=5iDWaMZH)mn>`;S?!JIL?rBfIAb^
%Rbt^eaR7Yt;u#jCHoBQa?25,=#l8t4=>@e.lb$QAX+banD"U(aHI8_X0qfn@NX4D7>C+_R*)E6r6`KE4.K%qD;l\uU1t.+2-:3WW
%J,coM8uL1(<3\n`$af>G&cCtn4HQ"t^4=Xr,0C''Ii[C+L',-)#GfF6<ptLq+>OE*3`asX1tsA'83)E5)t:\n1_n$,U^bAk/GR!F
%31:<Z9P^YC>NCDC+G7A)(&Mu%4BXsfm]L"bnu5/e[OT]I_[l[SX+AptgrS\Z2E,'!g0X/-OIqS"GS-QU]^Zp>k2m&T<Y#&iTECFS
%WVtO8?;N(p2%hg]\XBKWCOQpqa>Z$mI_9<(X])lO$\"cAeCaHThUJ^(n?/M_[0kc3nZ(X.+o7d_Dg`Qgou`OpCNEDnX7W3$o3S4#
%gq1_DOH\SBD-e:l$%9ZsiZg,&h0<F.]-VQCBmf(-7jYgLAA#1+Rd:Gg73e\pX`R4d<mOZ*nX<dl2;mYrE!!r>8VbBc#)]<@$7<a!
%FNXksUVd'_LPhM,X4p$EVCgOVnJOIYS1V]'U.A@nZskP#C0btTR\`(oBlm?L]8l2TW+q_q$:2+3Z%C?47R1Pk;PD-1M:ONnSHE.Z
%V(6FeK-(,gVA2TU!FhrIh:)F8]4np$R+)8;jm!&()Ra.;JgQGJJokZ/+Wti3$3B,NUiKSf8Sad6Wi@\M3!?e].tsA%:<$_R$3@t]
%$@H=C<Gc$>:^pStL^!>h+Vp<k.B8h&+D0=2j[^j&Bn;E]W#17VH2nLjb=Lqa:,36q2,"?t1eZl-)Qq6JWj[daZ@Ka!ani59PCQ?G
%-FhcD7>Fd:Y*CnEMCZ'.BJ(a44,uZo[UWJi>0<[DW>8;_8#rYIbFjaQ@Q?73W3fb/.?6tbVQ$T&2-5DP8R3Q8M.],X)DI?:!fj.1
%fU=F3&SO*4B%YHN9`i.e2'b-)[p0ImCT/W_kr*LCL*Uh^Rt=o$,2HulYbFjHChc3XkYAHl<_OOSB,]-fM]b0"3b3gNkWtn0egt2t
%f<csU<\,ai5T1LqT]R0"2/EV(E-XV1M3?<hl52!Q)]#Go!ccYs$Q+IZ:YWHIGZY&r&!MWG9g&r$O)TuJeoXVTSK*=b,$$X%9:Iu0
%'H5onRWR7k@HoNc#h"hP!^ukc68O@/cm"1DMQ0+F/$RN>eqoFU?q*GJAo"cm&F'6Wl_[B\PbG[b\1+Bj]N8)hN0H.;%O*J+<fU`_
%:klB0E^m2Q&ct=eDOV6"!Rn48?.9%VV7DPr0G>p=-J5%e#EBI0.V))SrbWJ7*f+U!=O,G^>bD[CO]@#)&'Sk"2P%btWWCT7#&jXP
%BTjC:&I@_(S3_]k'hu$HMfPc]3coW\W1DLU+tit3\gf<7@")?R"Q\L@QBi'ei=^0Q>a'K0+<[^5RbXD8imK([NVA@pK[@dWJHh!@
%)I<-JJ3$6Vm]mfNP,X6M!EoKFMGUscgfCE<E6.mmR5@TC#,)kf%"emA)=#k?9+/T<B-:2/3(TkggX)oBJi1Z'*L,#Q.O[/>M"Lda
%PfcbA1`4<=F=mQ%d5()tBF_01=uoS:NikH3a2"^Z\b]h,*[J:*W=8('VG$!`@M4]Q=[Rq<)M!WB#2u!P>Qh#CC/`_l$J#4aL(GK$
%`?5p%K+_,/-;g!;qAhJo+q8ZH".>J?VYV_2&oe$g1^aRI.Zpbs$0[.XGQ=b@_dtrN#6ELW*21qpl;ocIVH5UWIr#\K##gS]M@j;r
%%F<NKd`OI!"u3A-;A5;.6PP97lQ!otUsW1Kd*c3TJ5!P!TRG`CS(#_BW@kR+%VeE8))a3,CpY0eWo>n9Or^W=nVOS0Q*Gq7W>&Fc
%1)RoZJ7lA]aHRo+I.DTF6cHaW[&W?tp&82`"6LdcQ9r5J&:YJ#aC#Wd"77hM]%@oKC.EsaK+_1K%kr7YdNg5u$rnV)"+Y1m=<(n1
%B'?$)aB(`+WL=MtOGq7O9]GR,3bWH+A[)o4JIDe97ii*A0o9CC<8iT99b>9S"bb-OCpAfd`4KR^LB6'6E@b"!NXG#;7^n^:V'-m3
%RfMlGG<]95JY?Nj%b$pd3p&tE:uJ3C[3)=Q*U&Id?&*S2CE-KGVuVa=$-XDdfn:]&,YTr/!Ee59/RiuRMU(Q40L9fTB2kF"*@(t?
%G$5]J^-umF=R)3H&Rts>J4"0@"W7uCe!W3#"Ei4u?cO8s*&WYJ:sES+<9+p1[]6;jp^X(UniAJ+!mAuWr1@d`;^upiVtJ,:c69*<
%*X6Na*=Sm$%qc"4MIf^N"/o`j(?'BDjXgfj&d=tmJHdj:jO"@><&tmNG0OD_Z&'>('X3s8!\>m!",+Zn0`Yc:gS$IOcpqK@NfE`\
%5SV7N>o3d%1,9TIl-RP\d<&br_49%(<'fO]6&r)2FO#DtWD.)/`.@uNAPjfY8$&'t$3S;Z#573-k&cq4d=^hbWIQj?CO4d8kjX(Q
%lisCP#H%V[Yfe4`i&@So&4"qQ^;;<$Gm>ZMP<U1e&KtU_"9(?L$jd89$+^2J6=#4O$hgm+_^*;M4p,d<?ah3_M=]fLXU,:!Q.-4n
%5Qh886.)!LbE7UKYYu$@,)V@T'GNOrk'E/dF7G\+%=ENZ8hI6BhS#a"Ps]t`&D%)\^p9&e%-0EN_FRoca=N6oHlS"dNQOfp2*';S
%#Z@U<D4nf*;A+Q.V,.BF5lg05O#U7'prYWg'9HP+nDk]Y?4\.,Q3dq&BJpIU(,gpLL3hBj^W>%gO_k)@^]C:4;pj6b_)Gm;:c0)%
%L')a_02L"J!#<C.;KUG$$V*]-UsW1T@g!N35TYo)KS>k^84m/TU=mID<&>d#1`&TM.\k0QKI$UWK6Z<_6.a%E<2hl`6)Eu$d=)["
%,a]DkJdg@<L^$PV'2E(oY)@9.N=jOC:br)B7j0G0GRnTNL9on#9SbH\fLCT%@bu2T'*9%Oc&eTeMk2^J,Ci$[RKUQ^QN:orE""JX
%c"Gm&"&O%i<1k!QUJ;Y.@R:9.CE..P;_Em#gbn0D;",C7e^Z6:<J-Ih7,uN7r2Zm:,6e]=pf-q>MSZQ:\;IN>MQ8F!CpYHZlp.<g
%&0=gCgY>p6&@ahRAtbjui6id<BIfg:"m./J%6d3_O9/&(p//r#AnAd&1/q_cL[DTb&sK^RG6h$sUqmC%1'!GEN\l2$_aR`fU+Y.G
%`23R6Y*4HF5.H=fRHbibpg)Zf@i0hn#P^Y/g8KFX!?</V+]&<0<&u0n2(2tu%e2OZjM7GQFF\YPbF'c`Ll,9%m'ei]/41;=Y!I0[
%W;WLE3nep1,pN*c)R6;b`dAmB*>,eZ,uBG57$nTG;@lkdp!^e?>SX%@'nB2s0",H)nc5qfWB(Y-/rC4pl9a(<cRRCP`/XkSU/R@D
%P>\`D#(ZM'.7eTLPmQfTe&\Y"_+I'iE/_.q49G[M&A)-hb<SaTl\6!##TRbB<*o+G5SC,pe(#tqf[\YsKBnE60N+[8?$"i@'SG'L
%@'9-IW;ReR>e9-PIo3*DU\2[gJ!7,,dRAXQ.1.0K<.`g;)bX:W@WMj24h8D9F@".&f9E4U](""<..*;3+a[Q0$K70f;-80c1C=FQ
%\KM-aJ&.Adg(PE(=F"q.$<^t]K8SIO2mGqCfjI^Q.PA@4)OpFVZ5B?2BP(]?aUKgO+!rhPOB!Vd[O@nFC2W"G-Sr8o740q&OOfU7
%?$)Yc27rhnJ+bb;.""o[$u8XRMIG>_NA7GU-T/q`[O*oRYj7-?1<Q7')J.E#R*[CZoUaD`)p+bJbVBo?=KU1o/'eQN$K5$E+#NHB
%TWBIZPfX-kYRO4K*?a&@2^m(V+?PH!h'tdSD-21LOmNH)Y%dK57Lk.*_gSe!#\A@D5Uqt!B3RqMoEK,9b.I'UfX&9:2r1Z./rpHp
%`b;qn&dsseif,8r/e]8T(&l,aH??:pF9Bu$BkC-T!CNd>Ibc5!p*nZ:b!stDR<:Su'.dt4hQu+fmY6e3\?U4ljc/cO(HAPQ]>P<<
%B9Ard2#/oIgAMdJ23rQS3eI5\Fr;ncGD&c+i2JXql&qr:Z$4TjRdRZO&`.HbbA_akU['Z1ilBdOQ@B146i]X-=Y-Pdgg:K_n#m+N
%*b5Zp`98][qNN$(QUWui/YJ.Be000D(8.RhX[V_4'GN1(C)'H1)X(Ri4(S5NA2Qt$9OS?^(PD2/Vq)m4/>P9;!!=!["fs,id-WR\
%.*Ml%"u[05(R'8n#IF2U,.L'XOk(BMVAiR=NZUVj;1ao>7@X",hDqb.-k)V$9u+UhTS&!`+p-\1&:mA7!OL2De(E<hPm#[Tm:$ld
%mU@rE8\TiMW_*9`C`Hn7$^ct=FV`sA[Nc&UMe)_c_Bs/fRfWTGS!^9j8208a1iSf:&29=F]Y%qZ&H)tR)l/=9!Z3\c=9---K5+6e
%W]AKDK/&N'AJh23M4<e?HoYb4&GNUc!@T:P/!I^r_5-=K\r,Wl_$hY43%Q$Nk8jY3/1-E`@RUr_#ad.f_fQ<,8See8eR]J4gD/UO
%b\a"UT)tmd/X&dC$hInfrZG6?!jTarYc^H/^j>HP<A^BGCR`cuSH2_0FK-3(Uk2n]nXqnd`Z,#=!_`jog*V1>Zk`pjih5$O'*4@A
%\4\/f.qX)OB'UA4B#8bWj]\nW--jGT#Vn-D^bJ4rk["jcV2i?^FA2=VEHkk'U^TpB`[jjo4[VKSJ@SbGkY.Q0*?42UU8Gl5RUR4<
%#':ps(H!R61&sSfWs#*D<#F+!,f0W#ZS?gW`*>9D%Q+t:^TC-g0gLSO*Kp71_U(A'$qiF0$-Xm1qP#L'BL586L4^@5-Gu>^R,g%B
%&Yq*n`LqInW`65/baU%U>hA'9V@=q1O%bc\3q0k$POL<4"*+?$%+B]F%-tKZl,i^+d4p*-;,*A]Gq^=rA8gLYJ^,+heVS8I3WRdB
%TJlu2/:k<Q0aiuY:ad0<BE\iDbVb]51.cYl6\bp'I1!&Zpl1:M$of%(R%@'-CX\\/&Udp<fT;jo-(<pk!/_4DKo'n;dAa0TU:lBm
%lBKasbW<UH#_Pes83+%j"]c%^Ujs3<C(^rNK5R["BEm+H"DQu30R]GS&j@F3IaUq\$lK%+-HO8QfpF+CECdlNEM,.#dHIBfR(VVk
%s!CK-),H8)k[8#V@")+4A9L]&+5nmR3%?BZ";mS#eI;#ZNf!Q=Tc_'LQPECQ`uCnl-$cRQ)HJ=r'2:ng(''5%d(+bc<(9*H'Z&$Z
%*7f7sDMBuJ*.UtAfgiJM`^[/U&<0d;l-Y@[KPD01Jp]CW7X#h,?8R""YY7B@=?\c7'T=XHAZUM=;c:[?A,p#"#ciubTa#-Ub>B[k
%41HM&de?<bND,+\'a#R-^d'7d#97>Z/8iFr1!qPg,VH&LP`Vn?-O\]Y/-@,_-a.lOA+*%`h0Ak*ODQ*$#Jc2G+4QcF!A7YOU]Ql8
%-;oFlD%\]3K:GIE/mV/H$LnSE$'ZU$c*>gXT@b"EV]I;!N3+42BToAcR))@Y,ZL7$9bMoC5Z'k]M,Yc4AKk[lF"i`f,kWK\R"'_>
%qC,6k:8C3J]a9oO)9)Ac'M's8+sflkHrUO(-;p^ofd9On5a7*>.O!sL.Q,M#&e>Y,DI[*!B"7e[r!+o4aDrDk'J(*H@79.T,gL).
%F.PEY#pCp0pIHG;ib]G-Zlb%ma$,YZL1%8H[N(bGeKG\.N5AU8Rrq;2,dp&;F`>5M_m0)jUmaG0nA1,*]%9gQj#/6UVURIi<_bs`
%,S9011'guO0!7*=XOsF#*<\IJ0`g+/h;XO+MJ9k(X:dnL,mTGiX=1p+TaK=Xd2cE"+&&](>ct<0QRea)#7<8t?m3f!$d*D$?pU\N
%8>C*+E75#_.fWcj/M**:Qu;7X3>2Zp'-.I&d4j'b;IPVUL1.%_((cji>@&H][g6e4H](0m*AjGuJ0%DHSMM*0N$u?8&>kPfDV-cM
%lTrFFrY_BIa6<q55f4]i0nmNlA0WJfGgeEuoM<@I$qA6NZ^*opd06mkM$,t`.SWPQ+4Zi\0,RV'B.h;)]%pYQ(<5D,2OQ*#a4&SY
%'?F9e4J=kiro',$GlPaUd7&c[\6\=Y'0r1s04g=2S7$kWbNElb1U_O/_07g))3W;oB#s[1fm2%P(<[.q?li6:PapoZCqTY!L`SuT
%+,C#DfFoJQ'W,j^D6k6L!lO'.GhWZ.(m[Ir;3;us06AG,Lt3#f^f1KK+n?NF=ok9FL)g<1W.eV,0K2_nGC]uc'Jg)+p]a+3TMff6
%k"'Od#Y!N<,Y9e.Wim<MjaC[*?lYgW<?%HW95:(`>n(+&R,j94ruLPZdqj>8YY1TKO&K)C^T^r/H@K$$]kj,k]*9ZW7s>D4%&Kk6
%GPh>gLjUp3>2\tJZ.=[c,8sZ2kGdQm\d#[';&7^/'h&56g/Sl_[f?sXljFJf!^I(([t"kd=I+Q<+-pbfGHo[kp>8/ND%K-q+`ed?
%J>&V;/+k(Yh,2n6>kCA!<H_VGm8H9f8=Q=<\94tm>(9/.It5'q>l63H&')U.7*pKL-s`(G<"Mk<8n5$:F_=CMNh21(/Z:-m=Z=t4
%+];Ns-p$jQk_)@"TLA',A*U\#1l+.Z2t>2oV?W;kC'sY4#5!AXGueZ\0)^0X_;@DP)"82Kh=l+!JqR%/)MR0&FX@FjK'ILc^rD;B
%\0)7^4=X!7#(mPb9q[r73VseR#@:Zj^Are:Q5<#/*JHB^_H4*V=r'i+;)%*o0,+Nh'<2XpVMf0taOX0BM@uKJ@UJKDG_lKO[u,[5
%QLhZ(8VENfD$]:SBVu9Zil"2mbng0bjX>?$jUY.Sks*2dW)tm^7JdJ_6To;6`$sN:\!%)RJpTL)mL\Aq!&_"eRjjf##sa=n)VQ?n
%>)#e@n/V`WiE_.LG.F&R+Mbu9T1E%N&k3g\Lj/7GYtTr&EmR(J$!Ke4TNh&k,6>\$?tf1tUHp$*$t6*S1(0Y_<]471,,.[2i_Ca;
%b@*hS2</DG&8%%E>+K10>*c$Y!0SMHWQ\aNg.$[NAoMBOF&J_c#,#ZB#2Y[m$L,(:.5qnAUqS+AJdKU+0MEDZE,kaj!@S7.%K\1V
%Epd2FOA$Cn,))0.@_<``a>mJ]Z4,[I$Q'hXl/5R'&nZaF!`]Z%fT%Er!p7I39;7gc+S?Jd)!saJCj(-%2&D,':DEiG,_L%MeL1iM
%!-,UWZ`8$/]&gM>&@MScS1>=mTG*%+qne=khMUqg`&EA.aXWZEd>ELa86Snm%)=Vjk]h?GE59,SDQINY$3P(0)b!e^i@o8,O3\KU
%6SPf2efq"$?)\ArXXJ=:/(40RO$aa'V.bSA+n(A/AAre<Tl@f[R;T)um-ZlE$+eXi[%c=2AG=]mMkTY4)M_J*B8=+!o[6>p!\dl7
%AiFcJDC1c(O_ces_1Qr?dgdG)7EN^LkC=0_'=eKM'Z.P,1`+#@,QR':qr]XsVIC6/#L8eK;<u5oE<:$6iM)X[Jk,KE)"-DCe[qPu
%#nW8R_dp&D0T$BZ3lIE[09ZPHRrTB/#bstNM!lK](e?!1!7<O-<^W[o0rG./8J6ju+UGkW'/^nfR@&J_X-5Ip"#rS5Qp_K'7W8['
%k/`;U9*?uk/Tqaq!2*J8/)iXg#R<p8O[+$8]NGQC..1mPrVE\+JVW@Ckc"g2hBJ@(;HgV]M,Ood`q%^Ncn+&@(hU2Y5hFiUW<^Z(
%ZIS0<LCbf/di0:i.#_DU(W+$4nEbQ(&>pQP9UpFE_lg-e:-Ft80N1/3&-AY+#9f$H9u-;WN<S;""iEZ!6r,u0GT!@t4nYK.9pUZY
%l9WJ_ITpPj!(?hg`WiDP656n(nC.Qb0o;KJ&28+h6,4>n0Fu-#V*b`[LVgNapo+LK5pt&Y%j=W8:.uR&oH'Acnl[q'*!5:E!>).M
%"AH$D+:TRH]4$Gf8o+n9`AYZ6L[_otl9W5(&I1G1NLO&K5iU8q#I2;=F>l4!aF!AY<OlJ\>bF1nc!6pS(<p(i@8`CX=LTA'a]q@l
%(R!!r,]hpgA1h9X+*f+tb$736Y,Tgm"Ttr5etpRoZm/75b$:#/4EEg(7-9(0,O#B+BpO8lqA5P-FI^b&"W\6n>q'h\-gA3?k(4$"
%R0s'C1)FI<a]tK59-i_p;j+\QA1f-q$VBKt3:`Jn))I_l+N$b4!kKE9'S_GO`)8OhR1&5cOn/rYjoW\&;jB*S%!7P).<>Mq+`\c2
%b$72OXLM0j!g1ftPdqn=GijU.n]V/fLWE`a_)GDNH5`1ZGUu4Sqof4aC*^o+LdgT9bZljCrLHOB_XGfU^nZTaP.;->*5@lO&=%h[
%WW0#e$_/?ebQS#YR1"7o8!c"J\0-fD/o[3jc!18J<\ugX_8+!+3HG3GYBj",!j2o2c<T98--TVU!Fb,B!6XO-![T:$TEfg!hVjk1
%12TGAK'61Z>aT1QMjq8-nPQrX7nR'K5U:OS^0>j1.niqcEE4la]7>H,nk>=5])XO*(4_&,SkR=lEYgF\:6%e:\I82d*q?FZmXdaM
%KM/i`14\O?#ai\=#k8JJ$f0IT1(D:J?4]t6OhDm3Y9J;oX_Dg\-\ij&1gA+/&-/ss.U['G?8TQClU>/i9:oHDCWV8=Qs3X0-3Qkf
%8MH<;!!&90XmdkE"R'_KHbgg`JOd$_&4Wga$gZb?W4J5,+9TLK6Ppc;N\><S&nZaF!`]Z'O9ZiE6?kc6Pd2).5kH@1N:rt`2EO(N
%qMX#7\;fK/d1(LAL79.Oh:?BkH[uYNR_=6,+n;[*;$aMO'Tp'OIh2&Y@;I;t[)2P%79<qc?]9aV$4"eEl,JTMX>%.r(f=gTQp\'%
%0_mgC49Ql:A-&R,MNke^i;$qYA1u$]6UhDkCm:Y/L53E'_N>SniJ#,Lo4GS=P-Yr5%F=<0ZPO&JW(P_N#2UWa8D+A+JF?*c0POTl
%L6;GqY\Ci1*;2&Q8fN#SV.rF+\Y^N]0?=.-0-.p*NG08"#L8eK;<u5oE<<[,/XjA'pP>k*bTMsU8_FJ,+=%>Ma^gNA'Hc1RLb\@*
%-B";#Fbs!#^3"-`NJR$H9c-DJM#bpXZW9Gh\hU)c6(qo$dHh#Whj8G]lieF(&N)!L5R)1ZKJ86*15t-(2U.?nqj.S?dQs!o490ob
%"JQY$SPt2o,`5,83b[AdLfQJ&GF#pm:Z[`J81Ao%`iB-baR4!Q'"JAnLi#?1\4).`Mf2CTgToN+1f%Dm.pXu+Je]T!ZmTb__sB-P
%#F]B?N/rMX^k^f9i^*n`GmejM4#+l[h?(uTknkTj5QF4/J:Ooc!Z[/onr!OaBX58A&YO@/$Bk<;jXiG[Jk?=[(s$bLWG)AEr<jG]
%,RGB`&&[uSOIuqZnN:_U^dR%2J2+(?JB/3t86,`S2"ac-/`<JpRMMHT&15XJe-/USUG-Y\%!g.9+`Q!E!0O`5@"JdVa\,(-UG1%H
%VC(C`3-\Y`.oHblmo&"oJ;GNT]STuOqh%;n!XH!MnSMpE28sq2=\lS:QLhU0lH.iub)0@JrIM8U*D'ZF@8a*m=LTA'8Uj:Z+-Q7$
%H$bMU"b0>E_k=:4aiju2#5jIK&,7!&X[NjEn7"=\PEHme!i(fsEu8((jO#!>p`KZ`ie)c<`!7/LZ4fXT/:TtX0+oAD@>_]&!*M5'
%Ag]:^IjDL_[k%W+hLg?`@0TRG_*p3*YjJ;cP4gTc["im+P.ZS7j?:Esb`h*N`0&6X4lp*W_2Ph;lYsaG-QuS0VVpj4kcp5Im:bX6
%K`KRFBC-P/6j0cP_G3jO5RD0ZO-%/u6V3:];BF2CZIER1!t&MX0La+dOj'gX;BB?K:O*L*T(4#n&1J,Qp^W:!>Bn]5C5rd>&'B,N
%qIVkZB)?D=Kc(C\Aph:@^,$hW#?&,lLEi&ZjXj,onGl6riuX$9%*<_oqndlHMja)8I[fShrCDA2)%X==g9B6,Ais1G+oJH(>/(,s
%ORW=8<jh?PSg<?iml5bNiuolU,uXbE1EJMA67H)t6:o0!\-6d(1<JKrZ6+"]\0)7^-!=hJ1EQ&A6d(QH*lu%M/2;`e4CGsj>bN+Y
%GeeGfY"PK,%r-tTPVD,`#)!j)![sra#aD,AK-'C$G_]ooaKuNs&#)u_j'e[U/8iH0H+)CG,:O-YN9!*/#Zigmh5-38Y3F)#&1+d,
%TS>.[q:f9i\cRTsA8:H8#En]Z!6<#];UPXOmth:nP9(:.X/8F6O9%K.6,5n:K>9lc4nN,%_`Y<U\AgF4fHQ\4Z5uE\<Fe7c6-ZhO
%#RID<iMgJ(nLafN;cUWc(4OmCgZ')5M*q>*4HIeriT2VFPR&B3;HFKiA0rFLgu?V#(D'uCOdlYHj#Ir#k5f#`80k6k!0[Ol=N`IM
%G;!??N;-/>@nW0q646a5EmS.8K0].<*DL8q"A!rp0LgB9%%EcY8c:5<s+u>@jH^f8Rm;^:*WQW)jt&k4"U$G%S%p26H8neGo]1+V
%9d"oraVM`q)LuLT,mq^4$TsnDN/&2V#L&\%`bJW*CM[IDk9Jb1c"%Z#CQf]!UkB,\X9?da+s3U9kXMV]BLM\</ufK&E"*ap`/qH@
%35rgLGbK)d]TmB)mZ_0SY(=[$EG%u!Sp0\K78:pIE)c<=:aY\&DAg7!k<kWD4YO^o`d68ohg#b0QaZ'oHt?NGE]n5d35h)f6"BuQ
%TFYJZ%_W8q!tUk2;<u7%DRn1jCKcD"2S&T\8dV_A,?1"-+(PALD$Z>=/&Nc4GgdhhB^[]fnVJ&`8pml5N<O?qRl;Ml6HX>99N_Zk
%LWu:u&W>XtVfYA06!do\\JAPTQ!k/?nu>TRN=6*'QG[79Q!fhlH.*qgo)9rhU>0i97OASu&ntnW-Z'-Q81VUA\66uu@bo\oX^&B"
%(F9c9l][7#5FXmd^gJi=Hq->]@CURnNXg=a6K],V9`V>6=oqMEcSh/fAI)B\St4d^I&`d:,LWkLIE13D!#@7Hb$q!*([#R`I$XM=
%>ZDY_De?Y!R8Z<MG5c.@D&Lg=Uq1gJ15iY8Sp$B%g5uCP6e.,4gG8OhMk^6c?(#gmD;'5ieaH<*_6Ych<ZMoVb\)-&eeElC"@fRr
%j"M\O/1N=oI-"*'5gZM&2'W-3mtqk5UHFpG8RZcV`p*a`9V\9pEbNB',Np"kZC*k@KHd]tnOKmB9K]a;91_PcDdZ?h04RrWc_M>q
%5.ZfaX(g:\P'8'(RB8J1[ao*W'osS!I<T"#X4jeak4mLQApF=.SQF)$g,A`FSQC1I'5s:tm$u.Mq;n.\cpO7r)5[N9\DS+oh)V`+
%poBitfMH\:G+b^aEr\8'VhO$7n_-@pJK(e=/4uZu;cKZ]d^FLXUinW9;*\W,i2Bl9>K>BJmFilm;agdQ:[^bMhKa5Qe^h<9pd<ee
%"1PQ@rX^A58Y:k-]RhYq[V]6<[1,FuO6L>$pVHn*f]A-N_$I19RA71W.'@!0<BOZYqee<!3D$_'X`ae(bL0;hJ9>N;J-&n0`C4bP
%.*5qN5ukL_#ol]`4@1H/H.KVD!>$,IP#mB?%`QNI_O2qJ6\KPEHlH(g6BJ-8]&gg]rn:aNbJcZ?)75Sg^4Z&.>H+1.s*E+e0:#+R
%_ZWV5_6CV046)dQ0%abigf_K!>]nD\/q&XV2&u2\ZEE51l5Ym1f4+"P*q\HrU'ssS"@ZZ<daF#*lm'Di4H^o)n<G:/GQ1>Ogb;rt
%!#e%$bFaZ%0RU0.-eFKE(PiZ2ip4j6OZg5V!B\(e_K2N=:6*<QUBP>M$?Yfm<R"82d%nU?!U$/bMG$8^[5GUQZq<%#8Q#SE;2fJZ
%":Y9*n"Rg/1rYRWk[(h1]3q2Gn6'Cj+J>ZDYg>%K6Vg?jj<PTJjQ&$M=L$13MtA'%(b0gV*2XM?Y,/<=W2a`j+J]m#C]GRO[7r^a
%ckMDq"OCJ#g)aV]L/piG!>872<?.rgqg'D.1/J15%$YpBll@>lqNKO$L\'U&!1,fM$tHU4Fn$r0;?.e7N\DSne"K<r@5^4$-8QcN
%?E?X7Q!>*-FYU62gddsZQ!dA@20CX<@\;To,n@fdD"1mg@ZIpM=6Ygf43I=DQVAR62>Ja619A**+4B)m)*[I-%^AVY+udS+,#HU.
%*K+2uDNa=DnKE%&LC=0KAl=pL1jhP4"Q2XUFDG!o"9J#bB\Vb^P/rK-L050F$oj,>"^[+#=U_0j$QSZ%I+on_N@UI:GV'9LnZ]"3
%Xr:q,WHC=4co'2P-4RDQ@Ss/b4)I#bOWY;oKLnnMYZ@;\0WD\Pp1SZ;!+G1sU`4]ih/oD:_^<LKoXG*>^+^>OeL7/Z321L<D_#Oc
%Z2nPW)#R'AZs/)Dr9JA,nsUGF4lIrheQb\pF@6sBK3>$sbgJ`VZR=]`gG*f'ir;:9:fX=&#-7lbdD6Fta\IO?N!Y.uH*Ei,",$_s
%396oW%TNtN)i'X[6(ifpPor-]8`Fb6:rB?rkYW<+"u=LYYqb+L#/=<.!Q52:9;#0BBXo6DL_^$Er>*ph&03fh-ddbRU15>UEZcC1
%mEu1BP[K7UP!3EnoV#Y*M7f<K,RPi=:nYLO37=V3/cCfA244E!\U;0`>g4*2R*N5\1;Fd]`JJZ="tTr&E!KZ04-]o/Q>=&g<stXX
%_EDjWHQ3aVGc&ebM:5pbkA$)6RLW#bi9`&iJI?MMeqn>MNJ$IW7$-/FO&80#1/pWq6oBgq&hWa2at:ideoYqSHd#2uq<l`MfO[X7
%D@[=jGaT1jiNjcOQk='M,Uu(-A+8o/C4r&>T;*!5],KN,Knk>ull@![d9*IRKp6)W<:6^[gf7>UC?VkL)bNpnO^7*uYcr/Q?]0ad
%>@:$7O;.(J>!A'ZIo)<I:T^m987Ha_CHuKGQDL8-Km,FaoU&0)6WIud8oKnh,`I]^:h)&bm'9W-8K@e)Ut:)sH>3.\TVa'a/!4/Q
%,e\Z[Z&J+$WT<[f%A-cGO#.b.`0dhFJYL(,2qm2LIN]Ck\q/U[)W$*`l>@EZ[TJ>]Ji_8eCSp1TaK'tC\Q]E_77Tn"71-CqgnbAD
%i\:XAe`@8dO>N++PR^i2N?d"IQfpT@QJpb92uJ2ooC.5Em9Vo+738eSj+qpq$U<Qcki)\emhM;80?.%P663^Pc:NShS^qU-N,Ru"
%!BHZf"@>GH>1ueH2,Xo_/MYFIC/'4(P!ktC$gLN*cGBgE,Mb*\W@EW=QBP0UXn?'P?NGKii=a=.gDX(i2Vn^Q;Ei)VM"nVm#ZWIh
%YMCKI'=Wkd#RK5pS&VraW"*KC7S7QYCqsM$U0e*K4KIFqS0L<+di'nE4@LNqP>fq"U_=%[NCJNj@8"jbjJ75B.+aeD7<X0Zi@8O$
%!,K/Rp#r)Nk;pOJZ8`5u4U+7;#]9hfkH+5<9N?Z[.K)tF/rEUS-X[KmEX/?BM%ZE]9p!q\RZa,Ve!C1]\n%HddPE9p]q0Dg43XE[
%O:Nm+=7/EWaeT_L5%^cSN`[r;W5*Wuh:K2i;_]b>lB,.AFTn(bc=D)(eSH$;$f0?2n]jfCq5-A5Cn]Ljh8CRE@$=Op%gB:O&sIEd
%9Mu<EC]fm`VdknT[\CB%6gLE4M9Z;=8@@Y>2-1s[#I88boSX9L?q[GC58]M_-JcD&TpRoOX--8<dLI@t[oA9?$.ZDZi$jj\=UE7)
%/b\RkCILqD6+IE0=(<`-##/U;ncr7(5pS7O(jc,r)EOb=#7bi0l!OL<STi8NR"V,d6e!i]D]i"oTslsEnB#<0`JcG?Acu4WGYKuj
%]gQEo>]*Fhj.3s;XXIE?gVUo$`/Gp2B2*(I1GL)+dB-6-l&I9Z/G?2ALXN^@Fq%_)P0/JRK1g*G:q7@=5Y",@_4bHP?42<5OTV8h
%JRZAp'-4a$3Z*5QeX`Nm:l,N#H&F'4)-VYj,c5inFBgi\Xa]e+:uWsTkcmrV<N22ahaj$*`<asjdA76l#hD=lW74-XdM>iYTnBHW
%]RDu*Bp66Lr-M4]@SC=*-THghR!Ds+<t&8[TuA:_8-ebDU]Eaf$;qWMScmkGOr0//XCbYkAAd/[&S.qs$n>+Gki-Ga!fAR53p(>'
%:^#J4ath@9"D$firYHHp7NOsk@#>'/.Cg*:D<M1Y1<!oDW'j@$(qD(]!t+-<o'-i2GUL1H9[[A<89iVL1rh\K+1oZKVo.L/QU\XO
%d,_[[a$s]F\'2_ij/)(eet"-K^%$.BD,c`tQD6/`V&GB>X\s+uD$e?qUdgBoKhqmijIQqt?`r[_>p)eL2(j#3'I,Gl_-7UM9dQ9n
%U(\@m5+s9`L4MtUa;kT0UopC>VHb-,Wiauq-P6n-%;V(naiFqJU4Bi=:9mV'R1R&R9]YtSa`/!3ET>/\'Aq@<,B=bW.Z9WN2n9cd
%9n6r7n^mp`gG#6fN5rBMh=P+R31"6&G6g&_/mS]GnXW>S[F;#7=C"BW*eq_J*%LdRC+IQJ<t&(Yk"Lbj3=]N8>ugD1aUf?tG@D>C
%eV08_4)qktVWDPu7QMW:YqJ:^(@%8u.;S0k4HVX4]]0M>b)7,*^j2><'3PL.D3.M[-O[IHM@6;RX(kmkd75C:!&P*iK(:=D7cc"M
%8d;JW&'6<W+B,c)/peI(Sa!GiYcpP$5ZnI\2jAK>H\hHkKJ]?.HkO&6.`#V^)0_04H,gM-$u6;U_Z,=J!Fo&S`\%Ic'm$eW<^7,?
%ri;`])Z*]'(%7*t=R0n?(D,`cYY<fW/PmK\pPi4gGV:26@Cf5+SZjMZ7^Na$8N&8n62MOmF1O"ij%lspL9#s_jD')M\C*T:c]rp&
%G(nXh>6!U,J/B$<)[CjGXi[>Si/)ujV(-Y\WrY)s0caPNKkZuf^UjS\i_d-k]G_>qNDIkhBT6/rVA@m1^J+!JH'[h6mfr-AKl]Lq
%V"Z"W^73:HUN$a"7cB6.p4?<#_@8Cs"!]0f^gqUoSUuZ^(8+PnU'Q"ZiJ+2Mjhh6FFVFk]aG@3F`"Wu^6QH<mc&aXg^HYPt`(!jg
%FrnMY^H*dRSXB-WrgM"fhCX>')a.,:T!*&NQHQ%9'T2LWl"i^jJmr8JKZ_Yodm=SjU3jStrLskckW'QBF<N?2a1:\/5uA?sL?XB]
%0O9ZgE$,?L#=a:'R#?AI.40&@]8N/t]4LmN5F8(D+O$)MDXJb*HCW<kftb;%Gn-A'_rFu:3=a6q7d5\2fE046T0aU"%&$?=>#a3)
%R]1F\1e"g^"JekYFdg9e"!GH_G6^FO(4pEPm0`;:<,?hB^$$_]Zi<AICmG3=&iY^b2cDG$clR<#i,g2V\tZ(<*4LD@FJboEpJ3oN
%&IIX!GPn6@U4H*/8"JKBD=/O:K:t*=q#B]o?&p8EOred"@/iUO(g*k^b5D6hi/>Q*Hsr7N6,jgY(ks4,mK,;X[DMGTqsQV<#a-'9
%B$GEnB?g(m>=Xe)mk^6Fa@J'',_JlP'50PlJj3B0\qI*)T)SahGAGoTg$J--<9*;Qrp\L,^R/igm@:MB?*ac?0A4ajT#Z1j0iH&P
%*\?/TgH.e&?V?pe.XPf7W\Vo?7TnmK.<fj7UM/e-*W,/KI!FsnnqE^cf(8lf/N7KoYFW"3U2@]\XuI%A';AfkD3>*gi!"_!hN6pB
%TksKs`uVT-P_;4?<'(G%.Li?tQVVj328'#L.BLFrG0]_qZ\GZ!gC:oH9IDFR2qp9tEa>eQ@Ye%l#1s(?R'OB"'['a]UlQ77M4dOT
%aNEUM$F!68-6O9!--Oj*Na=ds.DOn_ckbcS&\\fh("ACnBl<[o&#jdD/fRHi=X+\^d#1"H5]FYoN+A.&YEQ"V47m)>N4sLr5/`^8
%[`A3dFbmU@"Y"!sg6LO5NAoUAO=q]c/DdNGb!#a6>[-Q.HSK.nRA?UjPg?2>QufN-d/7>n7BM_$0@n&V,_biekB8Sc62[hOS5\/Q
%nZ$#\2A"]E##0H)X(MF;ep)an:DPmtNZK*tf4aKD1h;Jm*7/r#gR+,Nbr2r0N,g'j9^ehGJ1:XDMoRD6U^nP[B`jbbG6@a*fjp)'
%\F0N,:7t#-L+13J)@HQQk&?`ZJTB=>ZY6bd:;HQE*<U5FQ,KOPa9_=KDQuM*A@bmlHYE:b\g/`5Y_h*Wh5Wr6EgsT/!kUC^aj.Wd
%dRHi8.J(-F)9!Pn@HsSh@I)!"])OVN=h[=a2GQJ1([mmEdPR[mcr$7kHk?V=V1Ca>DH2eLB\0EeCjUdXC\Ohb[FmRHQKj!Rjqs<]
%Idf]Z7fAT"B_*PigA?jBf6`j!=*6n$@H3A@q]5JI.H[m,gE>=R7[niog3AJ1gO?@?i`8gS9-;Y+GFCA6>"?mO:#+/#'8e@2Y3YdK
%n?_n_V.i?4In+jp;:8Y*;QXhB:hdE;XM)C\[D(g,*H4/Z//29#ralc7B8rL\d)_&=Tn&Z"G=r`N3E'9P_,ctt#$AbhqbD[ITeu`m
%?V;DV&ELrV:J.#bnVF<?d[bkiWADXCr"->'XkbZ$CdX\Lf+i,*1>:).]ND%24&[/,R1)Nh9IO'G8;mU+er4c!W1.T*[E0-:hf3FA
%=CP2uRga^$e@b]5$,Ot8DM+1q2H6)\!o'c72RXFY=f.T\buhQDiIZfP,bW^dF]1@81j[gTVd?g*UK`[8[a$[nR<i#IO;dEqN=0/,
%f-/tn#-*$<#2?2;2RXFY=m#O9@1_4N`RpLB4c"qQ<-&U^Pl)H/fCu4U-JHYVr`Y*L%j$c:2:7m(P<RASdY!u:Q&@*%h$Y+M6m-+7
%Edpk^'5aZp+ke1]UCV+65CcCR:_Wf%e3nLS2u3j17#<*Pn3$`M;<eG]]0[5id=aF/TQKG16&f"q?b@gg6&dT]g:jC<Ll!ko&j))9
%e"u9`-f)]DYq@SI6PV><69AhAC8<WnM)IXcNTQ]Sm\8)%c3<n=eDn[[KDfIr`CGO/=Xg+aB"aUgM*Ba<lN])jB1j<EI<^TF*[7ep
%7.>4_K?`KnWFJ'3GfXNlNh6"u@3qA8_+LM"`C_t\65ZL:l*NdH15_;ee9219*k0^n+!r823&NEVK9Jj"MN_^?Kp.>In2!)RC;Yf3
%5Ke[D.#B"07)/C8ms@nED.09<,Z:S8,aqQ',\"g78#[H*:qg%J'$le1jINW6R_*6Xp,#VZD=KJB;H@I-&h-dW'(+T>(YdsEb[1#"
%PXODU\*?7NoUmK+7(]qh'2cD7gm,.^V/E4B:7PsrFg)R*W=EOo-.3!?kF(?18"<l>_/ViqSL1hRYojb!Q4[^V2_MhudTpM;&88-,
%\pp39Y;k%HrfbQ>qQBkq=A-k+3\k'U8>(/$b1-mJe`ApLh=q"P0>cDD-1i+\k5"GaCn#?6Gl-$Lm&J$AJ-2MSAh>a:7Sp/^KBiS0
%Q6s*,*(gOl]A3\d\ue2Co`>kLb'_C,fm9NT3J4cY\l*#n@<[]"Y$NAYjS&g(+b*GEP)LW6[pCNcZba-grF'2#BM/i+Tf2UiKKNlb
%gII`+No],J/8[tfd;Z:mHeA0Q<sR?\*7rV^GfWT`"[+B&Oucoa]6o/j@5QXe]F>/$)mV!4?>)mkZ*On,l`BFI[b'P@@jSj/qa*Hq
%?KkHIY#W5c<2h5EHD&flIfEk_@O$1dNO+JNA=sTSM*a:B8`DVu6p<pXaXA?s(=EAVohMk?R9/Q;4dlsig2Th.M<PAIP)@?O3][k>
%lsJkZ])M(uf+7#,#BS!7>@79UBq%`?m48UNCNk;_<[?K'-<JAU"&H/N89;Fu()J"V1hAh0S^CIpR[%X2@?]\9UIJN*O@nC`h,*.!
%>SmW*-,[1UIdfCZA"fNXPP'Qr90Q9\ek][+\`LYV)KX"P5*F$ahOD'OD4fMMVCm`$/$-JlbR\(85Jsl_s.`_HD*31F/7+4iZ(nUE
%grULKaX7G"N=G28%.98iD5AOV]g4`AC<58#=R4f:FM;YZ%r\+Ph"=t;1goZl-LWUt955f+-YIXm"J*/X3jtriiquk:d!fEk&i)AY
%huTH>.\DMnj#8,7@;iZ%&_O[D]$3iS/1p=i(Si#2iV2%jCD4]GpUmXg19:m:E^j5&%I+O_J"DCehOs&RV)1;o%CCM&8=SmhH"mGU
%5rI\3Xb)uX)H(kIC]ih"5P+ScY;]dIQ2&o7RXT7*V,u3W<rMk\V4.2FJPs8Zr`Qk^dRsEHrfW5TD,R=WNrGF09,MA7H\9!W@hQ.D
%U">$fjRgn-'[LB+6LN&c"gp2&P%J"HRo@)Dhj?Ye87.G7d(q:h`,,o.UKpT%Z<9X1R,BAppb9bK[!8]-=5A[aPVrm9C2`)i6gqb1
%G8$?[Q]O%Ta``Y8':9oednD0nkh.t4$lKD@?`^#nEFTY@BK=T8.E111>qMoP]'Y95,/3CkE>t_.SPUPlQJVLlK*7"r\YXqqKR."-
%=ei*g)V_;>\&T(c7brY#L*?^>PUdK?/Etba(WA4^$[H-LbOi\?c^O+s'r8J9L(8s++`?>6g%Bq1-qr,meI3)d68>oI-n"3?c<JX4
%)Dn6sVPAe8@1tSe+guPOK1)EPU7E,s;PUYMi\j?:X3mg&->pK9mX7=B+[Io#XI@>oF[_#Y+k$ZM1Q)D%OqcD^&4<D>%r'%A>+.o=
%'5Zm*Ib:H=HAJ\'`?MR$f716B_2u'Oe^K=JPd=?FOIV@B<O9uT571u]d[?bF-uWef2bI?D?)h2\%10GF>GM.Ygm^)u2cPlV=//L+
%:#'uQh>;Z*)^:P3:&aL%7ChFi@V[%ud^t`.=5As7Qb2j,5P1:7H>.(3d3e'jmlF'ElX-[BXW&bWqTlT/(p\=gH7(b;CbLdH9CY[e
%BF5E"&))_rb;M]Ff#\dVW:N]!T]VY=BIAPeg)0Go6PiHQ6"'D8rEZOF&_7L^1,2&50qklG(.8)pY,b88.>R3^g/p0Hem^!-raNN^
%NmWf?L9UqB)/DU[qi*Kl,7J-1CJhR::HeY1J3.Tlj\V&If0Ha[1cSg<[@prPYtV'Efd87ErDG)?%$LgGEf!^V'/ZXp"uoJpD!9el
%)/X2K/jl%`q?=niFoGg[,RI.&E>t^Q?O!O0?SpDAA[J.<Gd5Jaa+OL@Uq^sp"n$oLqc+!"EE2+"B`_dP3YpLR8n"sg(PZBK)M/8F
%r@iPqckf!3M::JfQ+E54#r=oJUb8j%:$_-(]3HFL![f<$gpOf:pYKlso[+7GI@`6s8!:YlOp"UP,N&@V0:X9fs+`6_-XFRgQ)Mk\
%2?-0a<0q)-QP`oVOp$Bq)(I(hmK#CAVMq))$4]'<UKL05=]&mj+J5MfX+U.lA-r1r=TV:gn;/.MUV+_'Y)Le.85$S@^u9<u,=$#S
%2)Dn[]LbB)_=XMkfUQ:),[dN7X]H)]j*^WDO6.g&>fb2YH3%N9lC3m7D5e]-*+IC5&,=6"<g.nS@6Z/1i9^:e'r9EmA*_U'?!So3
%%s<ohj/<H/Y*mjc-.5jdorE5&K?_"i;85Y^!#`CZ]@]/M;Z3C?![_BskgrK?&8.AZ$"I1LD)N+,qDAH?^,Z7C_Uq?Ul\[djMboKS
%E!`C"Ldn=.m&)f+H#b>QrmGd]mbK.qnXu?(OJ^A9g#2Q)YL>Eo`q=\`#2_r_R,48HHsIY/nF_DpBec565N"2mDJg7';+%sk4?.jM
%<3uOhHq>8Sg`Fuc^jEWD?Y_1X6(%J>("\'?pp2N[*ZVt91A`n,!0`c?/m!a5-WH<.%KV@CK)kZWi6NGI^^gM)T?fK/HW&jq)Kfmi
%kM/m&!'Hs7S[Y?K7n[6(*5;)DNR\U6i_-gaPI!S_"H=jF'N"J9L5[rE6)76=&j**AJ/-ekGuZ)[_cLQI."Fa-VpP.g^%f]W&DdgM
%G_UEcI%15-FftRQ#2G%:phbtE%h@M&#OlXCTYg^CgdV"e6imc]k9\YNYlGFUSBVBEPbM[uG*:Ve@Q*')FZZU*J1";EHDM4uq:i:(
%`5'^*k)'A1crfj4,2A?D<?i/6G^pO_pkrK[Zk4<sN=7l/SK/f$r%()3>suJHI,mQrHk$bX)gRbl7)2$M#^?_02%d&Z'bTqg$5"t=
%^<DG%K?:T#\6UuAS@dfj(RbRG^-)`r7t5gmZ3Lp0":ZD[Kdn/%rTjAj3ussHaaR9fU'D4uK*V2Cm,4$78pRY;k7K:mDlQ/$*eb3p
%fh`FOK$-*(4D9>@Dq@Ys$Bhl)(2cO72p`o1AOWFE7'4HuXjHKY*^T+1Sq-U/.JcIh&3ighH@t53]!$(#Ik1O1Q\n^\>/1Zi5P/`+
%hFI/Jkqur?#JANTEP<UUXW0dd`)6Z#'cgfpJ`PSErM#:KIQdERj;XLSpGV`#o+05]WkGaDL#e_T#)Y^aNaZU_Hj<<10(Fb9kdM]1
%Y3=PMc%uN3E3s6qqa'e$kRBbWZ#sYqXjR)LP+lihD90K[EU.Vd&JqiLDY0I,H@a^GDp\+:;`=QMiuu@:7J%1c)O_f"Bh/tdI)P?P
%lRdM*@4f3UKW(JW3kinA&,c9$XgFToR"fkJ"raW12Il@uB*4]<^(o@9^,'\Y9jHM>`g'O0YP%tY%=8]2a/hNK.>0u3mO*\\-s`:7
%'?g.L9s0PjZP3)YmWsHY_=IQF]"n3TZ@%iLWn@dsfi,K(rHVE"cZTQWCt-37T?%1FR<ol@$kpRD%+!aTG#CU2g9]oC;`+:c3[DA>
%W&-pS/Ru/V#Oh9:5C;ah4nd2cj8PInI,Fe^cb@520/gB=rB"[`2U#A:ntU*lXrAQ,h*JsKEm9&9qG,$j@8l@D4(uk/>pI>EY(!d!
%)uf$h[a4Gc@t/_.%<i*;\uBbZZ'j^cQk0\.b'(B"n(U/*Kiu,?-B<BO7YlS93,Q:u_=E$<%=\Cgj*s.fJG\c-FW50brcQ2B5a`lR
%5IjNp;aO..(IHmX4\n7Q_d>Im^q6I3oF[c8;GbhV8F:[!Lt>YY>Bl@L>'sfbD0g9SnTA]^iRa-*V<.Ve4(rYUXgB#VKBTqCM`"A,
%[R>^^@iZ;eDMC3_p7V8ZJ$(,/KjFp7[8'-K+>iJRa/og+NAFR#/^ZLF:&g3<>_oq4@8*W26(0iV6O*j?QSsZ2[oPB4pLY8eo8PR=
%-9p:WY.+[#EJZ2:l(ZP-oT6La@.u[qS)o!%1t3f.gI4P*nr8m$3ha3ZQc`H`6WueICN["j;K(P!GI>")WCX1kS%72/[f%o.ZR/E+
%2Ft;=Tgg(4-FWPgU$2blHfk*2q1ejgUP%Ztct%No*[f$pT\GiqU!&0#V*SfW^Y-++WbKc#=^*ud%QbKCB.ZeCF6DuTi*d_e[L]ol
%K+hA$eMpS$b2!"q;CEnIV,$7/fS_Vo]uu.R5%GtBZR2_r'tpoon^A#jqDD$r#,8l%!_#0sX1uROAO">>>V@CL4cWiMPhD/oX87ZW
%H0[hT=rH/HQ\en6mn%U2CD!EUD1IXi3b0P=E@,U`DTp6q\'D(fks(Q#G;"7\_70!!\d.@j%;oXp`W_XSD_nh?XJ*lQ)`mi>->mq,
%X^0`bdj<a4'&*r=[IrjJ:"hjSWsW[sD6h/ClsBC<4V1\::cNI_JJ0N(-A1X99g*95jLP_r9?AMV5>8SeA$n.QBFAp(FMU[Tmt+cE
%WXj"$oq-)>0P'QWohOl1\0K]W>:B>Z>YX3ePCng]OO3cl4([pbFnXo+eEk?cm<$IFM8?1(WM7M$$2%'!o[OJWY;/](+@X#WTo+5C
%!o'3'2R`A9fqn4=Dd?`).tZ&+:'+8#834h*7RP($".Te.U#QkX)k/"^/sF*a&p2a_AVk4]BcEiW2Ge6E%CS25D/A[Qg83P>9NKkR
%1u)o=T>r^abcPPlfP?#$]f'uFiFl`-6e>nTQ_bF\9?Zdo[BoNb8D@pQg0P\6D_g&!hKQBNT%mQMrKk:q2h/`p7j]QZ^XL77dD1+u
%OKY5q-JUl/J`8UfI]4HAQ'pAl@sf4lT)5$hjrPrM68<Yd,9nKB5]G$WB^h/iY*78,<[]1#9E+Y&FK(+0btZuDHFpjG8jb&cc<MQ*
%LuSg^f'@K@e>eup"ih/(bB7h%pMG?Kl0nV/ak(C2X#262()L'VCs:$@"oM2$UHqU)?TIi4IL'h:%`l.<&*UqY.&po=eFXh@ESu[\
%g?h_sV/H_++)\8jqJ.YNgS^4LPP/^Ji<hZrqi_KF)DqIL9"j&6d`W,>4YsN1bpTsks-'p.B[%lH^AULg[?X:U[8#Qf(6gAS2YIb(
%*=X,WPnF3k(."mS5uAL9&W$!-*GT_\U85565I;iV1eAWWCUI0&BV;u)+GH5p-jsCDVD]CCl@O->`XfO[kgFXXWr!r33FuN!:PR50
%64l8]p)qa8QV_[c:4i+Y/QVm"d)mmu6)bS<)9?EB!P1ql58-?D;k:6nEt)l<,e@1>LR[j%f^:?1#(Q7=4(!2ZT\VN)Zm5LlL`p1t
%"350d_Aq`j+c@M>N4!3iN3PG/[.'##3KB?0pr`R7<NQsZ,3Z=t`Y461ckg[Es2/Lii!Y)O\U?bp%Vj(7P<8EkIqS8Ho32_R8DuB6
%'16&ZCO"`';<G'%I41=Y^8T?qMaZp+o[pprf<PS"rpa361b,ppWS?/m,:.YB^NeMmquMth^.eYJkj_g6;f&+uPGh8N81L&)nHRF[
%BM^@6/5dLgS+p2qJ,EjY\Wr&/((9)pamLGr#o,ZLT`Q`fs0c]u+&/]LLCW9Dq<d'(UZ*;kr\:KT\#cEi.1ugRjsCDf$-<m"G(0=!
%$6'DZg[&?(`E*Q27PY-!/99B`I.!7m+WilbRKZD<3NOUc+3^R[#_V,aMdS9a.B!'b\7f>(`k-P]8mtY;_-s7?`jfVQI.J'FU]]du
%g%p?#'J<<0Q0Z,#9l&,rZ_J87TnV<"g5;dc7h$S'br]8-+(ab"B2Z6]6-8oTf%:3^jg;+Se'I`;QE<B=825J.?ej6,aeS&Hg;a$U
%%/Y@M=D8E-\1f(fJ8>#;6Z:&PFs\1+dU5$4\.=7pM%/^\4R3TcICeaGiXNC*iT@nH4#+E$C\Km!gu7Qh'Uj]f0l>pO"mC:H-k`X!
%4n&6p8uLYZ+*%>#i%0i<h[I"5YT`6-M+Yk18j#'@n?cT'82SB<Bo&@%.Q/uR.V[j)T0bHq$IQn%J,FU<oD37Y#^YtE^Ls)P'CHLi
%>%mj5GC_qTcMH:0-K4RVB<($JMm1LW_P`ijHtteaN]>O=0?`1J<f6ZH3q/s+G65k&i-#MYJ%mIlS/++YhJ+Qgc*Z7-qpX.!M%<,M
%4$0`=?i(AX#kgnPZ@p-)cZGooGM?'UaO$#=8\$i:$INqS8<El2o3;-R*SFY&=$i?j\Ucm`f,rL^@:=BO<q!qE4oEmcr0E8_)FR[S
%BB(ra99.W6n6/pl@[1*/"`Ygd+\Q$_?h?&97(/l%=$HJ>TZQ>+c=dV.eN%HWi-=$dgS/4B6nM*#!ef:s:X36Tb$H7;HqmmO/.-d@
%nL+_o=,l4X1mCm-$\;)IX7>SmPn-B)@T\`=YKn!YD]rG.4*i7*:2=WI_)o@O8l&u)%,8qO;VQ92=pqrlr,X'DhL**-`Ygf"P=$_G
%O>f)mi*9S$>i/=:;3/e\iW%1=5ciXV!52#r(W-Q7*@&JKoMC^"O8pOaG/<t"Cl2sJJpQQ'-sT:P5(NnTChY"pLObIYBE6IK#f/Ab
%KoiNtFEM,t%.Js:MsKmPQpE![h'O2B'o$q=\e8A1N:lbL"7AB"''a=ZF5Q`5pbH^DaB(qDo(3.:>6V_pQu$Jb"S>(j7f)>O..DO.
%o3@gg?f)<NcF)cq9KM2l#BpBK1HeJ@Xuu$_Q[,m^R@;9<eiADAnTA_*+?@oK7HMBf3Z"'*,0s7LU?fA/bbRh0X-j'QYKERq4^R_p
%k.T!&Fj;hR@\._&rdl)!;k&H&,%XW>T([/(Gpi/fPnSPZ>r41p=&pgR'YgAA:7T1dAsIQa:Y(p2TT+(p3ROd_`QaATkh15qNAF,/
%lD!fDjLHb()g-E\1(l#&@UipZL?N90Ol5BedOfVT:\GTlmQ;$JI'HEn8ItZ-)*JFV@Bd2"B[f#,!D-eI.d21(n8no%/;H/V@IgGG
%fqhOIM]B>WKdi&Ve]o*%,bFG]P4rD4QqZ;t!Msd5V^P:"Lm1+_.D-IA\oUNl/dddeMb+o(egQ(ugY'Mi\p-GT]T[TODbDiVPepti
%@[>=IY_Fh\N/(,"PJTD4-gOtK#;2d3S62k(YqSG4m&VmC$g1Br(O3MuX,4`+Oro<0c*8EH7"O@Nkc[#rS8h*]ArZNt:NpW0F4qeP
%+J0U5/`R2&_SiY:1+-QT["7EnIe6\GY=B4$pMA.M1i!L1.k<L-.![^P?!29hT:mesmpr$XgO,9iX`UG^/brCZRKZ@VZd/2fo\H<K
%kIo*gh-6sud@!+bO(C$[JRS2;TelL"2hBR*RAW-V>ftKa,@;:KMpA8K=OX?-*k+#P3q$XO*kp/;goPQ`N4aVpKN*9(l:h4qD-D&<
%aZS8&dIO@i)Acpt/A2q(YBdKLA%4AUQP$`"4P=@ta$O6XdYQKMm,\k[Vca2;Yj2[j3WWNJ]cqbb#OsDU]H50W=m&0bNJ&sScLA?s
%]=Cc?ZZE1mq-k];H6i''2ePM'Moti>4%WUcXHh8/EHLRd\Q3u/npE+RNLs42fR7^sPmMQ3qF,$rF@p]'Gpi3*01X1l]BEL=gp>WN
%@.8?jR3"#tPZd1_b`d23qH8`I'<2Me9bLEA>c`lqTFH(lGUN$'+"+[Y>%*Yo#YW3/gNLc;ElM!=0-+OMnm%0j0+c%,gQG-#:!6Eu
%e&$Cs3feD@f:gWNmH]nYPBCJlS4.);.7CX]?D%^IOEKicEsWOl<4hA,PBjIZ[G<!sFA<*gQX/0orRe^HN#S(#;0aP[oWCLNbIj"\
%TF>e_nh&mBF\p7D0g52\1+c2n&l7s5a9J7oVN*quG+BSkp#]@gKd0$^oCg.0hRWK7(<fmqkaOh6OV`H1$b$lF:q.G9M0V$f0C`Q\
%ULJJ/0sd"KZCET)Q_6V.'=G=cA%H2c1V5Mm7EFE[8ES#T_`BqWloHB%Ze@i\j;[a9T:p9L^LG*TnkS91*J6]K`Q[s%\_=QlS8lMg
%d2B<3VK\`:o3US$AhIHp@%5Y=^j>X<IB@DqqZ]B"NuO]CR&DHkSb[Z/.e%a0o44CT./)A?SMQG%%K7^;SH@30_.5,P7_L'dq8nPJ
%+?N+']H50W3@]nY4l_36/==E^1;F\1.l2u;GF0&X5C2+nSaZhiO(=h%(BsTb1@#?P"g4>s)^R1LR1_HL1JI)_XRfc\\N9USnnXe=
%p1.'X*E8dT,Ko7QB,kMQlXud_1/ErdZJg_YW]q^M5h&^QOp5MH-8,7bU=*H0d[t_=:\Jofn%+TnST0%Kr7iVmQ:%'?`bc;0(7"V<
%cW+,s!#Tb!-%!?Y&Q7]>$&]L)MLT(<Wrf9I=cICF0)4fEA6.X:W+3l';\es'f*TB(13K!qaW`hX&X%*H]VX(7i0g/mQP/D_9E19N
%&']H96dg^r#3EZ1%.FEmPQuPL<XgtFRIg0a>5_P!I72NO%JS($SLoRp<NNDMUd,$<%9X,I5EOPb0V#sgBVAB4-RLTaN;=c:):gN=
%kf4'1E[rKY1o`g%XIJ^4%8%"O<f7]0UnJ_&XfNX/-AO^D%?04^&_[fQ;9a[r:ih^P,I93:HQr^]32]O<W$4hpA7c#k/L%Bf,1lr;
%PDsB\7W=M0jt[cP!7FifdiqQ)4g/uPVZ55IiJj[)!BSA`.r>r,]3/G@ks\?RJRV)?FZK`kEU(7H,27r%'S&%*,45`I%NpQP,]J=b
%JNWOF:;Ul@1H?Ff60(iE/L3^K#^@u:E)K"-,=iGL#m+u+M!#UKfK/<N'h6br&Y'WD#!fVZ,Qcoa3,^YUg)Di2Op%TK>qjB.ZepC3
%"<F4=>/P/.in,5b;I?dL+:(SGF=SJmCL@9Z*TnpBJ0;f$l]]mn3eErlI:BK/V$7*srCD&5WQ3ELC7qp""UU.@2N54?_ht57&[:fD
%40(?i_Ji?JK%6cbq'E>_E/;cSm8G!VGWaLd<mPY%+KUTa/c.>_<(:PX@hg3$,Y2I?I[62^5Dq@=[VcBSkltL:?\NA]\^l=9=$Hg$
%mXCSP7[(d0M//R4-flKY2FQBMhN93U,3U&Y?Z6:j?PuOoZQVAc_39-R&#<C,?3UnYq"\2n@fpN,:<mkmY>BK%`@Cfi<H4rB&`P)u
%%=P[@MQh/6*tAkDQm/F^<^CaL%FmtUE%>K;H))?r-&NUQ]Vn=U'+aI**>_Y1SWNd1U^*Rk'\cbk"!b7qaKG^fPg)VW=*+]/':H7\
%-7n2ZD50df`Y6pj)!eb-qA0'EYD$YfH=N7$:Hfmm#n#aRc.W2L5?"E]@Mbqr!u[;N*u*,08LJj>SV\?8!_JYANKp7WChR:Gr'b^c
%nm2;`mgl\fk/$aBSP)l+&nh8V$L8]=lprHT]o2e%dQ0c7FbKakoL&?214n8]mk*$?[uDc*JJbZI#)5e>3]JGGSRu&?(nLcJ!<aS,
%gPSJ/5rO;93I]>1p'R,FMPn-#?Nsq;Np'!Ds13&cdV(8m/MlZ*eL)n%j<0>*`$/)Z9?lM3I7jo!IKGq/Cjc7L-A)[\^0.#(;V!/'
%5<&)CJ/6n9Z9MWs1bjV0[!k:kA,?CacA^W8GB+6_[Z6L#!.s)]r*X4P%n/J1TG.,&=@Y`F:Z-I!kKSB_/;.ar.I9**1_Z1@):=U8
%B.t^aQH(\)2,=$#%E[hc36dB/.HHn$+C@5//C9@"q.L&(aNHa*F'AAKp&f\MFVBc4d_Gq8f'<HN*7-Uf`n1?o,k2Uj]p4=t`%iGK
%P;O81X%]4O;R[gqr1;$mX?^=8ab_+?9+rr?En?jB)[Kdsi'c-K<mtHc3I6'$Hd(6k59UIT*Z#f^j!t@l'dk8=a'P-!N_?q/cqM9M
%3997O7D0I-ln/CRYGn#9g*JW/HSe5Ffe+BbV%(1s7!Y/ZWI?QRdgF_XlZPZW6aE6^14Ft?gk,lnb=EM_hEAZJl,0sTOK<.@\HH%G
%.PRRNoImthL23:-=*asH_9'eD"d^qt+fN73nWqN,KEO@*8`%Co[urnh$;N9PciJ?N1HWL*J>\L<EY7bAM:JS0"mNkEjgMh[X-2m1
%O<IgPPhs5C[@=VVK/^;hFZk]=og&'GRh%oBqO&5W@m:NA?q)^*g2\Nb5$Z$GOqTHI*hhqR5c^KtTdC0shAY\#p'*K&_`If*pGhF=
%r*Vk&XG)M*jZ_</,olXk&t=\>%'>>;;YYS1(14N`VHt0=ja2.[^5kDG".*8YbJk;=V0XT15tc7\kAVF4UnZ3P64oK6#'!!N&u)]'
%;Fr,im=p4[j-aQK%AgQQZ%X!N)i?,`&D5`V!G)aS`O.-NTP(D%5^<GA>8rrO#"f8L>)sma^U7JtLm88jZ(k%`[\^I,m1$NoL)gcJ
%p`S]\kGBHPhn?.dT$rbUWap>6cJj0[0Q(*A,W<Ds2WDDeq"MPLa%?-ao0N?P^X3Q@,l8pG5%G8]XGlp!.JbsfM!sKcnHK[t;Bn)W
%94^%W?E*"Yckf!Y5/N$U$CpJnLg$DoMS?2\@g^1eVNk,5)5UnhGuBW@lB<$?[.+KL*h$/aZI^t)`OVaojEfNnA;43UB6gqZ?1XC#
%D6KlVl%V1%j26qMFQ6X$C>W+$p,9J)a_j4#\Wh;62uX9pr#@ZpG'e]W02D&L8bJ)P5k"F+/O9=G)B_#\_O$M?EFBme3h\P#aj,$q
%X&*!JY^\5N24'dfR(_I!q&FTDh;qZIOuqA;U^:$cc;=1V1pS=9a5R19`J4umBVYpJ[)^(_Fch&tC<BW^[<\WAD4lp_QS(ioY&21<
%`2<\n5(*-.4rdf]n+>SiR!1;sIs3Hh'Ti#_:Ad?UdgM/ls7\UF\A:YP]:AYCg\RQV-O"G9L&V9/rambp>`#EQf%9e1304pM;dDHR
%iiV_9Jq?jQU$Qu0gq(I_UUjL)IduEXF"#l:31r*U2SICf@,&F&Ca^gj<)b7UCi"N7D)gp;7@ADY`GL[H-SM(%DT<2>mV/OY0]U'/
%TB=,a)dTaJO5(YA-Tc='gC<n$iYVomg54ihjl+-R@H@@SD&%gfL<e@]G9"nglZ3R.8na6OLn2>NB]>b@:QCK%H1r.T"SA%uJQVtL
%EEpKg'=s<\6<m5_F)jQD;U%0Q;JG"Bh7q03eFE^[=Un@Q\TDY@>?Vh6MX6(<b0(I,cqBK7KVgs,g*9t,(_C9hcF1W9iBT,=,V(2.
%2Ul^J#Nj%_L.7Ua?OesklC#p&l>,=r+Q[II]Xtn42^mfiMAC/l!ZNP]CjdHQBE]<3?&MM6I.D+X2ILPDWSJ'ap;f5N&Fl'd&)[?e
%ob^klLJ"UOQg/e#j58VDDlU%H[\^#g^qG^kF"_$):e\eI9oUKHqd*KUQEh#[D>M7m-B^6,hk'f$eC_96Vrsqu`JmRJn/"%WI>VhL
%)f:=T?#e@d1m[9.0IKnm#eA+5e*tfgH(I.@J7#,@;hS"Ggu'n*[RN+'o_EMpcR\Lg(XLH(8X$@,-lh`!Kln?Dg>5Ie;X%6XN3i(/
%hH)n97r6:/O;)[SCO&K]R*1\oA5I(?OpO"'d^f[+1N3ID`BYqGa&apF>Afj2"22u.'$`#jnRr6LkU,7Sh0dB9r=`'fdos_[\#n=*
%eBL4k3haHJqQ14"T5\DN>lXYl6K,'kgR0k>E,@cUk+:bAdC>(CTtH=8+CdtM7K$kS@lgT'?;6r_!(&d#dbN3&c%D;^Z(\\HAPd-!
%gYb5!jG7"GA7`E*Sql;kTb(<.W.LRh*7W?FXM)$H+^Gm"37+i&bDc-2PW#U$_qp93:"Q`"fR-6X?*9Y=q*@M`Y$=l8H&d>S)V^`U
%n?^QqhJD[WP5laJmP@h2D9dO@]PB-c<We`t\(0EXRBY-uHurCe9'kPIX7@TTSD7`!aCC"sb#.S^.297TI2m-P6]FTn);i#fHj<nW
%cN4:1PCf7TV%nMZB_/gd-*JC<-u^g6f#S!!2UCr16UgUn-$D+O/BA?%,9WF(+[%]"XFd$TnnOV;oL7.#MW8\f1i=R'*SBo@aNln1
%bGZ9X^=0DI5OreaNfj\4D:P8m5ERPX](+s+jR4etk;kg(qUbT^a(NW3^cmZp<jFg'c2ZB%Kd/GAG^i%siBS-b/`KcGV(e;X?;*pV
%c/Eq[\fPO+GaA0C[`<C4$aYV'@Y.^KB:0q^g@]o_;<3ZrpXC+\c%T1?SshQD6%.aC45J7"5q?:Wg`BNDl](85pi+Ag3TXZ*GtEZ2
%q*C?8*'2'008[@%I=@J\Ie,M`IDC4GVu2g`pG8<p0!lR;bRTtJiHUGOOP@4!663M5K4G92)jYP[DkKhAohb'ds7SD.^NC>#WgUp,
%m8)WSI=%h+nquj[II0*?79T84cfT(W&V.?a0MGAV.B'P<mu)>\3hs3..(AlWKO]+fnF0o%Wu(A87<fLXr<-Hn/N]:7fASpPc)p_Y
%>&M/S_9GqfHWOn#QJEHr*J47cl_2g`oD4H;f-:Fq/C*R0+kWnJrEhGc,B)UIp.G\Bd5_?Q<N<4G_:C?@,Wr`ln*7k'K&&I*GW;ru
%"Ep[KCqHL!C*U5s!q2C1GVl0^ao@Gqjh)LrV8-YS%IqCW+Ze:Qe.4kHD'][nGG%u;m<4:=;F].LS:4OR;(>^9?.oMIAej%m)q)`!
%m,.N<M`c&Y.^X2Y+k1X^S^A_,HCRoE]bcYJB,=971A!,i`%sXJp;7;>m$b=A"jN[8Tr@Z(E;O8]8#?L`o)(q,Zk(U7)a>;10P'QX
%[ScpNS:5i\]&h_I\i8r07V$T!So-g5(jF4k:!I;;&=]OR6Kd`ki4*l<__+\Mg8kBFJm--g6Q-4BPFXd]K@m=o^[6g:/\8=fgNL3k
%5iE%4-g+I^^biPQoAc1]QgtOujraLEUY^Q-ZcMj#o<R_O^tA*+QWT.!bgu73TQUF+qEnP;BO%Zt\.(d2mElD5:ffbn@I\pW\%5F&
%g4N\Arj1u$\u>9j]*6M"l(GC8mJD2K6bhjK-La'Ij\hZ=;X<M,d7qD$q"n?L5>/?=)fKWoiM4.H+)TjdqEnDoH>C"^-U`HOG#I9m
%BEUmu/hmBL.$_V^.)P#&-)N9!9f'=N70K9_3T5i>*9)\GEZ\WOGP=E7-hI_2TJRL(V@!6(:IL)mins0\5`s>`?CAYYMX/1oV+ZoG
%[;8])68BiBR(FZC[Z\VaI#a1,Ff'^OYn'@sE't4,FDjZ[Ythm<:VSl`45QbE2,&7U)sRn<FW$ttSG"-Th:L(!Pf*#62NFhZnt;2'
%h%))X++EG4LE:p.rdLf1E%B60OTCRmip1rWAo/,L^*C,8S8)J$I`D.o$'lfi6TmsYb;DV=EOktJ7I%c$4oE[E&)GtN\P':gn,NEt
%G_jlm-h(_$1j5J4h3=FEhkP(9bT36uT#nCM'^E>RI11#>5Fg*<$2rhRd!`C%rPaM\j]?nA0Z8jeqY&_g<(mgB$[Z1`/(ODTPX3Gj
%%5';B:I1E,]S8tXe;"idGbKm/\p#QU+r6fd#Q9Kh+^=<fSPVX-&Z9f'=q4,e)q8V8L[QMcZ>9RW,b:95^M#:niJ&Ckki%9aT5sAc
%9u;c0lA2Z%'MX#Q-FIkSm8WFpFsPg>Qh!/kU"JLteFD3ukedoor6W=lh:iIZMa=oAT=m&Q-U'"):\UG<=^-CK/>:[09r0UpeG;gN
%$#OH8SPcb\qf"q68+^agpNK"Brgt>VOt<L.AlnUFf2n:(!B$N8=MJLs34X%nc@hk<l\bOF%Rpgc"Oi!cq`"7[\6\]FAY6f(^$R.Q
%qGaHHb$"L4U:'7NJf8r@;'/D6h9@OY96`FiLD+tnTna<XMA(j`?ZKDB:d_E:RW?NN]=EW=#nJEUE'b'_o^d!tI9n:SJt/\a*Gt5A
%UXp6g-nBUL,oi[c_SZ[CSC#.[4X-T'3$E>W$$GmOU'A#WYH*=doFVBmSC#.[4e0k<S.N1;UKsEe6a&!YgdX088N92OKSL6;Xe!hn
%8g4,kS^:k,[_%@8NeIj%k"@-`oeMRS#gljDY;=mi).$q^a64l/iIlYe-WJ".)rV;ToZ8:#IrWKcYpe3#6QpcM#i23F659(=J,@1m
%.9-*^-/f\hGbKm/H?c,ZG8ZBGd3lMaegYZ)8u7pr[\gr/8ZGU6WRZQgeUi3;&8KTI@N:^om1?U]JdJhqrBlI_WoK8p6^iT@,H4!Y
%/5$9p]sMSm:l(r'PX6TL8\!+EV)=`2R;aUP?1CoEc=kGm/i2d.a[<5sBX,sEp;&o()/!WnZ_A"Rl2p-uJ'4Cl0<-OrF"(DER'!;m
%K-W24P,7[L9eO9R#P>1IMRq.bHCQ`)+n,X"kWaT\ZcOpb!O=%2-tV;/BT#,>B!.[1Zlh`r:EBYEM,ris'q3<R8"YpeB(7F?%_8r1
%A_=uEUR&UqWmCMU/gc>Nj=LX;;9[T=L\+eHOM1.1&`fW@G9!8!J9Vs1Mq-2c8b\%j>Wc5jb7)ejfH;8OOCnkWL*b:BEli>H2Oc+V
%p[kusAHUWn5d&YWoet:.P95t,Mo"_BVD^DJ`6kfea70-SM5G$5>E9e)fSTL-.o5#SdhN!I0V(R#2'>gk2nPCh^Pnn%T7"&b5;\^_
%)Nd:Z:Q[k;brH.GOpV*YjOAYr>a=apZ],%6`tE(M(14cg;'=UJQUkK^Xo=(`d@$n^prC/G2bA-soCP8^U[*LX]/CZMGa2V>obCt.
%\o%i0f3AUk8tcUQUX-(.g??L6OTm(%83A;sU\4OPA$O5<BsbIo[NPabe2jqDnhFtbV_`OL68ldOYc+lJMtD"U14#`@LLOJsYJl:E
%FXqr9HIc&E(:pF;/<<$`\^Eu($6mFFF6RI4^WNGH>9hrY$$Q`LKM=8eHo\V)&hb+[W!Pn"UJZejW3HX:Kh&,S<;9khUB+ArS!cn0
%@7ot1ZUlhVC_FW36T3mU%mk'?E42W(LBNr@gGe`f\0NYO*ZO=RGT/p!eBr?l8>AsXD+_M)VTN6n1[R3s>l$3O#JK-goiukiggadq
%#0/g"!*e?2<GC$I?4_JrL`Rtm%8\F<+bM5OG6<bM:EG]ubd$g`q4Rg6I,L"rEco(YFpCK(_/lO;$Od('Aoc\^R5$?m5NTVA\YqLA
%:#<qYY`$Ptk@lEAr[M2#7Wp+$&Z[@f!Q3Vg=.g-[Stuo3g:']UK+/niq@*4:(5Vg5G?5s_52)sCen:qN=]R3pkmDfZ9_rf[V*VO*
%l1cMYUqfHrd2(B[eFC4licc'Yj*?P[b_%7[!uU:uR#RVO4eGO-@6RH.B%%R7&/aN[fCg`c2lVl/S@sINQ9[urp;I^1!:P9SrB"q-
%s6'AS(8d,4I,Hh+e<XF$.sX"G2cK1M*#7%iUqSX:F5MP`UaQ]oa\1M4+FQ5<)gPac'tlaie050\rFLjE.gSFHN3/W#5[T&9&2JY!
%5[EH/3(Z!%Tr&5klmSA=qnSO9,s<`kjjj_65_78=Zl)^3V5!cN?_k$L.h6[R@C2_iVT\Rn%:?is$f8B(Z!4Apq5@BGYt+B2s7O-q
%s)$TK)#mP*s4l3`L17sbZPN$@]sYWRo:Q%]hfDVDpEeM"9@Obn=IJXXiNGOXmfEs%&h"$FqHCl+a]8?15>;+99h&79cT(slJSi+E
%iG7$05H#:r48P;2C!d[OrWe1p0a\mP[;'CN[JmsjUPXK0\,/=)m;A?A^WG%Zd&^p'SP>XeNFak(Gqle7,Y89-bY6J0NUe"1-T-%V
%A^U;/VM=EAl-ZVW[SF;*R_Ra6gqhW-VITY<Vn[][o=!iS^])^R^])EKs-Mn5s'Pg%TDn7O_uJ]1QT%2)JH'!UO6-Co^]9b9TVc=Z
%1#QD?QkgZDQ[&[na2HH@a&Q<#&%[<NkZN-#%=Va<du#G\\NXuq$a#PrE#J%V82LsI"!1h=A]55s;V\ahK,(+HLc7./aRdnK2Z-#5
%riQ@\/2Gr,:fHWSfVU3a_hEU8Dt3ikrUo&rq&fURo[3:ubrDouq[NJ7^3<NG3m5'fcZ0f'rr&2`Y\m+*'8;mQs,m<W^Bsf;Sud56
%T:Z&Vs2-ttj'U1ur^ZeK'EK/SkHR7'%@P?R&@k)c,ee_qq(F@SM#Xk46<HJh*?DlZE-7gT*NlD5nfZfE"f>XK?ok$ul\okkl^r>T
%EHp1@cb,7DBg0o0iVQlXl<ku@Z]ZGt7nNC+DNLu1]U,^j(_(b;>Jk6qJC2B+X%bqIW5>pklT)6Akb5&HF1'HM*.*Q"Y@*-[pB+TO
%g(%0:,\E:YrJKl@rMZn-&@<%]mDPUo,"Ps0\St>?JS)o&m5*3-_^MQBS+@a2fXT;sb"M",f#ptSQY!N@pO+\VaZ]B8>6>]K#0\d3
%Cl5j[;4fbcjkHICC/?Bh"2(<r.B_dh:[rC\3@g!mhbh#MNLdFar.U2QL5%R0e?3OFWV96d*J4DT[QohU9'tV">25/U'Rr+_i$hn^
%Hk,sUYa\2cA&Q2O;W)[%^$PZ%qt$cD`b91Dp,f6$If]+sjKc>HFKrZH?JEo)RKbg1Ogp'm]O9d=gGXRb!]H_U[;eP]\L/o!p^+\`
%cDHR'[:qG,CmC*>VT>Eh<GGpeYHsRB[c1hcC5-<\5f+g`@>CPc9P=hq^R,c<$MH18D/'pO/G<nn6!rVS`QV83(qa6pJ"YWU5`6:e
%MJ]U#9AkBGBZoPob<9)"Ej:<7$#3kFLlKkC%nm1%)FLb%M!]IN>Z[mPCRl%PEVQB<Xq\?i5JYWE&YjPiW%Hhp"luu%bYIO#]t<du
%JUC/uf+Li]3R/GF=W=:i]fWaOO%]"YcWR*9XYi51;G`kib$hlkU$]`"h>2:/CU4."oQG[N-b3ma'!bs9WIIYfh'?4q!.!lWZ"FqV
%'YnSa\9UB+@!CF;-hh/j,6`$UAf)T^IWOE+W7dZ=q/Z'G^:E\`G+O''?LHJ[VO%DYAsoN@EDcsa[Q($r)jn$SJL)Du@e%.eZb&i*
%:rj?I@S=S;S79<JY-EKUMWK(]Z$2j8K'k*M\RuFJ'GQEn"XDiS>7!b9h)r34f?nXa93<S<S_3Ns\Acm<d2O](PYi#"U[n(\`Sn[N
%$&dYeZ"NfMHRW3DGt]uq0N9o=Dr"7r[CgoGol*Ik@IZ1$\Ruk/MbfU6ao7J%lGOPKX7M^q??.lG%=@R(;NM>rX'7UlEoE/g#uc'-
%.B1$dqI`@EPQQ#nH]Q-uKG\Q4DhWNhEi,^*O3t>e>8@O'?f)5SgYB;uiJZ.Q<T6#B(i4c)m89H@8bZ@VQJh&^:Ngd)<SX'7F5*&e
%gN(tOUpjKd?=u*%ZLh93+Q4Q\p=$_-Zb$Ms?CDsWhF]6il=_'!o0D%6A"]Z@'U,'Q]8ka:f[9,!G&kne3)Z=<XLD<_%</Y^03peL
%`NXT7J.gc-AY.dN>]Uit^du2/.@3m0L)//?BW/7?77%O$l")bl&pq(D"l!TDARs\>SRV$W7eTP>TLkHai=_n:@H?sm:D..I)nH>=
%>@lm\N0qA@7r4IdR$[?aBZbbeo`;Tp:nr+[p>kaG.othIe_AI1f@PR3])n6M_Cf?bBDPNdr&+e#cgTVcY@t8C9lGpaK9$+O?QNlo
%lh`X]S]S^M4_GLU[aIoo=^)!)BoNU:8$f$$862E7R$u_?OF)aY`bsucp?Z+KYne;W\4'?(d"H&OAC7Rr!OZM2j2OCf#r/QqA1.+^
%K-RWRjNVQ:c#*?/g:002c#!`AQUhC)kpUnhB?ubJ)4eZ#ijs,4bGW>9N1",C()ui9G4@9l;U=bZJ`<78Q&=?oBP!9?k\,m:(epLZ
%%G`;nNj=jqp;lkc/WM:^)?.7DNk2arn,>@X;M5$/B$,;T\/0M+s3B<boQEB!;?\BUp5a-T*N(5@"Pk&c*/HbiIj:>(4da4t1H6Ga
%=i5$8LKtGRbkKZ6m,agUn1?'E4::qjF2lHW>Yqp)%NXm;Xh/!84s#EZk^B^W:P#uueP7-]@:egSGWs(kFHUs*"bRdap*lQ_QGf&&
%_@nUVF1SF]<k!N#p2"e[2e3:bqG`N(O0[%nN94,/Q4Ups-[nE1\`YHFDibjl6*c4uohcRk35Hq%Mo6DW\KHkPfc5_.cAXi9e:DVc
%j=&,3+Su9pcH!0.GQ2EJ#n"@\<$1mR&rog@iGk"UGJ2(V4"?9QW5hWp?\2)4l_!Jj&1Y?e:+XiAf\OqC*Y@Vq>#</>?-Y+iBn].V
%T#'hM0#k^.#&eJ\(!2rBa>*uQ07'F'Aqdr![IEiXTfsC:dUO\7<NDg@TcbTOh%,51D+'uhK#a/)F;)k4Qc_H,"]EfO8Hb+?<R*(2
%%US;nCX^RU^C)eo"0R+Oa[LtjD7SV[I"9;)Yrhe+W:<sp%2:a8,:>5in]rD"SKS=UjQ>NXeqbk)SjearRiFW7%CAcQ=]'&DOHj&-
%?(loFq3o"b3\UI/J,/^%IsQD'[.Lj-q>^8WQbWIag@Vl;V>%@j"/[AkZ2S>=noNuki+SL4cc!-ZhN.H:alshCr]IPt83AX+NYTPt
%E7N6&bUa]eh7N.0"c)Eu)m.i-mb5dL%lBt>P=tW8*Kgri[0sLbNSP\);._Q.2ak=GU.d<f2<J@1/[Gp>b#kI8Om`euWF8$U<mnI9
%rP?[#4r2@mrnbXI53@Z*f.LZ@"E[1RSd\>/4'PWA]-$qn@t3f=DI0faq%&Cg1\_\s>?@=>O$WYO>CXgo+.)JLCjkmZj4g^p0$`r&
%2th[&gC5*=,Q;hHRhu5r\.PN+Li>_X^k\3bh+\F@H#b;8Id(-&K$RuCI5#JS9F,G*X@LP/ora49\*u#)2>I$%2t^/!mr`N[U">?>
%Unt`sY1n.R8O%C[%9Lh;,US_R`@!?!d=d>LIE<om+N4O<BJXU=_JI"rF`<g#H":3eboC*eOqlk>,Oa"MINIBKo3Ap')!qs=LN9SZ
%*PpWW7kc:ChZ#^=Y!;95@(9`oF0ffE2TusBs*i;"c4jJp*Q3HnDWAc_Crl,\O(/PW*ZL=1%]uGc]!@Sg.C_"VpY'MX?,H82m_bas
%c42EM&aqMm,<[%#2]Z)5"J>-c*;]UDm5l-lhW)J#[A^-P)h#6#5HG66I.?L\_&aZa6QYUkP>Ct@&(HZpJ_mGtP[`)ULR@#tZpDuD
%Bt<M=4"=f2AfSiP^7FU"XjeSU'-dd6RCKOicZ7%k5c1cZ00np$#-1T@Z5-1HCQ0ToK^;$i@BN0c?*nc8M*-#'nXk<aaAsKu6X^Mo
%pjs&Z0R[A!'k:o/mQ$`<Kr5'Nm3[o/g98`:qHu=Y)k&e?!s7]?!AK(ee-0CXRQ3`+SINT$KhGAV%UF,WF0\m2MkJ?hNrq/S]A"8*
%AAK->P[T+\kJAb],e"sMK4N[nN&5e]PUdCo)l>9"V#'VSAMQaEE;36glp\-TjTo*V+N]qFj>4`@Xd^59Nf<`'eatDu!Hm>kk#(*J
%P-C,jV.bNW"Xi<GE>>R8^'IoYe]t,4:jN]S`<W<fl]Kh`eHVFeG%K49Jg;hLH<3].Sb9u[]c?C5pKm:@MM'Kfe4&mI/j;onUD,)?
%n)MZ=(M!p*<UZL2PP$Oka*lON[VP69hA)N;X2.@/p#4HZHb!c>?7s61]-pte=Nsp"'5G_?QX?27P]r#RjIWGtF`N1E;7r"2fi];.
%=:G`@hQB"Q0D94qa\+BV^nc1NiPp=_dMjUlnXUE@;M/@SHmeYn`A-$kj2.g@\KiW.2(;kQ:S^*'%LJ`+mBtpYEmOG.QmLkcB8Q^8
%(H*$)qD,8XCp&m!lj!fn\F']0kk8W\H6i0"XYUg.d]>=*;F";IBq7OhPgZRSBa#,]X]MK7]+]rO]<Z*U5eOe_R_5:SXQ`n)"?Cq=
%ohOf*>(c2!j]UmN@RN.*%DQT3C23N))q(bY.eIOIih9"IPU91=D-F:nd)E;(9qJNaZ7*C"HFD7ek3TC47;B3@](B_=9?;*Q\t\%H
%=LDJ3T'cAN>!aRBbV@/=1honK@"?MlaUM.M2-aB=X0)+ochDd,=Thf"N+mJ[^n,*3+Ln1"Jk"Y4H]2ftifZtW[fEUe;U9Q79WgQn
%/]BmDU,=Fr\DS.)F5qM7ZsJHXn+ZSmd@tcGc/hB0l6A4K=_eXH;R*RZH`;4.I*I16D%P^V7;7!6r&lR$EQp[!9(-;^n+`[__lP[h
%1*uA<-J)nsX>PB11j.Aq0D'(_$gQB?7I/*Ip0oRrLiqt5o^>iS,a?_=RHHZGa?1!>dM4W(eo"3\.DAP\Z]F]t*fL>%cZUJ1"P((M
%nSL?;AQf2)W6c>HF"tpm5.408e8ECah(X.<&pq@U1W*K,]hsg.KN2qeSj^?B4/6Ui=S:Om4l?-j>j\ONG[5&d'us37a$oNM2#jp$
%HnY5As&Y@h/RG[)d;:rZLK?;ZYDQt/<;KVbS_WgbTTeH?8b%E'4`47>iHJBU?MQX9>85u<4l6\qDcVd[)g&p!?%l)odV<d'/OPJt
%i]F\`]0c#"a07$gOf++Q=$`)9B!pUiZE9%u&#>eu[KV;.>5!/l!Gb\<2@G%]k)u*4m?TQboNM6?./.Ps,CS]SDcFe-Ib?%KC3!Y]
%DgDXl1n(Z6]o"sUD:HJ'e(ueE9pWbDc_>XML!1pX/+2"BgH,X\caL<Z#,5;iE^.[EM]/LI'tQt>[i5C8^T26Tip;>iXYb@jZJ?(n
%"',-O-oB%_1=B?YJBRaglW*6'IABlES@,4Y;,D)[3h^HHZ3Wp,aNcI9%=>);GEC7=[c%1MiZRG.$+2BDoL2SpgM2lQ(u%8@n2;cg
%H78K']eaObfL9_:'>hIF1\A-.To=G#*9@t5D`>XZEmO/#Nb7Lh]%n'uj])ek_$LS<BLaM3_L?nU%))CEcSg$]fQJB6Kn]2"gi8K/
%O9RTb9b+?)eE#EON>oC5-u.u=;!ck]#O8ZVaS@"sU:>\_CFQ%gHkF`5'g)gDVY1I<A<qj7Y=DL:%]H+"d/#5Kh'f!;Mc],#/7;`N
%L@s3`ILum[D9Fm1H78OcJ?"ucJija&mu#sSMA'_uRIu;bk"[hB&#>e5n&0l`ISi1HREN+=NU)Tbg;Vnse_8f8ZM.\nq2pO(\]ikK
%Unp)s]pj=aBjm\&h%_Q</A6BXoPC?K=4a!b-Efn^=[+ErWhCcM7;:P>8TC[#,4o-2B1eL)$Eii=:%QHJ+;P:.'KsKM!rd`Yd..>R
%WB`QEi7+4\:`?q$X04tWU1cA+T!_@E9]b^V0a*S>UN-PXKPZ[+K$e</*HEbne>-qXCR-'mBEZ)FOp7ce'O4Y?2X":#mcocRl;qcL
%G&OuG[!k?<,<.Vci+&?3fW]R/<EcfNJ-;'e[WR'W8Y]P$3qC!Qi;uc'JjA8N$C>ZZ>d':$$[`G!CV#@[KK.7N)qpd]<@2d`d/JG7
%r!,G2iA9GUh2gMZi#9u<1F94(=T3pupDH1ko&j6P&$SMjR.0_C&&oncj>4[EKueTea9G"lcg-Oe$\dHGmqm4^=_uRkZ,7D.a(L6<
%11[*R!_PgDYNX=Lfj:IE20tO9^'nAP*j9O+]KnCn;,Ga(Mg4fQ2U/G2!>f>/Es#t[4-Vc"d!EQ8*1Un5Km8C(=`Y%GFa6U`Z@S+m
%b>*OL>sKIOH^:E9"Z9l*aCNasV>1&]>hQgj%;2L9h,.$#]Rp6a3bFQoUcaJ80pAB>3n_6\=!l<I80h%W+,+_6>*`5iBZ*Y7h_&fY
%J-:0$K"RAl=djlNr#`Y8M;16jZ,5#iiAc<$>kuZ^MiJ!>7nAV2PLh10k+<gON)!:lY?J5EZ>\SPY.QKCF('B]kuBk$V-@:1pEN"#
%r,S2edP4;=]APbCX4#d"Rj8ClR:Bi`N0cLPE9HF]MnXcRH24.t6o8e7/I'Lsf\=AnOtZBB8$T9P9h,:aI0IS5GqD00ccRt'b*J27
%:Zu"`%YlfHKo-OsXZjk]eL8BRJNaa.HcQ)AH:fY,S;_V!rj#8i%1Q3ejXR%GQe9Z8<?EJUbH@Kl/YQiV,pq[dR%.][$uM(]'K4ju
%;<jrW.&D4aa=_)@m]RRB1c``e5_762Xlme&<]#OO#*%3(L,GuX0(5!<eF_TZ^<[7Q,d^_d*&iL=[@t>-"*'?O3#rr7jmglpeqXkS
%@$uHl)3-tDl)M<IBSaj_ofJ%8,<>H-h$1e,PcTuda)4?BI-Imh`gcNK!Aq+XC%$Ep*&[4cZ9XNNAl/cp<Nm+2!dTkR50Mr+\h<5K
%!gKNbW^[Au)<r'5P'IG^,dn8_AcsPB.KU<:`8TW`laEWC)]M7>(0TWr51h21J`'jq7"S*OlhHF*?K6T,GP@T*r6.rX%1Dj7Mb1il
%(a+Ai8U2Geg6+7,Z(D,s0^C26ADM#UW;WmNnf_hAXtXtNF(&_/bM:nmaPqUX1heG>*_NcKCNnF@.i5Bcl0tbu+?Nei+dWrpOp?iS
%&VK+`R8aPB&XjSC>HVC/fS4sD0+',^fHpC0l!]NCh(\7.9h0i3/K$@a](UBb-E/%?T[DGP,+:]rn+(3'D&?)[*nqCeb@64F?JU^t
%BZ%QMlg+HY>&5G'53pY6[g6/K%e7X;F#)`aibkfj4pX%2iU2>O2SL?B[$RA,q'+e;hnP6#Z!WeWMq6Hfa3QKf[L5VEk*$JEWA@U.
%7af[#TJRBCXshdslZ'H][A):26(/oI[)E>fW/ic("_!D?-o)`4O0'"k,`+dt1*(YkH?\i^@)NC!DkP"IX@Yu@TV84hbNnB=qIN.N
%lYUJI,95A*YuPbg<WP47Eq:XRnUA;9*r0[UN4fPaDVa*<Qo>H1gP14Xqg<eGi&r1S3u!):Y/,JWH-`>g$AX))*J4mYI<<!tf.2on
%FuDlh845+$`opEtn9kuO$Hmo8E!Yal*uEd`f*h%(?Wun_e(3\(p;[!!8704(o-m4;LC="K$.=3VgN(*R@2^bK\ELl5<Lbj[oK&ZP
%pKf*m>"L\CQ%Xp&qct53&%Fq*T^qkH**_p!>>09+m3q-#C,HrmK$_1@/]G7+O@!qZPNC:4*\)UJm1QRWEZa0)2tgk"?/E$DI(6IX
%_FfK07<@darA)$#n+'hR<fRo_q)?ZUs8'Y008FTjqf#sS(\SFWedk&ENUS@W]1U0G0$>/7CuekXMh?&?c6;eCJ)bJN#$u<Kj'^!N
%9K."WiIq$'3Ormf7^!J?$TU3rdB+Z6UIrD@ao/A;%[5be_u4rnpQkKL01]jQ6n;%'%fqo=3*#.)kk%A;QF#7;k#J;;o_*o%3)W]#
%`o'$]>b+ta5N'I<#nJEW]/h[%)r^ML`ZB$aqqThZNs!md<t5qX#s3Yh'o<qsU!5SXk$Z)T4MH>kSUR'n`J0,ImBo;\ao1De+-=ZE
%UL2O7kc=u/Mu&9_;AmSomE@mSG_di[ZPo>lD=XDj7qX\u]?#2<;n6.L121Up&63cNH!7E;NtOUh!KsacO+Nis\5"c.PjPs6r+[V<
%&7%KBp(."pCngSmg!n@j7B*B4Y8TMkQ]Ika0@WMF7-fo>W?E?0/S\tjWs0*^q4mRS^Ws@-,L+Rtboqb6&*]8<KGEOJgJYir8./-D
%LH/e9%ef;V59N4))$Le"gG\](O59s+=<_.`l9dIh*lu%_Y+j`GL7?&1VuQ2Bs3&0?Mu/i*s5Q?BA+NR\";jXl+7[>]Lc5rEc6)AL
%?R4P8\36G3kD;0Q"8Qm7cbFFK3cnhA\jJC\r5b!4Id"oajYP14U:3.fa0OpfVB0X?O6*8*dpN.BJ,,H2ne=d)rU.@A$%/"cYMD^%
%@YiqnBD%U?.VF)k8n<ML[b$.900st!m[b:&e8PYjk(X(t=e?N<\:VV/*eiTW5i.#eO&Q-gJu%YkVFUi.E8Wj&Uu,8?5k2i)6+QQm
%9X0ZoKP*SGQuF'WTJ&QO487JNa*eb/:lqP?%1ak"p84c7!Y,j/QuE4h;1H\:(Qk(M!KdM]s4\Sj3=9:^FG"aV[Hp]5'V($sJY5>l
%7if-YEnZ%_6m.R%eh^:9:r@gTAc5Sf]LYD`9LX+qe0q!T]#992Jls[40B;=9UeWlBo(cV+7[rq!6L=V-9c<ggmk2OR'-FmpXkN5M
%Lcs,]aQ.$:pVH[:l*>YVP(0fOp`prf3GOUN-'Z6[B'acO]ngma"qT88&2Gh>N@D^4IpeiA[[?8G/31?8#NuuS"]GlY^sfHtph>H7
%^M`D-p"&#$)]T?]R-a9XD"8Z+7.LTeKI8icU,GoLY1cjsJOYh6,`oX7n)Z%tNlL5-1%rj1i;%4Q>OGOp4WE"kl\SX1aa$p-eCg''
%D2ec`)tt(V:?9Z7Z3NN3jCH5m_2Ycbs!2*@>;iU%le/e8L`:p>20SX1"9>f4Tmt@%rrX'N<_<rLh9j5pY+I0R_J.65MX,i6`kG4p
%p+^&nPL"$b9:PUKP]sE<W[73-NLS\%0I4-YR2aVuV+u<iL!$Yf7O91G_,4Q/:9b3u*HHQHDLR50-]bXn0-*!N=tLpS5t#GpJ308g
%R4McB\r^'M<73&d&BC4&]2Xk]pA)BELOqr?#m:=K7<h`6+MkM=N(Kk$eB7N<3V]R+4[DfgV'H$e`rb#"hk9/3LMll[T)^+7U6Gr1
%(([CPeBAJoWot-/Cd$\NVC_E+L$6Xf?I2Q7F^P"b7O*J!_lk)i2JM!VV0I$(O72.:&%&oJNW-Q-muJ0XmjTe7-;MCPd#g@nOYMN?
%&&o6P!TO`O2f`n',!eHFF5aUInZ6\3b.*7.d%%EN+j3m,QsA$m`8dQrl0%^PZUEI]D!3kb=Sn3NL+Nb4@aC*==ubG8o71#g+&1*H
%Cb`]/n8=:s///E[.ft+_ps.$l/JN/ndR/-"";jBU#&BE9WboX;#M1%VD9S.`;B)sIFXVPoGDY"oZZ%4qn>J(crkc%e\7c*q0EL9c
%>)469Z+ltc@PR]^:-XbYQ"*aS(*8L0S5N9>U-h-eI_NDtr>,,6C]6TGO$Pt,\R.;Z&*0j@SS)`]2%[[95sP0g6QH^Gl\!R*#+'&<
%MoAee_N'9J9Ra*OYh+$3s&F[M$C2NUB4G"EEq.-l8KiaEMJPRCrB&0QQighO6,3:g/$'6drFB`S[Q+g$Tp;T)#Q;WhHIeqV%YB0#
%&XhF%c&lUo\GI1ccl`2^21Cg`+(88GG;aURc;A7b!j/aVYWiWo9*%CTUsF)NK1++%V-o#Z>$p=$qf(_k^WdVMjR_*q"P.;,kmt_r
%"BgaQ6"ur`@)rS7^]6t]pJ;]CB=[T$%F)Nd!@i7!j^A_@eG(l5r!#;[%V`gNbTE%:6uXS>NeG5cmu0XP7<TFuaD+W*U@XmC-03s[
%]#FTXKeKB7@;?Omd1DLHj$cg:&9fWMoHCWOoncN5!`(X[8:Y&7K0issD:ELNo@-&br2%_h^1OQ;JEfk3pR=X8$mUrdD;c\@nEjic
%jcdD-jp0WWY=lHL8'Fc";r]+b7teLR3'qsqqSYP2'E=Ycs8>gh7q-m8gI%MK"UX)k&hgW%@7)Pia35#.9enKf*S:LGGI$I5q>0'N
%T]D-d!#4R")HmPh$"Q:5HeVpPXLt^Ei$\r<OcAc?".rg&)L+R!HSoiY,7"^)]`.U;_@+edrQ>%b*IJIGad?q+ndn>d[0dgArjktX
%'3JD+Yo=d+++XH(Bj.GW]c=-%?q446GoS)-4>(%D*`Q-G(4fC*7h@T"ZPG[^Z9SVD"s_,*),V\T:lEN]c`GJ06$"_O57TS@a'FiN
%+.[X$HElTk9'g1>]+=YD8H1)e#BcGW+,Jfg@H>Ifp$9WdOaKW#p6!HVaGW5@I`LSF-n2!s^&r:j-BMifP*LVAF!H.3\D>TC1!]fp
%Xj%O=pC-'7q\m(EHqm<XXLN,H#:Cc:^SdN^2jfYLoi:pM5CV;\*G6%DZ,pp#ft8]OmjXtJ>X;edKD;"s'>,Fs!)K0cX7<eNnL(G4
%59.F.0LFXJe2:&.R`O+rl_+DZo9R'AZn0J#d;pOYpWc60_7TJPU\?ZRCfAYqa.nb>3.dY4nNk0rlQuMO+>jssbp0P%Q)gL'XB&o-
%c@Yr%+BD9/L?5><;.lMUNuuFKhUrhWpnbm*"U+4<9_1HT7O!G/hCXd$\=t<Mfj\bFq$a4E&W0a&3%&I8A-98l=b:EtOV*_t[<O1u
%ku^5l*!d(\_alLCf1lM1&kd"mI=n+k^YI2&&`J<i=p_.KEptZrUH^4q29-J\;2?r-9Y2tRVP(V1SY`Fd3`[QWg'tc>f[QoY*3jd0
%dsGD^V8"Bgs,P1r,;K'?KC=$/i'RO\E[rC$Ohg_5')5:-&uRLW-@tWAN;"R`NQW(/M"C'Rja]4a.#WL?adIKA'Ct_p3EmFJBlt#U
%2-D<l4h!ME>YT1[b):Y&F%Y_ULcn([YejtmR.`(bLpfs82RfOc+1t#nTDH+&GG-c+UMXpY93\&ZPg;.5b(fK*Z6j1j2DE'?hOP4H
%lGA`WX,GnG007SM=\P#r8.'bWZp`S()irHAfl@B>2VA(ARZM&icH.TA`!jM%f2XA^IqVL,->+^P8g.J*eOW9/K?s;;-,8D[c4B"#
%7;S?:Hg`7F^3@R41Kbqk^Pc$/0)=nh@eC"im!\"u:$0[t)FIpSDC$W^"k(5u-mn54`>N/_94@i&lD'XDM5$)n9Ncjad^nXH[_B;1
%Ec]2a01#b=8A]\UEON,F77iYABGp(`F?eDaalHks_9.VO]&!1]76(`r1<Gq&EJ"12N.#cdTAJ/(EQt<).o&jFYt0%!Y@lUS$I1"]
%q/Lngb+ra.egV3%QX&I[Hc!tQ>\g/(5nSGule(tu`kK!AEc]2apZr`2BfZTIh94HI-<b?IC1\shaOiEHS7onJZl#QLb._M86`qg\
%BfO/#DY3::f)0$0f]JXSJbP*`O/slTdH;s^Y.<XOXfd#426AKMe_-ZC&EJa[l6C)"_?*!*p8?#oIZmCinM7Cq4T?,m:m-'%4]7R7
%.plMT@)csN\IUOSZLC!\%UGieMDOXo5j%)6Jmq;M;I(B?CJnI,:MWj6jRQ#6Mhn=:e^Nk7#?)4gem%iOZ*A+3A!V(k'_R`@8[D"'
%(P&hbr_^i*IY8**YOhKqo.B9UH7FoP<'jp4'I-?0pH#Akbs!:(U:+%W-fj[V^LsNq?9%mH3I1NWP=0Te6B*f''pP?\m1:'qFSnjl
%:K*Pul@4-JauW*(?#e/eHP+c9IAm-)6(i74LWW3.#'GcG-sL[(`<(%2-0kS2WBgaijE(3,8jPp9WVtV?VVKsl.<9CP;nQpr!Nf[K
%e^ClIYf=)H>Y/tR%J3O4ngp)`hJ2[Od$3p^@2H0Vf>_\<Yp!sH+^f4,&mB?p\0cAf$#[7#p6#77B<*$HZe%a^5J)<UG6Zt@j^6dJ
%Eos+2i9&'5++Vh?VO$ll#R-hq4U1b+"A[7f6u-HFB6ORk^J+ikhS77%45\[)?O'6iIco/<Xeb\Zi,NrhpT$^?8Ffnn6?]\JjsPU>
%!2i@!,Tb&t$NIg]JCiT`l)t_MHX,lA=$*<!g[N=3`3kbUFI<!:!q8*6Cidke^hmq60@o+!#skq3Ft1[LpuOBVXh0ZPbDl!jUXp[k
%+-<mR+:C^GrF(=]FU7XQB0]JH5\.sVQ=5Eh0T<B&4,^t(rRoDZRnn&J!>R7p3o3d,OadUm8E_ua+^VJ'g(7Q]gNmdAo@m*og_HCS
%L-WuDd.5:l'Np0,.]o9&F4`fmQ[HP.!O<`#C?RSiSB1h$T-UY6-*uKN>/'-g!cUqNT;$B;?b=-kZgO%u(Q]Xr=_%Zh_1fJ@GOg6[
%!1^c/O[RJ;l!1D$Q(;DO4folQGa.Dr+rd`IQqkaQKHjf.YYs,3?r7!Jrb0*l/CtQlE-3.^b=rM&16YEN3UZT&>/`r0S]skb@sjRi
%>sB5ZBgh@6PW!WrO]=03R4mtNAPJHkr%2--R3\=,*'EQJZtD+M%on06NG#8U.:Wh10kX[mSDi6&=>u]JXK?1BbbaHqTe'm<)BR>n
%U6T^dECj(gQ<=!Yb=?nti17+Pn:>+/nr,J\r6#?%(<8,PDQH8I6@\Qjl"O,K@-KP/iY1TFjOItc+a*QfK+NSm/j];*T7+2$po=PS
%&U1YRh2RC^2SL4u+o"?$&-q&Pdr\.@H#N%0n94Q;)0GVg)oY#.&e#tH-J=RbDdQ`r#O;&_D!9M#VIEG^VM&o5I:<?9e_[knrTOE&
%*2M.Cg[0)e>B1i8i4ctr7q;UU]<NrJMfH@^fG8\[g7</]f3<NSB>r\DIb:Ndf7=m$8-oMeKH)jB?@'dIlV;`I:@%=Xa\E5b/$&OB
%J.5B/.a49E]g0RrF\7K8D@WUR?^mLkcK:`sHkcdA\Hio20H@WH\@+(J8n;]D4E)7?Wt[5?R[1MH;8!oFWNi;a97g:gTkfBdmnISX
%)W=8jW"0Kf8IR0[Gs9Dq3/hdl:l'6-g<T:m<TNrX.]+N%jhU'G:)8a#8QDg_?G>Qkibg;cK)/lYh<(jX==:VpBJ"dS8n<jiEFJQt
%D`d3u:sba]C+DGe_6j%k!+Ti`"pqb$/5#0'%`q1[_RHfXiHUFcf!KH`&W$BJrGY/EkLb:J?%]4u^"!\*5]!8&)Tg1o%rFBfMI:$E
%:\(R9=fm8pc^)qfTMc(`R3FMkOV!,.)&oifZZF\hD0<suXHS>!A^iql&_*5AIga?0Q6ek(^,"-HYJ<CLeYa:d\M6j10q!M]'3P-?
%7]Htd[^LRKddOj8^>(dPD]BbUUO7:D:#FipEq`etpC=hLfsHKSmkfhe*A"">Yh>k*\=+TTPA.,GqN(h"C^cV's%>(FJ.a;)q)&9C
%#U6]7(;*"d:B]3-/]Fj$p+Sb*om009ljbkcmh1"e09rD*bca"e^XpG[HO&D<C^Ru/CoYs*:5f45#jt2#ROX>D[\MqnaT6U4b!FA!
%-,VhA@`c+TT4I;L7c"Fp6!AQDc8Tnu&Z<)MCd&(gTNEgW>:9Kh^!C!9a&Z.#U_T?<9Qp0do'S<P2VG_Q4N<]GiGdoeM#:a`W<:$m
%Y?<7/LTFW+8F*@G%>]'iA'[.a%4S7u.(`IT>ns0!VUR@DBFPgRV\GK)U[_Ni4IsqDV[>V+)?m[;K#A+.rMEFK4iKh1Gp5dnk,ab1
%9\6A0hP8Z'P6CU&R^<?P@Ul2*.!3E6\Cb!6jMa$N=Z-eQNDahUj0DoqB0&YI7q8BlS_,O)B)b0S&q/dhDfqMqCH$R&PE.`k"D/$-
%^\G4[.IHj,MD+OMV#[#l7<Xef71gZqou74gV5KlWcgb5j18UOLct'ngSWNZ1Sao]c"Qd6u3bp$O+1XO0!O+gaQ876uY9Po.DX\d\
%+su(8TNg,A[]q2Q98&5I.U2bE\b<Zhj*^:;Ph'3*'GWr:DHqs#iWrGpgmWEgdt!!cc9$RpKc"8]/tKL,\Rg^RmQo+@J.g#Z0!W!M
%)UfKaSQH;EN<G-AV)I#T;HEK5n!ua(mYuuVCOAnhmVj(gGCJ*b&;3+j0ASQ#63lH`(`nA\`Z&lJHL,tu8balhE5&l.pDb8J$YWV9
%Vi[_BYKbBZ\Bd5CEtBDYR[<TG"Q<auhIYB4T*hh,iVmN0A#R^#=qlPBgE0:Il6+mMBFoWX+P^B@\:9N7.5i-l1m]5^eImN3I<O?U
%NksHQZ->/0"*_")l'R?%M1jV[@EKJPIX+XLkq6L@4$e%ec]\V[$Wl4/dib^p>MG5q;PKB9P9[%nP!*;5SRBG5p8gjQ(ckMAg,*iX
%VitNQh_e"?jRa.D#RVb@0hb^bA!F-q-`ob<R3s\["B.Yh6.Nu@U_8ZRnBA9;P%:]L@VBODqdHob\?J,1V'MAhOUBV%Us)B4fmh4)
%`S[g3@Er"'a@qX`k71dQabnhcSKt)Tfk6lBjo8NS[u%!<Uc1`&LDY0B0`ZH^ATSW)2-1DOLIm@)WEf[dfl#G8],p2!KG?8I$!eCG
%=7F2Sd@thj)Wo)<G0`CqUXo4+_EnHi1heI_)8NoGm!)Qu8WhMR9W+a[0rF'"f]:`i8MaqKE%%?2JiME%_2TlND1T/f<Mud7kH1m#
%/TJ'5\k_Z+Oa>BlB:h6R)U8!78J\eD\H'Q^ZLB;+B8)Z),A:GugNu;+=sp+N588EBL_G75d$rhS=rH;k<!\Ms,M,CM:A<_493Vh!
%CJW-q!u=m)hVb00dA'b'0,f*@A1Y<=kFH#M;LmbJ2>65^JKo(gUs1WJ*J`']Zi(?-aa9pP+RY933/:rV#<so)<gjWBSW70qUO9*!
%@e8>_Y$U_!cF1-%V5+)$V/#_i`>3Z!<3E[:O?_s[Lq@`(E!$CX\%'?$Mn=7XfI!%!G8i`h7Fhc>^/&^`V57"s[#sL6Q`QD=4I3&^
%jCLr+Js!IXV3Dm-]^8c]I;d[49k4M=VSu0g?\XlJ8o"6XK[;Oc-)k:C6I_;@Jn1Nk$"2l/,LScGD0I0cdaCQpCp"'l]cX?_-SX](
%)%d0WR?Z?e1q_k%":&E/SoB:P_]^m.V?/MJYU_>!S^+O*$:jDAQ`odX`Po2I]mRm[`nVnV!ip=qer>?U/`Qucf::A,)Nf0d/fioW
%oNs$)c:G83/QDn#D]E^P)I#*k5[93+_6Gh'OpD\/5W#u4*subC4j0VQ?kP;KS.&6<Z"8`uia^',S.\p`MG-21>N`$ulIrA]OmE/K
%T\+`"ZN2i<Zpru!6t/Q<h=c.,(G6O[SREgp^'fa9+N"D\mmC"mZJ%b4LC>R8gRVO?=X:UEks9%3nkF(fU=iA3@DG"/d$J@I4=.&D
%daH=cKZAt7Tq:J29<_^[o',!KF(9\_L(E(FKE`-QI+jtbNQe9p18r35kF@`88u9$:25#RdLoF)Y(&'&fTq@U&*EZfKON#U&XO+KR
%8SeqsR8%T(LeD]=qoANh4=:hbgB^a*m%/BieJt-i&.OVh9HIbp%239A!A'V:V.f8B](pP+[_<V'/uqS#(qb(<8\n/\GMZ95p$l]U
%R7S(Wg[lH]o3_kmP7=XSC2bKrT11=%;.`b:&WgGV3Tn=`PV4K9n1*RnB01'iH!:rZaJ2(K"f4pCI1'<R^YqXWMS&`oYt[-[)r>T<
%R*:0p)gY(1%`L0i3Rb913#VD"5FgQ.+3'QO&7X-Lh5#Dj2.<=CTJ^.(+c+6=os"Wt"lFFm'mV21"^cS]9FZH7l6S('M0(TfBTN>]
%0,Z>d1fCnBe0[$I>U=YS>R\jj8gW68MA=m?Qf>\*72^`*buj6/EQqU:q:^u0W*b:;V7#K[ptEH;A9X[O4!f"ETPo\%nPhDnWY:aJ
%Q9Eb)?JH?f<-'(#>`OU7/H6Lo_<&6R84/9Z,6X(A'a[70,5EK2oe[@.Q,jMVNP<=JRsS\5]i5)A>&!f&a\Bl+4D'Oa53W*SGAFbs
%O-qt-,/YcXZ+#[mL^Z.i&CRbh/U2AT)]MtBCX%L1XW/h5!k3/L;E$p]6^o'SmsZI6Y"`eXKlPugo`_"3b@)=r-OH1a$L'kO-lt@r
%<S4!IS\u^8c1KeU>[2o/+6#!:oAS;JB,$B$r]Ka<^F'A4@%@/->UOHN_P8o2:HD($b5p'VHCKqhn:\tahF;N6jD0dNE:UdK2.UC.
%qTD@ehVCE\`!)&dF`LZaa`\m9pU$7V#qMXO8)Z)uU^Wk+8)]iTGA6b`-UMbdSmk#=D^YjI&1/^gp_8TaoGESu,'4N*ITD3L),YW-
%lXKkcX:pp.o9baVa:I'^_J.`$FXYCk+%P;NMR\2.hm&WA*/1j>@[h1?2nZR4?eclm8M5")N+<KlgX]^Q<$gB:'o!ORl@Cs^jD"If
%;o2+MlYFd<pHWN>9#?=*S_-sU8idLV'ZX:ZC20.L1pBG[+2IHoFgn;e$:q%6gU>WLnia*$X*s5gHFJk`V;NQWVGOKKlQgIQ!U(Tb
%Pd8`XpmSM:]Ao?d!okT-F'7/fNSbT)p=`h\D'bUtK*N^Hre%p6$?q-TDTY(5i0'Hkd>5[,;)p>]b3n5Zpg5c^7fn;V6;A8K1S7,I
%$mc/a*sqYFFV#$8&A,s?TSH*^MSXY%Xq?8(.4^4-@o.G%/`cSW"\$jF:ulq%!HU^Q]BR_B"u1FOmL"<O_,tKV1M0@I*_fL/cWM]?
%m%1iMH?h1,CY-OjNO:&(J3HbN-OA-pf(gb9r2m;+[eP2"%lWEc,bs#+6dYZGQM,b6^\`5%Dtom=HN&JRQbR\<I<t#^Dh?HdhNROi
%LH46+U#_)NDXpYM?4"A&:$:RPITGUQLVn$A`g2mCj7LP/7oMl#T327%*c?Yg!I6r[Mt=d(9,2oFP^h+bkCi?ZJC!/Vkn"h_)tHCW
%SB6epKKD)G:*=_UaO'&O8e`"gLHT:mY8ht_SpKD4N*/:qdu-5^qPN3*K;u:T<3c$,4npYZ.72!,IoPpnVOCf[N=/TH[V3K92RZ5L
%JoC"bHG:!)1Q(^g.JW>m\@1$oVlk.1Z_X`8S>+/8@&=#BCi@2u+$sY*C:Kckkki0"+FD?kagFCr@44:J-:pfkkL+M\Q+1\&#>gdZ
%n<&'_/Cqk1QBi.-#<`@UB<%.Z]%?#./b#?q=15nk.g\*8D_tEueU]YYMM'Sns"WCKGjFu8==@.66?F7:mAf;u=i0S1?A8Cd;>8to
%215Dc0DNdQG`[2>lY$&Jrr6X"h0L><P3_'#"m/&1j,281r-e[?LID^VHpWZ8.',7YTSI+G&ti't?&Z9-o^>"+Aq%"@N9m_4cCU%:
%q@'p*F#q/k(?WZ^h9F1OXPValTch`"lq]A]&:]I^bje<<$TjSFE*1&-mk[^DE^Oh"(bQS.P^[+1D$rTO5CB4X$6pFXbG/KALWt6V
%>LZu.&;P+'EfZI:ff%0"\AgeSI;u(:hY6"SkB,IQqZ<Sc^\Vf6+)8nWqo4Ks:EfS:XCDIGksZ3)[UZPVhaCs_ESj3M(c+&+mNkUN
%P-XK_\8CT@9-d6Modm,"YCbcL=i>rpq'Q2'dL:[dpVJWe+MPr`)GU-`j"isiTA^[rSCg#u*QU(!=ZfR0*cpWYZ-nn#RW&KhWtH=c
%3H[-XEnH&l&=+iZ_T-5=n[1)P\TSt'pp0c,),t;CMO+EMl1UR8OXu+WAV1b-Y/"6%-*f)FM$(oPh6R7cD>h3(Ji8,_2f6)'..aM(
%ED=>-7-hZ-#c;)]fEG^'_)K@Y-4'PUP29FAL^>]qbQ,r8Vrgbd&Z=O.FmSCT-QA',]>Dtii;*0KV%4(!X]`Na;6dE?]UNj/+RPQ=
%4Q^*>+=d.HAE0%=PI$oUqO(VXU`kBV.WG6;WL.XZH(,f$+eTCMR0tnjJnVd"0Fds`d4LD`9fVY/+I.BJ#rf!oU-^'uf0Dm?4Yh@m
%]f\Q@(:=7P!P40Q*MrH"*V,(4eX86=9]T>8\:Z?fJ0YTh>mLD:Lp>XVT85<K8nf<1#"L,EK=tWur8.0P\NR]?&)`S\,QHne5J@'a
%AQQmL;Fg`K+90Y/?iKsVql2lO47YPBI9,W(LT>^<^[Fnm,PdUOR2t`AOaO>4H<ge5Ce%+gO/J+fD]SiUrUHLaQhd-^\nPPs;ZkpJ
%;=Zm;Gu$cKPS(gpSmm,#KT\Ir0P+U^j1L$L(]5aWoS2N^B-S6W$$R?L*Cd\32H+B[ee_e/R[k\+LOuseK?nG+i/<+?<<WFIdp!A"
%&SlA1aI&2qo^!'6`12a^QSuX8r%ta-66$6PO_0i74HB]%#r9n;57#HQ%Kc1NqH<e%iFY3qMZWSV^ML^:Y?Ckgqi0AHD*KH/0.j>T
%I2?b\Q+)ms(UJ;#`Ue+gn3;Z8h][Ph_qK$qpM!/;0nE69fB@-=g<KVoPoWV_3NNG5E#IVNj<@*so%_@!c@lFH0mhA?$NWe*2$eLa
%VKS7G+KZn5F)'jLgcu9<n\o?eGeS<rZY].FHP*?"K!=bpOQ&S[hJSJ(9+jW2>=VNl,#25iQWA>F"Bjrb$!8g'Us146fFIU]neIAY
%mZ\9L+"t)Y>C?At^,GZP^q.S<]T_jVR+Vc8kNnZDqsXRS66l/15D-13"Qb&brSG-"OKdUnn=PE>"*ViUl&;M,JB/2nhUd)SD1BlY
%Qs$%-IEL3&/gWEa%<e:_A*dT?:2F2,Y7$upi%/<WfJr(Rq1c.qDKkA(+:#4WP4jQgm1%=lfcne#h%DX'g+u12b#]D<+YBPf*Kl3T
%LLAokH.d+fXXGfLOR?f"T!1qqV)O'uSA.SHf^H?cfcod<&U$)$-#CN%Go'i&Qf#du9Y"d0p%eHd')5LTN>QJiY91X5?a)PRq<D#9
%mV.=9Gd"i6:X/D=gZNcG>gMsR=!2GtOHL3p2fm3=jDZkTOHDK/1S%B3"8V-^=/Bj]Z2r?)SEPn5B:F7E2nf"5:A2Eo"9=2pa9?nc
%^04\U8(UNr">&2Ja(>,T5L8##>Nqnn9GAN+(fRfIk-P=5`'b2O)@^#(S9u0I'h7.&kY:hke?5^1bT1V/]%q\j<VSY)^AD2I5KM+B
%RBPRuLE%hqe"RD_)+(lR?+^!r)rj+^A=V</MUmCT`9V@3RecRX0k=H[#9+3urZGUla%LZ=LXN('IFk%;h^`^`LWJC?Y5arRXt]EU
%N[=OlDI'q>--2]Od\#gH?%Ll*Ib_A`ZTH2'od'K-6%3e[5Eho3qX32lE^q/i%fAtcoOE::[[p&_5YW`33tUgFR.p-g,Gl,$5MSKk
%Zoim%%>PAe723I@'=Qf<gO04K)CE<1q/Fip-\.iY.%@EI\m@<_DST%0GZJcclYX1&NOe4Gp*`.]caghWeu*]t8]qmKji*'bG;bHu
%DqI>uT\AIOS+Y?bNDHM2!!^K8d[\QsQIHNLI+j*ugRR*+k1`DYI/2Nu^]2(KrNEt_q<-YMErl9^\*g?4hc8Fo/\p8Qp3to1qjlR2
%[D;1R]PZ3tc5QVmqVaZFQFHVgE4u3mQJ1eBbBm!j&5(^7gX#g&LKVC*EA(h"c7epcZaB.qjZ^p^a@D8;?`tA9*+<*1/F\OpW@u00
%f>bP*Bd`I&ri4N=Y%)qi$/I*52tV\+d&Ur=W<E^#M;)<J8NtCgF])X<Sn2oebo0B;L6%L8qBrnF@N^Kq/ZnAtL$sRTdbIAT(rFg9
%>[o9d<3mr!+uPB?FhG-:O;</17_2NZ`HX9,4$8B=8?\/Pcp<n(q;,C1.`$HdlcnLNHk7_t_o?2]nY<%P5!JF_Bp&8rS'@JoZ\f$M
%],g=e%=;hbT6q<V8>LM*L1^,h6s<M77>1]Cj'.YeGU(rH"o2B]6BAqJaGgN;=3m3RBgi9G7D[AlTQbVQaA)7lC3,YMq&lU][TWqk
%7GRn$EL<Q#jsQ2q)neFJF*l%5DH%&2Z-PF%/Uu%)q._%X5+:HqlW_dc\NbqQS]Hp`4R3U7FQ8XMjO!'Y_W^E`CRc+n+L)YdEK*c\
%.8<N&#f>q>QQ:lN7b/+0Z!01+3.W'[#8KjS.pnEl')+5%PT-Id#pDPuM#2(+,K@YMHVh]t5m#r+N4gkML-sk"eL+Mc%:V(.DO!kB
%>$V]<&CnUfLC^)@UT8_b4+p83!i?_gL0EFTo)aTh?LIlW+7G'444:B'XtN>q:g>p<qPZt783?WBlj*'!7dsLta)Kg'8YO5@7Ue5D
%#T\1+TCH;Lg/3>N6&_=N[$R!aNN/GU(#lJ6NiBJq^&d5RNOJQ`RJ*o\j0kLHPDW:Z0ZXq^6rb,pnk#*7WP[^h<J!`Q>,3Km**aH/
%a=eI?T+KCn,d\&:?^Gl2?IFpYA`*[r-#Zcf(P%pf\mctqCri/uVL45k&n9J?..8>,6-`)fWEl>WhW((e$+C5qOGLS*DmO6>VI_c'
%S`-h";-]+!ZK*02j@/FZk0ccbKeIP4m,hDFfSnhZUDWK;jMm(h5>L_M+j!FG@),DV$ntA%0C_V!m6m2Lp_J"EKc#%iMT,G3BX[OL
%WRTFB%i_G9(?[:X2`f&\)fTkk&a0I.H&IrD-<4FXQbA3FE?VYa&=!jJINKKu25qH\0VULODj6K^%AQ,N^NWselkD4j-NU?gB7qdr
%a!Clp#Pu:2AG@K1?`g1qOA$$pZqV1dU#5@@2uO,0Hp^Y(%(:]Q/,#P\[;P6283Gc5;UQa%/3'(";G,$t>P!2=m\7/t3R8#'64@;:
%a-6&8pl\gB:KDlV"9t"$LMJ4RdA3tnVKUSIij8\<Vmt@\<Mo;<*Yq>AbV*S(!DYbnHK51ER#%8TJIpU9_oTstnM.0[.<U!@YS[_1
%QFG3TE+D4^Smsa$VMZWcYV=5p]g2Nf/C5B:gn6<j[#bsEnOUnVoe7"<+=_7JWM*]0^tfr2m%ps\jsC352]s9=AlI'P,pW]?!p9[(
%jTqQfNl5i%E"X'Tb'9%/$Q"F&IsV`@Ou>;T,8@k/h(d<4_7)s(a+e"f2@66u`"7YoMR/3!47XpY8cW.sa80$a77B)18<%U_.6R3@
%_jHcF3ONeMZ+8R.(3b2F9U@g&05WK:?!=MXR:QZSoa5DJh8l1#hq5XRT-a"Q?/'#am;$5r%@3("%E8:D+<N[8#cmG9PNXs5V=sXu
%A^NcTGd^&"%b>P$#]X=-GggIt)FUu;"f..+71sk)(BY<R+c[e^,c$._j.alfRIA;,i=jjC8Sn:o#g6[heY_1H=S_Xo+k'^9pkY0O
%p)5<^kCLtA+;3,?H^P+f]8=MHT5>epF'pd8?/q%3RN:W[B:@?;6&GOaKHsSC21L^R>lGqELn3:TiEH!pY#&Ncnh[0h(RC#HAgZs`
%G1tE&@2TJBZ*ThZ;),RM3mVS8Acl>%bSY[/r^0oPr6Q2b_dn;7[X3%B8Wi/=*(prjjf>+E3lLd,pq!)d^Mj:6Dqq;e$^`1YWj&a1
%>C9tN%\\4WlVhgD4qh)KL\CMeGB6.;<CZs5j4ii.q.+AHhG.*C$Yds&IQ*C<aE>U^#UY,=m+DT_eQ"O)8RY<>7\]sC;.@gR4[`XI
%,.<PQnAE7K>r2=EjMGp:R;LH,NSGicUhO]?!W>K>$2J7uh+/)ZA`K`(M)cr&X*X"hII=DV)R";rKq8s7&#,sI3Eg.$?.rNa;39[_
%&e*O1Q]'UB6hF2CQ]s/X65`?c'lDFLQ>K1eLh:PJ6L<Ej&>"N,`3[IkorW--m#]7^JaXn=XmPk/OU71@U59lb$(E=c>pSNkS-F5F
%6]K%;?o8Qe^GtVb&K=c^c:3Vn>sL/6\_8G;@YB"50_3'qGtOiG>9#i7g]j8A[sj/Lah,!(96@9kAeJ$\=%Cms-0pgk8(pRjYBl5,
%=SnZX-0;!Xf(SsqY[tcF_fTK92EpAs(KoB=7SqQ1--*"-8rc:!q-Dli%ecthq(f5D]%s/J6^q1YpbnN%@grX(W>1l_`S1H^&t?\M
%lWgam/q\/`k8U3R54PF$:"7C,H_L]Z@LWRmK#J8/'L.GmBsQOU[f%<?4]ag*cj(/'$?CKO4n>UH(.nf*p=XF?9<JdVW'Ze."oc5-
%eo+*Ob92sFA/S<>VEbdOV2f4i5\aVqI^BunKXUE$dOb5.3M`k=a#mum.Ce:<!,6P-OIjF9D9J7onY^UCVm1^(o\j:-)4X2EqHDae
%pW6?<8n(>&f.O2c>Uil2:p$6adDDL['+]YQ&8^AdL/tL`M@#[6.n>\=>@B5FEK94f(FH>ZXYN]i)atl,K_aWf4tI!_85^kZRu<P!
%FE-`bAnVrZDPTUOX6*2JI<_]HG2'p)U5M0IM23@FSp]<n`UeuZJIf<,d(CSSY#o1L&P8I_C]S#(JQQakjRkP$3C!j\S2uY./_pGj
%8;i]-7nO,9fmh5b$@-NtYDZ^ML93PG%=:YKd.L,;2f"X7RXW`'SXYpbM7:h@N>CPC4H;lN+&LD&Z+>35aaP5^@(JLo6sC4RB"+U#
%5\u6Y#m$,tZi(?#ACEe5T"f&\'XE$7g!7mVUkrp&J:KJL:$jZrKC"9=U+L;u!$fh,Usc@7fP(+0l)'5Q;uPu5:*&6nk\/egVnFrg
%,#H0\7g*Td_@/El^"#@8kj,_Ar4WarX^gfA:tt#??GhJa[Rr8?gp&MA.$H*53SRdN`CMLJ6_<$`c<9#EA(WT!!RQanL_`Yh""r?;
%SHLC!Cq^tY]a7/Yk@X%#Zc5AGjeJ?8%X+Bs`3C%D_WE:JHQ55h=q%gmY@48N!5I->f"K[RdH>p&5$o+6e?PJgk#*rcP'm3/dc=\\
%0NHt'`pE!.VI9pJ/Mk%R1`o*7S!nFr")0VNUN(eriLEkE!Ih1?f@Z0c@r'_A9_G>![I<-s1Zu$0b\K1u#\3bPoW`gq:g@4c'P;e(
%AL2VlWal`0dY+,O*@At!`itS/[\pnG3Db;Cr0#'@OJS/M[R[AlXn7:31P_Xa>rI(N-W[EB@S5/dM3bUQNG3/Dhi^VI2Q?kRhX_&k
%^4.6:8+CB)QkZaQS:&3M_0,tD^$d2SWb\)j"5IQFK?b/;IcWO^"IjaEib;7;0d%&dZc#$C3,UCb+NkaX8\k'I"<#<-!NbC"CRS5)
%7.fT#8nXtW?[PYK)l6u._iZ+Q0ZU2M3+MZ2]Z=MJi>7cbeEBMfATHmBigW,\<.l%$6tEX=7te!3#Yo-S'"R\)XOekiZV<:/P\W$k
%'',PaA[%!s)BjKCHVls2XW^?(WUqRSZ/>:,\C,6ToaOC]:cHe;7m06l5q$<P?%Pet;,0j9a++8>^"i>N'*9_=-oo%JJ:0go;2<fA
%@rA`\j9cAE+Cf4s]0DaWL+jdUp+-i)UgpOh&Q!)D!E#u^o@#FmGdBVo$uduqGVd.Wg/Z-?mg<Se7kp$DX;aHCAZ17'HU8$N"7.2\
%S1h?7r29UXh9ES0juX3>G[[!3r@/9Q((FKhR!YU=\,dNu*Y3DM*Q9FW.soj2:#^-I;,&rN=XUC+YB=A3g!%K+]15`qmX8&\aIl9Q
%-b`l4&Jgg5L0"D$FZNJKF$?+ie-\_=0l<1/A,"jaV5#_h3FU"U@k8YE:)O$mhFAJF6V,s!mV8#4A='Fl&P2R?V5)[#_8:0VnP'NY
%+i'Ue`VSs'Ut*1hY%rF7N6f@fZ@fSn_XX5RTJf1Eo@7as0_9j7;+-937Au2=E=brk?YK!BG"`<_iH<_gh&9=`6#8O45k)>os)EEE
%QPE5hGWoUZ<-m$2NsZH]*G#n/s3h$crFo2>gT5/'mPF$j9V5Ug!7`>WjkT%aq(;Gj5!(U!`7aT6F&(E\fl`0K9u9iWIBK.`UX/*^
%IJg#LiUN(?FDht(+&q&GHYn[88_2@M[kU(YIFe_/2?Loq+1>WkK4.N8&Z)S73Uhdn2?r=unAZ<rG2O5&h,kY50^QoNrd@+\.>FRl
%.Xt]N'#S_aX;u+&@[f5c)1sc9Ru.[e53@6YkcYTmW;.tnHT;9>*69uuEJ\Fj3s+u(7,*=;fG<RC*Gi)!3ICE:d5I\p<<0?'7;[I]
%Bm:X59Zk_+'1].@dS;nE]P8A;U;BqNOH*Fu72?(r,56)ZTeoOQB653sB44?C5/<#U"_`Q&8\0Zl`7Q,=cMT]G2)]q/,+mWjh`%c3
%Qq3]!]eR.>XMjX!nQ$..NG1g-lc,4.#%f.'Z98D(2!p7d!9?NA&XegudrO<^d78KZ?d9rXE-fk:2R.TAg]8VlZHIWY@/0G'A:Krh
%X>'2LC[=Rk%HIO742EoVQHr>/gI-$1ZG+CO$iO5<'tH',ak`q11]dcSI?t6Q3V5#'V+(,(/GKuf'AaSmW^U=T#_d6Ii.N%s9&#@-
%>B?dn:t)QXUkC)iroN6/*.p4MW<;/_9OL":R.]j];u?$PlU:T`JugcX@r-s@fd"6tgZ>`TT9g%L6sAC`P&9\0Jd(oBqC"rQH]V+M
%S3V(5!sm)\b:SE1X$^DS41)iMY,(Hb/h+#oTSsi=:(2"0W\ZnFhY"j-d,6Y>fHi00?;2q$`mbRWEaj"Q^Y%=,RQt/?e&N$*=LON6
%VZJSQ%6+E:Wc9uU.S_B^)f2ITZ/3X4E0?2YF`Apg^<qL2Hu5l:IA,LP9ZBqQC,#2I6uQ#TMMWp[]H:BRZE1EQDtp&%[(LC%d5ApK
%r8jd^X^tEA3Jqh@hi8I,$5BD1C)bTa$9#`ZO>*$'i:uZ[cN+(h)?s\U?eB@+R&d;A*.%`UG.Ook1^V%C@+SGT54S$^gsW-3a)+3A
%$5`=W$0Xq4.9=:oDhhd>doP=QSB',"bI6kD&TuK\Z%N5gVY6Rm"pR%;pAnmZX!Mde+n9]_5)FRNiPVreq>f9#PnU$&SrHSqP+<b7
%>Hp2)X=A2_RmY\cRo*O=K`D.,1QkC[D_(@;j7>9l5!,[X(P"eFUB,Z\Y$lLHEa`fbNSl(gnE?;`).cYhngY'9CImJhnN]4b7"n9L
%78hM(VSO9AGm2K=Y__K.L^4R9V@EcL;ll3Cd,+&S/_YP1/*R\VOl".F`YF6i4lL*<VMb,%VtKPFr-@:6_=^$Bh*?bakg-^F:]'8Y
%SgMmZLJqnJ;kuc?g)poV!L)HA!k-$lon%S(9L8.`Jt4e!%!))B(`XLBQ<B(,cg$2"e!2`GFmM\0]P7g:=f]#mdJ<dQhYKmYhT>l>
%niaEepKPse^D4@]j[9ni^E?_Gf)#Xc`L\0ESQ'/BCk;[/m`p$2iXO=_BJ8<.W78du^L/s@8B'TFQ9&EYfiMak[n"HUN=L;R#5X77
%AGQf8_JL;r9cp-g^](A+Qh@X?^%cC5fB;alg*HU5"m4APegG!2oR.6Ei_ol"Z6q$Pdge1D%JR5Zq\X2=07s(t&tHdTaa9dtn_;/d
%RihT4hdE_RiFZeCk-Q9S5&/h.O9R)ckkC.c76ui`('U7eJkhP.%V\HonC<hV4Q9nj*<g.rP)Xqj(gRi_-tlK)\L?Z@<`"<NI,7^3
%np(tbUEC"@ZI/+_UPj^>"YC'b'Qf[n&='-ZGCn`tjm3E[9lQ8TIfC6j'XT9%;:)j%kX:F954OW+rE`=5<Y,5g%0^HbP)Xqj(gRi_
%-tlK)\L?Z@<`$L7EDfjHPiU92Q@UkP\OO8]#VQ*Zr3Q1]>l8ZC^$(&PEVk_<%_&n(#h%Yl)ZBXi\gV5hd%[1S;:):9+C*R5E=",)
%<3Y6cdblAirVeO_-tlK)U7cR)d$ZeD13-?+^S;q4p"1:`Do"^tS+huk76ui`('U7eK$Im1+Vog;>6a(lMIEt+ZiMQ+W7MQr`BT91
%(B5rb\][3.Q+-Jn67e_>pB]K'PABgfa697j76ui`('WNj+QRbt]>H>`6jgQToIW&E7_aG3/dbbrZm]Tbcs6tc&eB%V6-(f"G8ige
%E0?30rto#UZm]Tbd((Rg<.!$OMHK%G"q&u?G3A*o:ijm+r=E63ZhS2'caii6<$kGS<a0dW;j".DmnV?@i8bgTr\:u4BMm-NTQ<uW
%R@FnPLBZq>[M4t/hWFc+O9R)ckkC.c76ui`('U7eJkfk\j_HStO!%t^8irY5ND6G#D]ba4J///;!]h+uSS9$6"Z8^G<_;)AU*;Mb
%Bbr8(3ZDsh+s*GaJAjg4K,+]_KS.Q\"KA>SRY,3W6qp!/>2nT^*>e5O>qE?bBX,qK=QiGj5q9+4At^(\;6u>oQoOn2LIOBm(CMf1
%=tFbV(-7^41h.J>(7NV_2%/Z9M3Dk"FMoDGZ-ZsR`BoK:hA.qfb<e?Wig,:1fYklj3^D[:\l`XNcsi]tZ-]KDVItQLbsF3UU1PPh
%3H=VLNfeR>/f%VAZrlO6/9E@GBS8Cq,W*CaC(et2'.;V73/ImuU7aq@Mh4\o6)WG*SoG5t#L,erRY,_[`(;mK;W8;"=D4td@\M8U
%d&@GI)<t&)cjZ5==\+<ES:%)a,p&b<Kbb%J(-3HDSS;"n76B!M1ufls(=H%o#N'@W,p&b<Kbb%J(-3HDS]MY9+V,:oWK;soKJnAq
%-f(_gM$Mt5TLD/)JeeO'/WujjTG]UaF-)EY39`n&9ft`Y$S<,t/@8OCD8?oD$dHJDRY>iC`Q:&"E8hJ@=D4td@\Lb-Di:Nl=_PfM
%e1@C?.Sd_*YnN2F`BoK:((6[nKhf$54i/:U&t7bm2$rN?MOJEPr58\V;:)&177!iHTMl^p1]F*1TG^$mF-)E_39`n&:cq&\$S<,t
%/9Eog3g7=Q$A#-YBEh>`/>PW`:;5+A'T^V[6ApO5$_<<3:1XgX3/F#W7Nb,o67TS+A/cOZnH`D?ZoD`=d-3OR9Nsh5&7WBM:r=ou
%@KW6G0c,c<[rE)m_"mh9TZ'0SJPO'IB<m+g&4Fc.1Q8'*+<>KBd#F'[GQ9?+=ran/k]@edVYqVP!`=$c%&0[\8-`B>FJE=o*e90$
%('cE$3ZSHrapsj@&2a^;&;lp/FL]:U2`cQM!Ot+&ER<^<`BeDMX178a*^F_g5r70QTGnn9nGlf6ZoD`=d-3OR<'/Mapn?iC)*Uo=
%O:JZXkXJ'<49-0&/Ikr(F?0mmPoV]5+)2.O_%S[0ks1/ZD,g#C>AOnu,+q@iV^%j5D+N!gLRNd+kX<Z\3m?Sk)]^s/!*gMN3,!<Y
%kr@m+7aMQjW&\Mq:=L8ZK.IMDd;]g1^r8TtK,+]_Ne>Wa)5Mj*C(?\@'/^$Z&<!)s2Gk+u^r8TtK,+]_Ne>Vf#L/osMLngS6q'D2
%!/lJH<7&QfC_>#<TLD,(JDM&4;)?Q-RA^uoLK>I3UE_*,J;]$q#;$Eh*;$ZnMOK00^dQF53k41B)]^U%!*gMN3,!<Yih3aa;:HRB
%_^0%-d\.B\h<8O/#N4U7`BfE7:<,Yug5mAl%Q+F7@#:>(FC7PV2Bu>`/[bpu&^V_pdh0s+N1_'P:c$H,Q)GQkLK,=1UE_'+J;]$q
%#;$EH*=&.W4&L\le/U:I-#*q<5nsX\kW"D(i8UEK6&U@ja$HW/K4^K<bs<RLU8B%J;/q\WNfnVe/d>JfZl&"K%!85GT\k4m.s!G3
%++O=HYL;Oas6fI<Ig>JPoKUqA9(r(4+"7ElBsUD'B8k4@r.Xai<W%h4\HG-Hr:iA5U#KbAenla<6Y()hTZ,W*n\ng-:An4pFd=0e
%CK/Y:hF1Y=h`PST2Jc#b#hReeCgaoq9]W.qMH?!?h,N)NIW`):4?33lMS&->1R"uPr8pcdAe#Qb>NgjIQDNe>c5FL*h?8HQhSi=A
%T-9\+M?l#7X!'*nnnYn()H+>of?ljkQ?mi0UAgTSFVd;L4PL/L0f+uh>7GkD1J\g3l=f+6J15+'.KL9\Wq$nS)UaN/BP[7`(8Y'"
%?n\X>#*JR0&2baakZPJdXUY\T*N&k?qK4*:?HK;TT>/phpc!^#l1K6Rn!k/Co8iq7O"Z"^Q[RDVSep9_gZM:hUu&PoDf3KDpJuoj
%-HPogT\#I3226IJ]:C,&>D7QVGPpXTANo:(qY,K6G>FOnBi"aUiL6m\B=6q0dpHspp?PG?hcjQ/PA>L1N+j6+V\#unl*))Ea.pa0
%"QLL#0YV'ADIRQo+1(bT;ns[$S.:E,-8ggXM5G??%R)DM;-^K!iYZ7Xo=g?aKna@KZ.*j[UtJThkL=0NU&J5D]gs0'k];\\"gt0T
%k]sO>5M0X4RN1tcT_3&:YC^?i%<5T]0<q:Sh(N!>G>KdZ=q%l<>dXJY=q<;ehFHo(b0NKAU^H4!ZT@dA*_DoTe__qGT7thQZ3$ad
%)U!CA5_&e$=+BmUn9K+)Yo.Fo-!U1sAJ+!=F,Cd*53Wm^W#ksmK*P3'Ha_kQ%)]DlmL+`765Hn%Qf'PlLtu7;`oTiIKhQ-nAC1tX
%+>I!CY"Xp(P,ke1WkBqeoh'Lt1=-`<`F\&_=^$ckZ>iIfg*(cD[;J)dqp:6_kcA+MfZOdRWEtPec'N'fRA/%BW=q\I1`p%>8m#jt
%)"5E6dPd)h7.N2Q?D_kpP9?TV\hjT`C0;ea/I3tZ`Si?X_BE/agQ<#rin;!7h!@E^m@^p4Oh^ap-l"u)A!@3lM+ntWq%WNJR*9=`
%)AZ/Z],&;j+3h[1G`n/p=(?O;P\<6T3HA=1XX+@B+uP-_XYpIG*>t`]d_067;/=&>MlPc<Bgn@,Qn$cA5V.8/&44gF>ZeD2#\7Wr
%QT+0<'6S@t;P:t1F#>t/85Uq=4V:YGC2NECqCYe%6:Omr</IH4>7)F1Uujj;-Z#F[(tOI9nk/:TIs$Km9DVI)PsXLD*D-CP>YuK#
%='$:SYbpT-W=>7?pecm>lj0aQ=Z0i#`JWHWAs/`C+a`P0]25$E6s:RbLlL"cGZ00JLl<6e?1MjZ6r2BBX#<@(h5Iq3dT8f"NT[!'
%h5*Q>k9a[`TJ`.5_XEpch^*Bo(j_8dQhl=Ul3A%V2NL/`dWjC5HC)39V/Wif`7C(c.U#NPW+AOtPA(K^Uhh35-tpUp%(+?Vcj?Dm
%>!e?CLHm15e#3X_o3fGdFj\0rGU9D9?a&E0q9_G9cV0eQ;O1WGU51!Vm]Ht$6G4gZ,8V8s3TM>HJ]OM/HSL`DGhsJZhh)h\Xn2Ci
%)&TX0m67_Ye4UR`W'M\p!IKW1R^*K/@W/=XXU=VO%JD3?f@A1ie1D&?-n2R,:ut'6>J60c+59V\;=UMZHlZ";7cbE?bkGd]%-?>T
%/,$R`[`m!s`".8ed]rjPBgl+cd)D7/ZF=S-Ha;9+QBn'Jd!tnfdOh.$-gst1Z?(n-!*S?7+s9Z3L#RLu7+GX5$E26_Snj>)Ku&(q
%Vn3eVs2'ekessmU;-1:8dX=3u2@F&q<M]Pd9d&<]W1$Rb)QC>B4POJ:"pNS/%7G8)<)Z[^$X"Gc?!J`2"_(@%dRV+,N-g.7ZKcW*
%WM,SA-FP&5qCJbkPnY'>dBdY@iK6s(hHGd.l)K_pVSj,n^$BqkNhDiID-qsSX3ch;\m-iQ,_<42I^=ai+f+2aRiZN5.]H[3UK6ZR
%mglj&8#)ujdV9?JV=sICjMS/:.Zfq$P&_CA<]#Kno4D-%;R^?M1Cfn[D)(9r'r@g7jO/5mANZ0]j*ffCN1NNX&P$&Fdd5^jM0]q)
%0@6$#[H>p3;enseLCgSRCm/*5:&QP9`MUa5A@B=10LBF`)K0A#(;BE:T0<LSff$^LQ*.NWeVHh$ip^1tZt?;%BNgUfq)XBBPfAcX
%Rl"gjl*,n?mI/WegL<:2'J@8GZ4a'Tl<3P[#OeN:-dtX9@10bk,[ab-o)\;9&4FFmlA;9'QoJW2WVXFk%nUbD:KUM5mLtnM4TK5h
%X6%cA^X@H@A"P+(^:QM"%T>$k9:L(%oZ$NnLR:H4QF[k(pYa^gVuG)T9jmk-NU=t]^J!ue!9GF=,<Hqu:_h%V[RbMg#ni7-bn`n'
%^@"'A,t]JTKu.'K8ZX,qP1GDYCDaL9@jZoP]-K9B0n8(`$Jr&P<NG<e7SjDdg*/F07N,U0=i3;TLSJVmSX`=p\$^Am2%6dh;+ssD
%RKjHjBA(Xr_$@C[rYC-nFBU+_Ct+PUB8_qbH0aeSW*uLM<9?91-*aJ0Zqi)GlrG=&ac3jG9AEJNM8G^8NQsmcW7G=oPW*U*eCs8]
%9[.6)=V6'd5U83-CnX%2Cf-d3FE).93`p9IBIgG3g7"n+DQ&(A?ffaIbND-Ig55ts(0b8F4Cc2.A";Uq,1#)FA@@#J#+l$W5t'^g
%?WiB1&/=t31hO'%XE?DC;?hi.gf;S,jTgbm\<B;#CbX,t.^5!F3[3A_;<LtjN^afEL/35$Oeihe9OCor&:#)YXA.@P2+Fka'luK.
%_hsa^;&;`4MX3R.l>6nD1-LQf3@C\Y5ZH#%,:&I]h#aT?n)R*i!O5td#o:ONB+o<uN_.L;6EaIrQ[sqsem'aP%%565+jEcX1g7=E
%3JGgkj055-8s8"Y."fH;Ab/=s1:$&*miK$D.]8<\WZq.M>M7`1!iHl"Ptl-X,.F4Eo:R&/J"`0?ar$j^koZ05djcf402>1R_lG.'
%_[_HPXZ^5SL/m!Y(nR9Le4Q-ZLF<MP#0B,>7V4qiZfD[DM8?Y!"#:`LY7kTCdUotA1WnHi1t<?foC=fmMiO',ZnVmPi;fZqQ6972
%hrf+9TXIT?1G!Gc`)r/$RYqQJ:9p.M`D#[-PS9erZKj"M;,.D:=HPr%@O5*PnOfs*BG?*L7[o`rP__qV9Ai8F9fb,s=P%CC@RV12
%6ldnUDN&+uGeJ$:Wr40LHAIFUpfP6hZcFbLI+<UA`&>@.,XBWRba&&HJlK&j8<\h:ZCR1jir\KPPP(Rn+3'<RrEgQt)H9/b>tUQk
%,F$LEFsT`27;Q%'7qg%sdD,u_]NY]K7S\"KWA37Y'st>]0/3$4Jq&s6[#n@9+<j,>Pp]F;*0pWEZm!UM)7>#HMm1m*$tP!"ji(`$
%bd&#Bg_h/g6lSGooU,5=oYikW>GR9)3sJD/Xj,PQf".?BLl:#[`L@&2>5hTN-ch1NDN+BJnmWISi#SXo!Fh/aV&6Yh1djYfZI_.R
%K_aNQ\nRHG@2+i5WG4Neh!QSHX2B/nIOBlH3f9DgW`F\aH*am*M;-mE$MAJ`pF?aNauE_e95EU];PAJ3=LgF@F;DqUQei^_TP"kN
%(I*rM+SI"<$bA;$[<c!P"!qpjbWVu9=@&TTf@uuGrRSdSi9\H3m^BlIVjeCM_f.F(/reD-@7_>#+=JZbQ>;.P'Vqan:\Xn^)ts<?
%2(u(E`92tQZ&Q5seQE!YFTq0R1pp;QCsrI$Ab;:S8#D/i(fhf8%fa<+Id6;q=!eb]'/UO&#JBf$BcK+B<R&O+Lmq(r&^/Anq4Inp
%H<m%mPc,o9k8t'>@MY;LE*TNJ[mSJ^T<U7m4?.XA9"X>(<toT3")q[0&$-P$Af7$Q%?Ib\Ze\*Ro\WX):1JU*?b`9ODHkRIk)16&
%6ugFI*0OK6rl:%7:8s!sl_qe:NA+V>@^]Im#TIXL:hr.,Zeml9o1n5mQW`*s>.r5p$[/7T8EPg_%\l4*<45/rhVQ'Ii21QnghhO0
%H15[&*67#*^hp;)5gF592.:,98?/h`r7IAD6f.UH;bA#B3nr**\nsW@$W[PNo^,QsaRTa?qBd`G9oZ)k$5M<mD2HL#o5k;)N;*7Q
%/#GVPRmHVXZer^IX@-+$Q1e?!3?_W;HM]GsNF.=,Buni6#6;ckY&%WY,K)G@2E4WVJlWkREFs/CZT;7J(8n>=RC9R8A#?]\Ms6Dl
%G(_&`XB).U6,Za,!<UFFX&Sn&7+eZQ6kUEOS9kskbk$HmGT#q6QD(`>,ARVk7K(afLGDGEpJ<G9iCT^'fELK9],qb8>[CA"jiueT
%h4eIe`^+&IBBqdPG&Y6kUdS$.<D,-3qS<WPO])oTT`rH3qD^m[%`YF3(+uBfn,&GbrQdG]Z1Xie7$,FpT$g"1-%mnq-?TIE^rN%=
%"s0es&j,=D-\R>?TU=W>Rq'ZRCq<Y3N<<l5QFfU5pbm^[<f$+f3ef[]3N(YFbJjiVf*:Q08K8TeVS;7;#>VJ*oN0f"bd8uS<]He4
%@"L]pHDD3`C#LaJ67;j<)V8(XLk?f\:S!-pIT2cgkbZ]"B#d#&fjqnok'WiKN0R-eR`N$D>LPs$/WKMF-=r7D-IaPohTT/VdTUoP
%CVc%OWVG$_@q[r>bm/C;>&cKlrMVDaJtUY/NUI/c&S7lMlUZpGiBmREU.cD9Se$s<`b"L&FTihd8OeRp2/""b3?GdBMl'uQj&=__
%$#Wb+6#O(gASgV@Wc]pa0q>_qM>Q<f<2IO_^1+\eMl,BTpClQ11`P*:G&\97iBd"cX.Ug/`onO+8?B,/`LoR(_Ul$P9t\XWj%ccq
%1QTVUF)Zj`aZuKr"gi3aFJ:"Y9<PNC+hUagAPKfUA?W)@/*%H*L4aD+qb^e=d0$pDhCd%"XZj-N@CH/r3I&VY9[m",H:FMn+&i4;
%1rDSGh,71PlMm6(Vj,1p4iOCuoI9Jgp!8[T%#!C'IT2j-8kV0JKYArRK+,;.q6aT=D/9[qEK8sp8'[7"mEJ3/__@Y"1!J60jHSW$
%`oaK:k5ZQHj;dF<i1-#c/CR01_g];dmO,r@@OTpD<LiDM3*kMT_op63<q`g*rOPF3*FcRKfPq[:`kX0!Q3^(-jtM/?,l`Kj/fdZL
%PE`8!_Q0F^CgoU;Jhi?%7:?RR6:[Xs23"r0>Wt\oN&0;J`$*ma(6-s4Y!"CHY.gO`AD9E=3/&N'npHbkACF=H*6uuT_kBXSm(;:d
%7e@PI7LkTB5uR:':(BfOV6m9"U+BLf3oY4MC&8bW6Z&^nfF-Ft8=D<6J1!k(KFiN`Z8eRmP\`,hHNK=;Mn9?dN/!J;0dbKj)<$4&
%4HS7KB&I<"\dan/qJMVQ6n@u,S#=!e@`.iR`@4e?gg&c:s'a@pU$LL?0+iCd?4SmH\A[C=`GH5@2qW2GbnA^P+h27rTao,n:Ks'0
%NRPXs(3.pGQ3EQ2A`8S`gI"i(!#_<i"KJH'dsK8PS==cPT*u_[3MP6Z\V#J_C@(e,E^.Ph/#d66Y6-7`^,_[@JsllIn^#Ypk+(1'
%X`[Y9^?I4E]W*rOBb\#oXW,+.S(Nd!S4(@\kY18Lb&D2qZiV<AQNR)0SnGo&/kfrS&Q0I6.E%FJK07.oD3P^>flW+XOrD+$']]8g
%[6@!2pj#`a\a>ET`ms^>fA@=3kF5MmG&n=;cSE1C%%GtbNZ8ACTM+#oMT)0dq_?7FB5DJprUde^;7=2P_Q(3hmj-A+B@mm)&'83o
%:MMdbms0J=^[?hBol+2;<']KoR(Wj%Biu`MoA,qq<QhIq]u]d+TImj>;d7qgEdUq=fc*#qatMp.%)I6gUBLR#\a3j`M$=oKII%[<
%J@7G8QP/OIC4d-Oa.bH5\&jYS,!WFm-<]G7FujLE7QDe_Ee3!M<0>OnQn$jtfLLrBm_'MJ\>/C[5*]<@/Xfr4PJLQ44)m,<Wc8hc
%RXX(e]W]uNh[oZ#Lh!VMBjKIWi"K#uc/H0$PP$\Z=s$q3N;&h+ZT%%AE:C@2Cmen/N!KC,s!J%=hS<+2Nc9[R([e9?=TeQdFmoPW
%%T/C8P5#c`6_pb?_V:eu`8QVq2^dhQ7?Y[6#,D$/7<t<?_ac-'O4K1BOlt-K1-o._1H<O3qa(P$J`3`S=,=58$gX0:=3;F`'Glp5
%HC,_f(#$]%a`[@Em<?mtAdIq`mB5K]BDfp,DJO[jh)!\?E'3uc\'NnSJo>`-N#V![Z>Q:'32iG3p=Yc;L0uB@bS+q4Ba1)c)9%:9
%5&&AB$/"Hjd]XaElLblWka*2QLh>7l)](#VcsK0DToa7Sj?t/EHAJ%%*'E[uKkKb[a9C9'7j@YL^a:NN+mRndTY$6"cJpLUmgJ%E
%aP?t6O;Nik6r.:i'pn?>rUm(`1)H;UK"3GZZ5W_@Mp&gpQb>Dr$bRp*\ef#=>D.7sXC)$HB.m=;[d3i3E3\$0<VCGSB*.gZ*A-tg
%m.E:1qSL=5>JEj5E$Wa+AN5G[LG+F8)N[t>Scgi-.a[:+WJ?S*9%=2"XiXW##,G;<M^f'8.+2\X-ia-Rdk8J."KQo\g#'\I;HbuZ
%U,=]00YuVm=]4_4N?#<4]f0nJ1TFrg40[X$#7s'uVtN.Edl%[`TlqWm*U0^5&MMXD\/aHd,q5Ya6\,gVS1^fiKQ`3A)B85u/X:L=
%Vaf-*8c'S&K;=8j\9&V&G):EI,=7m(QJn,8]I#]'i$W&S$)\!_K?P6bH^R8/<M5U],H<.%Fp"OAfDsJOGHClbnJu/:$IiIYSob-k
%geekP&_2aFp;YCPHA?*l%JarcMl5]X*@dZai/4R(^lQ4JWeJE]qP[H_jJi8db\D1[o%h*Q7+QD8e1etJROShJ"O9uf<n%Qe='>UX
%M^f%rh2I<h)R>WN".QB3VgH-]+pUH'V%6raBYf!f7kq,!HQgJWrU%j4aQHfhJ`RY,`'hBUV,!).I7scaahVtP7NiXkhVs%gd4I=_
%*d]EYnY0O^9mC=?%:O>]:-]+U+7N7I27-Lj8+7_*20+A/nJD=fGgtB(o#BVU@bK6:1+7,,T+/\T^^Ac&VXJj*ff*?b+JrEX?<U]"
%kF9@L$hq=sbmHaG)ae]e*5s:n9q[h0l'1uX&Bjg>47Xpp0C_6g@p\._J+"O(Spbq647Xr_fGCLZGV&IJTW!_\(X0Im&N:@Jmfecm
%i1u"cbL(RYb'^C<o-+ASg/[A&6I+qU!Nc^=d;Rk&+4)1dAk,+\%R,`j$Gm1pGAi00Y@"G;>nX>R(6;A2.@tqu#3jlWRGOJB-@u,4
%N<kBVgu!>+;SSWb7;WRDfC2d"#Y_FfAHYdG)n0ZMDZ_>Z%\dI\46Zuf%4f5X!.3lJ"MXt=0<-!IR8RbiOQmbT@FMFb2H,Wb.M1kX
%$uQE2ng?120qm1F=\eG/N>rF@K.jbJf01PV#Ve2G'iEGSK#?Phd)#1D_V66/*+'Ds=$`mWRh(Sr)Zc(7Al6sm><,u$N?)`MYQa;U
%*hujOY$A</%d<aM2Hhu\)(iVfi0Rb*h(:ZA]8%O6)9s8G\4&l^';)`&rG-BXFdhtBo%_eBE6&qn_5!fD8fC7(YDHOMS=C`:dO6P*
%Gk5ZNm`;_JXu'oVelt<Fg3;udZYJsblaQ*J^(Gd*IFPAs=0[Xu/bP)i%']P8@q`KqWpATV=L:OSjB5#,_<l_9Q9!Zn/nuS&5QaEe
%[_`a1Mi)IZFLoJP4:B,"_o?2]nY<%P5(<<=dbF3)I[fcoS'_u3_3[\5k@&n.K3Y-rh-r3*M+PnQ,68N3=K9UTiAMX3,,ZLB_;fW/
%$K:j8M[f<g;<BO3.'1aI[]2F;Ua5=G:\C$7Jp,r`%Dc+bI)R[H`>O('aq8e"^]J.M+<eOfk&?.$4>E?0,JkPM%_cIl]ndMA;)Vbi
%4+mYiX=q(^(?I\cBXde%E4D/=0A"jXL2<<%3-h^i-k1=Uk?ac6[L9ZmY-8,%bcn>3($*)a&%s4q`O;Gmn$)p[fV_dO,Es/jfeln:
%7DQ9g)nXbN!0Z"3*7p$a.Xd[P%O6c+$?.-j6:suC_KCRr0lZKEUMf"U6`k2SD'A'jmtCa-:d([T7\%L%%UX,Q3n/g&ds07a/fd1^
%5AhTG4sVK1bAI8#H7<rZ-K,S.lI'HRVGDt9O:hpM9o)Y>Ntub2!f/<LB*hh94p7UCe4kFM"Rg)'i'(Z<aErY/._(kchercR9DD&,
%D9+]3d#7`/$,HnbjedM<]`gG%;oXf`11kJHEc;K\4ET;UKG,o;7N]4sm2Yu@-6jLs8T;jdZ2eckeBLh,m4T-#++l?.i%JuJXE\8T
%!ia_N_$elF3Tan+j/\%/3X]m2(EY7grHmb1ccNV7MT&W4lNY9R\s*m4j+83o5cHcC+e"#G;iPd05ojXh4f]G):A9RL3/\rK_lgtu
%6?7JrA%$)6VE30ug3<"Zf0!K.d,Z7F1;!tXCK2i_i$aY+3n10K%)T.;aj-$@.a!K"7d3`Y/0kiYa%uqGZ*E?]:`/Q=,;mD=.dY05
%V*@rj0q_uTqH4BfPrHOj%c?pHTpIfKYSF[\$l3SIWK5mdZ9mnI^6:\c%7(=''Lq[8JSb-UH6f:igi=>J=tP>8q[F2>`8X&P<UJ2E
%4/H@q'Z!9u`/"*>l[A7IMDs1c*?9CS`J<=2<;gO[@$>!aG+U=`B_mBC-)ft^.HirYc]?JOnCaKq'<6Mjq/V@i:T.3DC>PM%maLe*
%(4?P)l/G&`DpAsF/[<pA!l_qo#29ua_l2lG=Bg5aS.>_,;o,[]a,j2RfGo1S?L*5bQulg@CWgW)oPP`\/f5qr:&hriAPG1iaYMk5
%M5$%E%$7?Mirr[8#"!VbQ9&B`rZ:fAMaYa[+Q>r%IRK"up8KlSMj?;K1C'(u8f$:Mjfj&sOm&O'dNZ+)`.fe>T1sG^ibhO_r=F[K
%e=JsYW#>OJX1#_7>^4EtH$XE@(_L\tc#'T!#Rp.MXquo2BZ6CLi7]buaruQ@^2iHJ1LGu=b2aE>ioq(;dasG`S7kH_MQ(rOqj<Xs
%'U16YZHD,C3@:&F3`@.YXe^-Ce=oLk!HGqDDBNAG(lAg)`$2*c!AWp9o>IR.Mm-E6a1,Q6rWcSHJ-78_?XPIP=W=*UK?ZUD-4&Y?
%KCk$u+IjBL41m+L(A;<uS?_UL0ha#c[P1]#0XR>E-cj,M;[3t+@S%PNd.WJ=%_g(%Z`<AXQVunL*;Mj01`&5BrQqp(EoCfT<kcEo
%M!N9h,FX3$PB-i\in/2Y9-D'.b1L5>dPhoXr\5VQ<g7*iX!HR8Q3`H`7,-(l-`uNd+=)L7P\h]!/qeb6Ll*@[mshmE&U!9"RiO3c
%7DoaWNNm1k,a0T(j+^XS*,6au^&Uar'X`)1j&CL&P#5^XpMfL.!5bbr^FcTD!MHp'k\IWeGg%>9$%q`CPqTt2LLC$p^a0Jm*-VLF
%Ui+Ttp6O$8dFd6g.`X?tFE&gf^7BiMf;:."OUU2k"(D=d4:m,KaW>_JpEaPHKI'H<lA<Ra`V'n0_5kAa32WW8CMnpYgK(]49jK<5
%P,!Fi_]aq!-u.RTWS.PP'4,1cNUZ"*F,UA7l\j+QcHCCC[CgIt`kN8,nPN3mn+36$5L'f?%#ijHMlmCh;O4)0_H4&uT4u!u>O]c'
%oEp@qS`"40V(=-3O.7Q6gmCHN^UN4e@N.Z@.5nc21-kWa`6r;>!.fRE\&EXA)+\XWDe=PKUlR25ib"gFWRZ#9$4s,]q/Y5K]6>[<
%losND7;-hb&q\416&EF7YBuAN/7O+H\jAnI%u08?h$="2_m][*Ge_&7-:W^'8D"N7<B<AT0k*dQF_i4bEt;C$5T1=C*a14$e6p*n
%0!bnV1eYEYVKD#>SK#iAkR5bb^Q'cmoK"hY)Y8>%_j?E%N8MDG[_n(t/6<CU<6b1+TDnI1o+1_&']U98_,&n/d'l9sWdl1<Fhdb:
%Vr)X;?M3&0\&XI=A9XZ!qs3WVr#4!4aaaRH*!"Ocm,lQ@q8[uiq%%!?98N'[h=qLN_YHS3*tq_*TLRp7,*\1&`9>If;$*0<2V<md
%)SX/g"83C.r:R2M^P8uK4dl.*#ob,4buCiQ:"Yld58K^(B]cW[Z8<O@.G'Fg5mYt[;IP?-16#W`Cofg><5(29>>;[Ve,0A+np"UC
%4IZ6#QX;uW1gR`ngE3$ejc;Y)fB8e*q&fY+_hX!Hp`H=;YSZfl5'"3&+m'>ch;]*P99?I,b*EEU-a=OJ"?N7>NE/jQ7<"DIH`M9+
%J^G+CH=o)RC+X1S%_R:sQT^pOPs=TNh@m31W>9X?H(tucIhB?f[DPTZ]c%?f(-UQ;.2U,r_N4^<s*OS7%j1f"heg)jI]H''Fk=Bg
%5OJ@(gA&$*k8q>dB@j/uq=&SiDu\#<5/Q9u>lHPXqHnpShhs@Ys)RoWs3k5%ruM("hohcZrr0N:V/GK\/-iUcCOD6X-V::*$*XJ`
%P2.5UI&R:1@MAn':$gd`Y<nAq:BJ\ErLhZ<`u'@pkkh'2KFp\D)^DIAK'W@`0b#tOhN,PDm%>T+8F'jg%*F=HD5e'6#P)!4DjVP:
%Jd\F>9r:]sVaCqfGP3e[?1lXoMVWi#<uJE<f2Z,AA%UI;L\gM&R`Vnh_)2qs^n8'+_<s`EWnDBb8[Vchqt1kfeZ;^?AdSZu.#,(e
%O>j:_6eh!i&u:_O'>?XN(AfuCrJhK+j1WCIIBA4+U[_t7'#uFh$E&VgP/lk:8K9.8c^PXFZq&ellD^,34,WOQ:P\$qp`gnC;3Fql
%],L%gEaGQ#fS3D":BP0L!?6*ooTVi`&[<5m'Y5afYmlIdP*"+piNhc,X0"bKVSq=Zg%^^CI,/u/T\N$r*0HnkCiaAO&o=DlE![E%
%@#S=;8c^i0G5I,6MLBTY"0Fp1IqO7Ri[Mrr+iBS]gtL1t*-,@-.rCCMr'8F.Ff>mh23*&E?g2`AAfSA6rP/Q)r>:nRJZ:>2%+j6S
%+5LmoLl,ouE*Q2],nEt..-R<6ha+QPlFo29`BIVAaVIG-K/S9jF\m]WT/p/17`="F6bj2l:4$m$I<<@W!b'Yd6#B2POF>a5;/Occ
%TPeF`CEX$=Ie9L2FAqP$'a;mUV=ZEUARJOAgs&d8gXkUB]Xd>rlOB2B_d68Zb'gY4M5T\SD6B)=Kr]c>#+*;iPJgj)]nH2%\u+8I
%qrg$R$0>+LP4;E?U`mHmfL]=E+3)qA*N_bM8tG1CgdeCPZMW:UReS?S3b*0\5IBmO^Rl<]_jd[i&uM\aPl#,o.G*)E>#4kMlT"%N
%==/qr^RlQE669()0,*0+qfim;n>4bp*1RSWhF[h6bF%Za-gXt%hFb=1pX)%I5lo!hDs8:(._,8Z<u%AWmWBKq,erH0K5r%cnS+dK
%<^H:rj=f?;3)E]SN^#GA06JH)NSgqV.[$C;hH8cJ8%Xq-WkrGPHW<AQE,-!2D7O"^$,Je*Ri.jZQ.\;dc[-,G>D]i._NrsfMLGE@
%R;9%,Kl(WM*nbH-!U0HiKi3F3"-!uM'`7*:1W!@?UFBito]g+h&?J?n[OB"?[unc9KT=dO-Ft_cTk`R5TK?qeLQgl$j:SMjqLQee
%7kEo%Y^U1CG+:9Wck%S9.J1HYG#"dnDd1J,FedLH2'o1C9hZe:Wt1b3W&o:!RrTUQ-0:T_'WgWB]Ub$rJ8I4ZkZE1Td@pVRAoHHi
%2oRsahIJ:]jP[ZrTglcOfN0U6l.Vaj(qRhOSa/FI\"8?.d6Cq!UBM+e-gl^6ZBED>TcT5GehQY^'kRJmN:'>eFK5Mge8ESV(,n5N
%W&EbOUK3NO\2Sd$^=hkj^,%_05$kF&p3D&3VUu)=BZ`SO/!*Wc(VA@urY6\MnO@Y=bC.$pA63'?5TH;G7C5fKd3_;T`XY0".ZqEH
%UGkPeG/ZYVh<nJ&e;<=0K^@I[+P/HHM&'cn]%ia1&oQ8!VVF[?8\bM.+W6asFjKOCnt^.>L/&.D2doK:2l/]aSjYK%R"o5,4;fDI
%p/^%%QJG4e-1&Qu>O8-X"G]DmW#!+i=8!8+RaL-l\!PhRd_sQj@[<\[jJL^&2`r=5Pas/B+Rh5TOus'KAkM.Y#MSO0Ro1>(i$$X`
%CGj0UQ^qF!BSiL8Xtt36p9h2!DMikLG4Vht0gEl%o.H<<dh5.1hG3/F@bGbFD7P^FGdg6ZQWQn4[0,f<B>l<Db8\UNAbOt`\mL:e
%C@d\G-jdiSdp>Ur#.IMD0#60c<#>EhQ3qN`Ch'G0<&.8`]*(8eEna2*-&g*YcKD[u5(9Z1Q)\_2)jR;GL:_0nQ!/?*PS+2c'tET*
%"5BrKR133182k/=*/jS#L,V:-@0f.E*8dPW>[!&$_]q.]D+kH7mZKR<k2rGk2Nq9[!V!&UkgKadBE#5j@oS_tU>GlIUY_;P#\A_V
%5!dQM\"k,(YB;L$`&Gb$Y`%4h6P`6/)Jl4;,Dt5IGI<q($da\dMcQMmpJj6C*a;7%'=go[isKNojPEaW9<5FcJ(^P"7i%Foa.Trn
%R&lrnh=-!0a=aH1Om!^@=jD&fa'ONj>$IS02AEO+]1@Jd%<>ZbehP*^+N9Vul7i^+]3!s.=fU9S?hr^"<Z[SmbM,@FIr8_rGP((Q
%,du\:^+Js-BbFX(Ecq(L=^f#eDPaOU#KM.QG6akt_tSO'4"Keh^k<ZN'*T'_Q9&-hP`-$P)^s[Dk?6XVP[-4fD#(A,4nsJ,!luQ7
%E,SASSoq(qp`a*:;1Uu1Y[3[2J[cl*4@)K4?hUGjDU^CPE%Aani"%T:Z)56J!8XoThu:b7'=bq+HLl7cr#Pb32?a#>#+gUcmFC2Y
%jZEtNq0BY=O.#SG0Qkq.r&mlj$s[9.I&kVUKO&YUTg:RB"W-^.ktn;5@MRN4dTbRO)fGfk1Ks&LH`5$QiJG!tVbuG=ZhM>r*$InH
%'SV9IJR(L52TZXs*>rPZFGWH$^6)R\N5)i2>V,k&(,p2CH68'7D!qu%K3:=P6H]&.b%t5Yn,MlDU\A+[K>e:[8`.MHn#bm`=knO(
%:;c(0c3`Ps(O*:Q0.*IINfe-?+RsQliL[MQ$3KPNE4F]EclA'/$P">j+`ZA\.%AfpZJr,5Q+/uA6Kod'g=dQnM$cZSbZ9SP/3I*W
%6fNiEMY8=@?+`\e_<!gj59@Z-HlW.B+oelh3-)UCPJa/@gWKN=/TJ'_;gR3<p(q]C>=J&+3'?&'N@YQh+,>?^NXDKjk+FZKq`S`/
%">J1MTX^;"mt,pM(En7ce]XpSCk\p@^%d8JG;+.[c7q=!T;nZ;:Z?=4C.^RLWXD+ZVcqnl^$Wm!o>KgaDSf\LYK=SRYSmg0VEgRh
%$Q<#.9r;(dP$J\oNYB6nOWjkq9ah[>,6)6QTLWrdD`?c.W3t[';<'i`-MmGDhJH5e_!17KlM975NR6/\B=tDheYkl\.$C$skc!/V
%M/$RFjhE,8$Tm>9@__8_o8+[J&ru&%&&aQD$(bVe1_AOqp<1L1rMHM_qmt9ULs:]gR9s%J2+358@Nc:Sg3rmf:Wi7k')&5LE`],V
%$mC<1MV&pJR_o'"/AJ]JT1R[ZK;76SE^q>n2Z*q!p1'g8D*uVt),7r[mW#u!-*qM"4TFH!!$dK$#P,N9PQAN)Cr[7FhX@4*<MH/;
%Se$&!q#pWUOb<:1;W[4V'FsnP&*l:EeU:Zu;3UF%%=46lfOopLnd`-:fm:'=+,?I`P/8EaFj!KQPp1V'D:Banq=:&Wde^"=WF&@M
%*+,^u:Ku0hgkgRQog<]2^:_c5Z=#njpDFR8]sl-gc=\MG5-mZAnN810)o()sKgaD;F<d+r96DKdi.)=MH]><2<%%fN,?PT*Pc,JP
%3i/Z`[\[:alT)LoL,eCQ_noi(K@g*7=Crb*J[i?;2\Ro#0C#+i/'<_I_J+HueafT;/5[dPHnXlagHg$I\oRa3DfSSh&kn&S[-ul4
%+c&pIVb,,A0E$pjcn@=ZD/*0%m4?T3UO:ING<:aN\dZc<01Eo_rZE"HMNp>9"=g9$F*oGfXsRIqNi6+jU(8-uZd>X>V!NBeFk`CH
%MlUFeH#q,n0?e7DSb?W9a%Kp+ld>TC0(l%j'H.j+BEC'D8Y6Osg70W?L9r&4`&%ihglE;S"H2>5#P'F88!Oakbi]O*Tum[[05X%^
%dXfZONP]9<DL203KW">;YM$kN19hH>$6;F4-o<N$:0q_Aj@rH4C`RhfY7TDR7Xl!&J@mM9"/AWj#TZ;I*)ko;KQ]]BEW+@e3X=.u
%Ji%@/3;YRj]C"lrVa!?.qs-3+qe\u4*h3?JThfE8*S3>-:iMN$*,FA;CCqXCY`Z+.-#(`4m-7aj[L\fB(MFRCTT-#eM?"b=1VOZ\
%^ij6L]8a$5oISbEd_P[Ol<H"1[_H1@&bSC#YMW.f\#nmuoAIikW2Z*$@h\+5:$j;.*K=`tctc=O?/UQ14/Uch+Ds9h#3F*N"W8-"
%VR-Z;C>5d&V%I>nW\bPEWU@bD6VV%'H0W6![8u!UDaeeVUnmA2QSHR7eZ>g?`Sh)$&>'DY)Nl'eL=D;0ZN(>hY9kGs)<UI%H.N0Z
%WQp;Zk_1jVI"%M9Cca5RSAu/%XmM2MC%13G(Y,!2l\W;U^8etp69N*QqNRIO9<#?5HnNfiq+#-Aa#Rafmo^_(pS"!Rfd=)?h-GZV
%b,^'CoIGai6+dVsgk/7_p,e"fmBHe1PdF5&TLRgKYlm6960+ikXpA*^.YCT%Hu)):Em#I*Pigls+Ds1>0feo7,:U_XQ1Ot>Da[3T
%rb@G[@]V"fpQG1GbsQ:MgiiCbBiK5Q8AB,k[gBD853!Q`#c,WLOT\S<#dYX6=W#Z<Ue\gc"ZJXTE^,8`kuG^I44aYa]2&l$l;9..
%.^rWH/91:u;Lc(^*TK7eoS5`"AtFKj3r@:*WcPt\%:@iGckr09,I4u-nI$c+bs:G?7A]U'B*9(9SF't["sC3IoRLF@023^%A-.b1
%[e!E=^C8ZNeNaB#WcajXKFq$P/`ea%!sgO*+8#9#=]QnYj!HZe?s]Y.;1n+Jd("0I`liO_@q\6iRg4YR<G<B2C7k0p'b$8`2SSY!
%-2MfAD<bu"T![!gZP0+@S)-=clRM%m^laV3NjKY.QD9%*AKo43;H,-$q2A6-DKM'e,\O0C(fN](<i\:42'IXTQ=+0`>ae$L0_=r0
%.P%"lCX,#\`.>UceOeA#C0gPm'%Q[Q[^-Lh_C@kN>Z14E!dctbIaDd=eta+?^N!\urAdr'S;B2"gQ63%UR)*lknIA^8RC9%(XS\2
%dl`CVZ7Wpt,K%C_gY@fGnZ%^Z!KC=jYnC0='C]j?+.A3iGH/of9pE?cIJQr!lBARfVOGbpd/117^J)*G<4BlSWd<Q8?R;C(74Us0
%WE`$-chZk<1rJ7[Wt3Iu3euFnpKF(l)3`N'*$]ZrO(3uam**9Ldi]Zi1!S9(g9eOPLZL?$a5ENNiu$ks40t-eZpt@09WRip]3d?i
%X2MZ;/VFPYbVnT29'm-,dNu"G&kN\'BN]%glrBQ@U^*DO:SToF$8'i1X<"ng]"fTr&JC<C&K\1:A8>7\O2'`gOh<_4M\8N^;W9qR
%FO3X!"5^B,*1mM*>0!E)ER%sV6&(rId,&r2IAB?MH,PAAD\+P/KWu8]K(8S4c64,g)C11BiWd8n(HGYs$6?Eh>q!Uj6Z%]4.AY4@
%"^5Pc*EK%C8_1pYCg4so7$uT[g61QlgKg&Ma%/ns%*b&1GgnBQAg#9*1ZN13A;rS%Ci*B"[7=5sJZUX8TUmO.V6q7begMul5AXLI
%9\ncuO@ZYh]#@2CA6Z9>i`,d/$eh)3bEJWMX1'0/NT$8d[_(HTYTdJEli"5.i\sDfSiRecm+Yo<dRr'(VRDsk80q8K!7d7M[PP-"
%>`DIZrPRDXOg<CG1ia.K6'H]_'O?JV<1+jQ)loXG+6(7BH9>:aVV9Ul5npi.ZJ>!j@eV_GW5D?"dYG%8KmP6A(/#%VO7_G7TesN@
%$Y&:`$AX4R3?TE/hN`F!66hX-7RA%1mDO6oKcVBuiGObrLObO5#hE[VGpDgiObb`&;rM0s]=/R_EJC:=D*%sTY*r*188K6:\^hP3
%Zsr"7T;Mno/;\660b=B='R.G.,h\2/A8q:Qenl"Pl`i<`41l;$hiGTcBj]UV=5(+46ntq_d8lld9MUMQ]6`6M"T4>XdHH_@-$?Z[
%0m5\1XPpIeR[jNj>18to[?]PM6HX`TP?J[*L5PQbAp=Mj)V%`dOu%M69C/+Z+j3u7)Ga+V`KdeZN1_XFVkj#u[Z^Pgd+C+*d@*:D
%7BnbY;jK`SRZ+/u2H?elWmc*L.*kT-h2ZM<CYoNlM>+p8):R2?WU>GDP?&?lRUn3rZus[tM54t6*!,@Z2j?AcGkSHq2IFJ`c0h5g
%(,^uVg4<nY*m9o(`Ys-OQFiPm5:??oUHE<C)]nb_cHuE]o(]F$:;F),3qrc<-31t[*M<iqX?l]CQF8f9*NgQS:9*>M1Jq=uPMSs(
%=H*OG<M:$q*S,RJisM.+Q2s/7Ae,S%_YPlc5AS)90^i!f$>Q^%&j&-Xrj"t>(Ioc=%Q?0@bIW:HhJ8?H0:q$DT>nSEPqTk'"66?4
%HZpGOEuFrtrV8@<iSW%uo3@$2EeXBIY!-C&O9$Y?e"tt($ES*"4>nUFVH?%[:N0ItB,l(QE#FF\gn)Ph/5IHJ3%W:!-S\A4oFe99
%U/)^b=P8.Mg6?Q8WY1Wti\/i3&YWpC?s4V1Ih<`\AC)Tt00BcMI=@EASY6sABSM^>&5P]#Q.HI;,aGA4IC?duK<:D#BJ8?/YhVZ\
%^L0D"&ZaZq"Ya,5p/MFdc'P8:Q;-a&?'bJKJ/@[KYRH:p\#6He/dhJ794>?3N]D2YfV5UrV_GNHpuo+5mMPL<0fIZHlqun*\CC__
%d&/H6Y;$BXW<*RGq>Oj6?Rj6-%^#J+15k3g[d`@]F`0nK#4#$R**fZ5Ne;:J/XII]9i-tsI/OU]%($jb1!o/%kX7L>2W9,I%0=9Y
%$SFJE#+DK"S+6Ii[KpOYcm#.3&^[LNTQ!V]Cq=+!p;+mu#+DK"Rp!NM\2\/Ad,L_IER:\D+?0Cf]]UD^("XB7R])sM=hl2j3,!<Y
%ih4b?d&HB)bV:mH*0dTLqR#FYM(6*)"WW,PK,+\D%QYU8SV_r;)ZuG-[M4t*R>AGfV4`Yp[[@:=Jr>3r"YC'B*<i"V%)UP%'D<E!
%Mf[J<3G>.EDIrp)i8UEK6&U@ja$F@l%a'U/&c@ZAZFP9'GFgr9STLV63!:$&/Ikr(F?0mmP9#<)BY!KC'/P6=m*Fc@W5rSbIL%P1
%=q%bTk]@5T.P$<b3:7*o?)u_`_^;=lB"WPF/c&WBZfpRooQ)JaL]`(mrIP;t#^<s,TSY/,R0=R^Mh;cM/Ijf^#G$^'dac<_6U?hJ
%[I#DVU5Ef"!JfU-TLD/)Jkeg%Vcndc+qDA39dC2tLmbs:TSY/0R0=R^Mh;cM/Ikr(oJ$h*#UI-.:!AE9?fIZ0-E?9A(2sO3%U'jZ
%39YH(FJeGu@Q;-HSq@Tog$O2$'ftSK'lXF2%U'jZ3,!<Ya#F?-:ZC4aW$'/Xg7O3N<7/rAi"0-5ZoD`=d,L^ZEKEQIKGtE,f36DT
%2c69+DIrp)i8UEK6&U@2#CYs!`f+o)O`>:]3)RJhI5Jp5>e,iVG_D(Y('Q8s=qn=lk[T/W-O%a+M3EL4/B(1<3^hs>\d2s]cm#-h
%&^Zrk`+Frq`BQ.DU*:^#96#!3$B]Q50)f#OZhW^"r,X=iBEgFq">o-`.K\%l'IVMr!/X50U7aq@Mh95D6)QJhApcs75r1WtU*(IJ
%EKZ<AO*H=1$<e.N.-PI]F=JeSL,W'G1nu9F$IXJ>-e[_QLe$['TLD/)K$HhOB4@MOh,#iQ%$%8'8B4St>be&=*heLC('?,m3ZA0l
%ap=HP%2B&kfSGE:F;Vtg2EEhW&\9B(;:)&1ZVf);[XqIp_b!-D1ub=(9bbQ42Oi?T8*H\?76ui`c:1*4Z@Z%p6Ua9c1nnG%'glt=
%N=LqmKJ!=0"LJHuC]ni0)e_Vu<;\Nr,:`[i+VZ<QW6g>*i*r=t5)Xj7`]g:UIqE(U76`R\U>d786?.%*%ZGXc/dbbrZmb-S'QbZ+
%RW/cO"3n'+MLfjP`Q9tu0&dJS(hbYN@\C%^d&E==1T[:ETG\JA;329\36=XF76EmQ"YC'b'XT:P9sG<G"jN]rMLosJ`(;jJ.cM&O
%-tlK)U7ehid$_=o<)>qN5r0j^U*(I?EKJEl.,kiM-tlK)U7aq@Di0c=.7f.\S.r>eSiFh]a$`$V(BlAt=qn=lkY6U@'a;j<Ll-e+
%nAImV3[E\s\gV5hd%[1%6#VXE=GSk/h?QYhkgM_C@a-ge`^DpUB*jKMIaK]g:TkQB/J`YRW'nTk1G5CG+WWgfZAf?PG_@[Z=ran/
%k]@edVGj`;fhbVoN/X\q8-`"^FJD/I*e90#('Q8s3ZSBpapa`4%5eC8i/!hSF<&7k2``qX&\;(XZ-ZsRe$79!%&"Qp:p\N-O/Q2P
%LJjXiUZ3R?To4U?$S<,T*=JF\(7G762%.Y?M40-?1r[Qq3^hs>\l`XNcsi]tZ-\n0BZ<$],W)8AC(eqq'dqi$.#CIX,,%FlMhFhq
%6DlSmAsbs168MH4Ag&0nEUo)!P^%j6(0W8r=QjiXFJ`mu($SQ"OG]=%=D/@KEU_4"<oO_&=D4td@\M8Ud$\\n(%+o)d"n$e8Os"c
%S8=t<,p&b<K,+\D%QYU8S]VQ`0b6,FNKB!cJlHR*8N&&/iW6OpBG&T8T[OM"WJmJfnk_-h%%=+D8B4f%FJFI8*heLG((2]03ZSU!
%M1fKj6VTm'DPAI$*Fa$:NK0KQKJ!m@,d^,+F<kt.[Fbn8W**eg:=LhjUF]0Sd@h57d)A>0Kbb%J(4'1Q7En.THD5!p*GBH`NK0TT
%KJ"$D/@8OCF=_O2D'9Yn:p\LWTVu!aa''I1ZO*:LKJ"$D/@8MmZ-_7b.Ol330bb?1D8Il"^<nYLO3kj4MhMoS/J`Y:BLU041Q8&?
%+WYQBnr4-SG_@[b=tI$_BX,p4(AdEB^G6UHq=44:r@2*%rU2@'rc\?l9E0'-Tk'cKplT%$T/N0,J&W="^gB&C?,b\4ahU,er:of+
%i1Y1n273#qrI5B-dqC=4!?c=W-<*Sp&X9IB3N&N_]UPi/rU@Qb(pDJL"$.l+6X2:Z44/.me_5p6/ma`uG#N=3Su']FJ`FT"ND\J*
%J"N-Q8T6Q<>Y.&OPT1f4CL!Rp.__2pZ-j/T+?Ftk_1mWraZimn0jSYgE@8p=)Q@-])rn>.e!J+p$foL@o`kbNMK#?s@Imm:-J'p5
%[,No!A?!ptc'CQ'/hUFX[Vf#^KD=9U_"$@L`[L8P^J1#\hu$&`;o_f#YFUMOQg'.8DGbV[OX@f/4mG\Ri#8BtT`Cd#eO*sT8gZt1
%4j07t2(:!H7F79Vf<8h%Y4G68YsGlOcZ6\I;/UT@!]A+M/6-Y1TO#iLUb.B:31sopdFm:1ckeu^JEgdV&h?/abCL4s^QkAZ2h1bi
%oli(X1_Y?0O8nC(07WtfIFXsu'Ac[BB:0)"C1p;Ua&I<\)kYsb?<+[.+5UT_]XJ6OH:(=#0!!t"s6rA(e%`W-0(V)1e%],Bn$X4m
%e"$D/!jS=)Dm1;"e]2_!_$='QhqMqj-J.nP71AcBc232Y\A`i]>fO^:J$00u!)WRo?B`J><#.411)C[7^34'N->O@MW6@]*T*9/`
%.f;prl0TP_c4hGBM%U%4RS.#]BZ,S+.j=a!/m`X8)Y?-qmM4G&KL"qOY7h$nW&cb%D/m8%#.A-Ylp0g,Wh9aY<ecOF+10%_&+@[<
%(4'nKjbrBX?Xp<IQbL!lDkfi&\TN<4ID8/+57;tUA`6^(:oAYWr\b/!g)#-drpEj;p#fag?[e(o+o\nI0=,gG_h%9l,&TS\o2cAj
%=s?tPWB%sh[>98PM,iM'!6-mQYHF!jT?-00Hk7@eW4P)pHC1LuI1Xc;i4-R!N>3jf<.VW$H`4q(V7[.)jGH)Pf?spIcr#.4JXZN_
%_+dOd]#bYba`l6k6WKp7em:A_%"PR.g[k]N[XDdT_5k#"POm)W7o=f5hDWkU0+#Sf)Bgh.jtKU73@l:58uD2K6-g0*P87>EpRk6U
%%TCaiJ#smf)I.I6n:=IN$S=_ljA'@3I2'O@&W\aU[C4d^_;ZhCS=*p`5bXJQ'$0c]lRR\;''Oq_kpD-9\mkgM@FgjMV:+B!_kna%
%O[aWJ@iejtnODaZ=WC>6N@Zd[<MP7+&psBj"U`e<p<9D\hj5$e:FFOed]$2YOpP?oTVPi$bJAO4"XTQ_Y!#lf55H<$-D#+#+NqR3
%I=Fd!<+VD?q_iXpdKUe1O.U.gIrIku&KU?n2CPB>ORk5`)q=M8>#KPTel[5E(nF99nU)ZDJ(Q/*g)*QJ_mg/24",q1FLbtGAo>jM
%Sj1Vq)B.KKgH7FUe$fF.OS1%8U8XQ(Y#,iAT?,obUM-`kBHdl8Wd=o*Wn;JE@ZSCF5!hiZ5u:XALacgA6PR$W)0r#im3ugD*^eFV
%!Qd_>no``<9W4Em)Y'lr7OVGBWpAQsZ@+4ijoGr1Y^+^V)p*okGc1bj;%Qmo[>,C`-n-Eb&-,.XBeFr^;)Ue)L)D`eCfNI3D"T"]
%H&*Z;80t-PfiFZ#c7T@(l-5aplB&(npFg;Fh\YRVW'C0/!,;V<%hh9G.=5J=.O=jFG`o9nTrGK:P;s[=5n5NXgmH5-quHQ@L+Z<S
%*t7eBQ'eT='4WFsPg=>c;1\kPI;:tr,\CfbDFd(gBajK7;J;;]>8rd.GpeB<^q(fSfV@+XLCpSkcXhe7I.2PP$>Y4l/?c7]#q+M?
%YeoolW"2IZ=sD074&;9K7`![0b<]W%E%Cqq]@""(%5D>$PU)BqGK&=4Sec0F;UR+2nUo!&^ne`>ECVN,fI3t*bf+!Tqu;5FWDC(!
%)I1qa1_%*8d>/?H,W0ro)*+*UULGq)Cm+o^@X%$=2I*:kY*ok66eG+A*GBT(pH"US--$OY_D+Fk_`(&E#31W8@&i_^6n<]Z&DIU]
%W[?3l1"o96BO\B=2/0V.p=tJ(mp4C]KJLoMR1%?5]X"^P5,9:b"[3;jT7K#L1D^aq()5MYD*rBX(>b:OdHK9#+iKN&11Vo]c5h6!
%1fD3Q5tfZ`oB.N=+MCg)FeWDPA7fZ`UHjoSNGqe>W<e`^^`U;fPsVmCH$0^Ffh\uAnC797ChfE5)9o^S<gPre&NKD/EC\Y14:qAP
%.$c->04=$;":Q)F$]U=X`BsUHdruru"gP`.5T?H\BpH17dOnX'AhgH0@%QW0Z^AbPe?F4[FNh&@0T4Bk=5,^.UJWTUGTJKM)4e<A
%.nOdhO[JKr3m`kf.oAsPq#UZc,r@I%r&(LC@d)(IOk,jI5PFOB+=)$<oK-[fUc!pDnJfeQ1QAm]Z.QiT=BX6tM"c]fc=6_65r+@]
%/">NT`7=Fj';[^Em-Y7=F#(Jf\.(@YHi:emQ$>=19K>s%A6cmG+a"Ug,s4bkBcPVs<C71i3I>I_d=;-HJ<=CN:H2m`)j@j?`;jVZ
%d^R/./$]_Zfb^!4R7[PP9SZ`-oS2JLHp1(cXK3puE>s_7j`^r%8f"M;r*V7,lpss0:?lu)1(f*QP,q5%WeF0l%Opj2_*k,Qi>,Xt
%.CuN&LXD\4EK+I$)@oM+A3tJ90sCneqQ#X+*.NJa'IX?bPeDHqM)lQ4<&,T%jI/q52NOBbdRX!<iY,ELFlZeN4p[o8j@sV-CA##Z
%4%d9?E[o^4:MjMUH%eO\L/#uj%UN0;'AWq`#Y#S[a(R-"Tcr'*<DsI(5rTDq++_X9c_p3]7"YO!!dtg_/@=[q(^339YC8n)0K"1q
%7A_"md/(Ot?"*Cc)oh)\\J_<aR5bU@cY'X'epI)GTV.$D;&Iat8(d152MbZK]6Z.q$khH`0#\E"o8O?f02%.qUVt,g!U`To$;AY2
%(u+VR<fFbnor\hbi?Y<5I+06XYY!8n!A3T7/?+@fD,Dj0gGY9Gi>A+3/B=btWah<jR46oQCg2p"-ZcA07=6gb\\\:"HR."1eN<<>
%D([+JfV5RfPjL.^FFugL0=F7<cb[cU4)-:j%,ZE9WY>,o$1]E)Pn:/?#2>O?)J_`j60:cdeq)1)7,70<q@BZ:.i`>q;:7jYL%O4)
%/'Sa[amLGY9.M^KV5(bUd!MNj".W*S-/J8kqZe"aT>6X:=n'7PYtl@Q#YAX0P;%QRP$E`4CS7Y,N#-1@bt\;R1I3df#Aasu!u$@:
%'Pn7o;PXA.P+.7aM66LY@Z?MkZlDM[m&l`(Kq8t[U!oIQ@+Sq>A;We16Pq*Y5h.fthPsGuB_cKM5BN+D_P"F.\hbU<f?emM4'S?=
%:[,upreZ;OgPi&][Ef[f8iK<cYSO36d9_+5G@45C5mK&Z=o)b:b2.JAJc@Qfhe:Q/\8bSR(fJ-CbKZ9(pfQm,]Xi(f/'D?Ak4.-2
%X?@<>Gsus>&Ru6$]a)!tH_[hooa,f2fO_N,FT^t8<o$"Ob?pPTH#HiC_=pPU-.ut-Y=e,&Y9&'PHM_FE%AJ)V+^,#C,ckm3Nk=:r
%j,W$V'F%ZQN@1?Y?IuV1XNXA=$dqiV+!EN_'kjjCFVdARc<cS@mu)uBNMI0M@mK\W3ktaq%R-4u)T:2Z%Ypj-lpU@5$OZu+PRVV_
%I*fl@V,[b=.:\PS8;3V9&8j`(iWcJR[cTM3X`?aLg\[=u(q@?[hXdSe'L+T(hAEJ%K2nMis7E3RR=FF!/XMrsnKu^/Qn3)S_,'GA
%)",cVrVhkk[bq#Te*jj_Y'ujPUhhTJDIC7\^&8>-oj+Z+g2YU^XED^&b0?FQnrNf[o,lHi,14tus)96O:D>M,P4?l$J\T4pXJI5A
%TiE-3FUkkkOJ$B.VGnHde=>7uTQ`es0dg/Rja@knI4P#p+_l3sU>[?S@/^B@fLmUtZ7bfiZEB%MkpcBEI't3T5!WRP1`AO-lKJ8/
%A^17jX6\n`4\XEKmn(/>d^t!;G-VTdXIZr(Bit9%-rJ_pIuCe&@,WZ!^Q#2@4c/%oM`l\@*o)SJFL(UNrR36Jrk5)X[.\hFBs,AQ
%)_L"IpsX_@rop'TnIIj3B_[Yg;0mcW)Lq/qQ)7)!Q+l+jL<'de[`'h]2R1kYBm`$oB2'Bek'<(ta#Vr[N2'T@OlZn;\<7H/WIWnJ
%9eS6R1!t_K+#!a1A%)_be9J7717XqZ?#*er%lZdn]6QmGn_`AV0>IMF_ghNpNF^R49a7f5MHa_c^8*ookbj(,r6:#3gTI@,IAAO(
%Nm6ZMe$&d?f`/WeF87JUs7&=ujnIZ[?iI`$]"%som(l)U<d)/$R;LUd8B]?e[36/3_jL"r>$an;L57!B94g,"Xr#(Z>_iRgT]C!m
%_./!,R[2]@XBE1q!9VoQ6.QZ5f'GajZIjpGU"8E+@KQ`!6F$H#QPdq.Y]]q>k$\!9F3nE4^jj9B,]iTfk$XnaolF>i+[+Hr9VfWq
%.!mRJP'N9P85!gZA$Yk&ZQ;_XWC.D/`BcaLG_"%)>RL,3ppq9Yf.dMKAGtWP?u`[)-MF>YB+/A_^S^?JT@P)&K/&kRX=qL"H\6NP
%$psXS?`#QFBL]V]l>S%9H'hVsef&YLfrqj*q05!8e/Hgn\.NjES#BU%OX?!$npV2C=CY/Q13rM7O#e8]&eNgK,[2hqd`H_Xh#Js#
%>;k:OV"Iti0N*bJdc]IT`W='[4-+BX\-)W`LI^+b6!ME$lN9W1N(q\O;T!mgTkuVLD>VmJr6q>ZhI6hlG?=pM]5"`npXu\-P0[nL
%@VZbIR6`_Wfb$jM*8sO?gSG@,P2/9jWrc^J3S0@/75[,(YE<GDDO(S7=,n]`JupGkcGTTtf%?*tDMH8%58GaU2\qC3p8]"gig>!!
%I6<f,73nol9LLa<JZVGKW8?iEM1*`@oXp<UY;A+_<VG_gX>+`e2Y6?JJOr,a>P4j:chrX"bsaitBp;V'Ooe*[']sA^@@!+8\>sMY
%_MD1C=u@AM/XN2L3[fb_)o^c[7@V6KE.IGVcL=UJ"`BEq3#^k,cD%luPi>An_-^FT;*=fJ/k@4^4q1,j>!]1I]DasS/UY*AoRe2_
%?2HNIWe4(c`.iR"Xo8(h&Z/l@mMWcApC(MWB@?@sq"F\)Z9WnlP=E3jle5G3d?#B)l9Df]0arpo)p&Cq4,JuRT*7D&Z_Bhsij+1V
%OWhpa*;^G%h&t&3ZO3ecN4UB3)Q[%OP8-+$YDB%hRR]csLn&6Np:f+=AXU"s;$6&?Ic)#(f\6&+!IGVPq4jE<dMPn!p9M+nEpsC6
%qJH(m_jARc-DH/M5p`<-Nh27$8+1dT[#Atg1YV4pdH4.p"48lmTT[\*HOiUAUR-=1LktgUKiWt1NQmInXLF3`&R./#)2;D'C"lJd
%Zh8&0=I%?[<E)=b7hn!FWkd35=aohkCkh6>D!cI`FL%7?Qc-Pue)Ejd<FZ0H0bPN6Vi\;H)REpC8b>g@Qr=LhB+:@%!=!6&]B/FE
%?@hL.5%J[!+%Pl&:9$c.kQnih6QRARkTW(o-Nuupi(WND5,8Dra*E%oUaIkUKRFoi"*(0..I\Lo6KTHi#4.-;RuXpEqV0<1Bik"t
%*7>'OF.<$tDT`7Ui,.0I^V-]4OX)lgG6.ONF]gs@0]h@SH'CfS@%\\=@%A,"hN;V^HIpg"g@2k$]Eirh1UDG.WdA?(G#C#qSu3il
%$jIf+&IahK&]55f=-S0SS+mkqoNPH_dk)N#;/Q&&7!uWq^&:QuoH\39KQfiK5It3F-Gi@(Y>3Z@-q`AbZAR(+0Lt@6$%2>MNuBrD
%?A7V_GHA[RJ8mm8J8pZ2V!:,$0Kl97k@DhGHGI@P[at:RRkc3`59V7HY@&(]=.RgCe#b#NE6bIM3_ll-=NBZED9iZ2qQ%lOkD/<D
%-LtWtN@;K[3(QgF.8<#28Z',?FYmDL@YeT</5hGCin=qG"&O;/*[1B1CsLD%pbbGM0XZ-f,4kn[]JRqp8*D=r7HbIG,4qWl,='$.
%p-k;*B8Or]:G^+G00DL\'@Omff+js.,]*CT#Nu9IE3cp`5AGk#a6<LP,4sO0g5T8X&c1=,4P(49LiAOMf,CB%,$DnK-^]PYK]FOF
%ZPk`>KY.Z?2ssd:l/CoIMc2;kIprdR,>&KmO5C*)JJOSU>DdZTD#7cRda(GldOS:P`Du)C>^S&Z9.WA7BZ0/5p8C?G[l<O98Gsnn
%"VFr!PbQV@VC0R=#A[(5Qlb:%>6nF7ejts\;c%f`.ULoH*[:&Qoe:^l73-6c>u"EjgHC.`--XFCk$fBup+/6K$DT6XY?EUkePHG#
%rf!j\T@_NFK]oCk93MB-1WE:$O5N6L/mBU3pL=>q$1cZcq4hKf<09Xr5;^I?k##+d0<9Q/E:[aBs%'P%l</>6qX:i+[-0W'[+j'E
%Ja:Z:GuV:\,@+Y5.&RW&<W/T-ckghr_4@oT8UlI6j)geu"9%s.-EZS+oTjDV\.bH@X5Ysu<.'+E,7rbTDNQ.tIg"np_#+e3^EtXq
%]6M4-?@H;/B8tm4gD"eG<Zr^cW'D)Sm9l!I[d&3q[5UEB@e#D-diiAZ0l05,20D;W@L&hUYlef*kk1u_Y%1D]/;p9!BdG!N[b4H-
%>`7>MXT"'--m9$r$)rQjCVB`(rS@r7-&Za,,Y\%`CRhQ-,?d\A<)OXmkX)CYF`Si<OV/(X]OY%$_ZZ"F%^<@&OBA#:QN?\0"@%+]
%A(=<MBEB@6QDpmEW6Ql3FB3t#Z_RNN[F#E5g!O!r=mK\#C*S^._XlA$[nYg$9QQr:pq-Yg54;7V1=LIgNlO"U3@NgWZhWpnp^TpI
%'Q.j6)T3)=WO]+0*Vd)O,DBG6M'P&u>D.N*kR!*NAaFCDrBO<h]`q\_Id1O)c>U>oUe_aB#s0o!D@b%I?'fB.G@uQc?*^t%&=3KK
%>*j&.k<qP`-(EmSj1^;>i4OJ@QYc:%D1s!u2EUG:%aLPW'2Ef*4\t*N8>4q^qRJUbR2r/s,WP6JM:%X6q1@mqbrLIl8>,BP)P"i2
%XCa]#qmEs@q*/5*E.0.N8^sq=et4?MhaB5uoO.hT9?8KT?d,gaWg@[>KY.Z;2sscOk5d6m.N!)Fi,\K+S<#oJ5?(^:o<-]4r0#f4
%b9d3bR1Ys]&=#XJ?kj)OS^[SdXXGf@af7[+')hUa.>e&Dp3\#ToV<)loJ67dQVo8GTa_I!9r/>>NPlKnj5LdtAluE'b[(tHnPY]P
%8bE)K&PS51`tQ5I;Ha&baT^"<3GE:7"?:rRf@)Ta[j9=9UaOM"E.mCELIQN;h<t_&_.[_l"?BN@T<JHng#3Z_#q#-3V[h"U=756T
%Jk>ALg^+h4@)NnJ@'[f1\HW^j0)2E^q#jkX)j^J._>1L?T5P&,@lL#&3$2s?W"4552%2beU;bje`iN\=^QRM;Df#CK7-kMUhegF*
%/O;gYPH;OMi-Z3[T[JT)N$UJmBhg]p^@C_C2W(HC'q9uJ-O(TnL6&6>?@tbR!JD6&[s1ZC<G3-]>>pD>[40R6o4t.\Oq#s8E7Hlf
%$K"J81.-!p;E=B\4Xu6dp',pG=nJqR$t$K?_T;mriG?.G@D!)Kj%`Dm<WR?UM]mAl4ZskTZIosj;m]N<4>OC:#%7hXX<[!4d>?0O
%Cl/)'Wh/S7ISbaJ8*e\+K[ImG.d>IJ\+7+[b(@8a`hMJjdR9YDrP7?SS;qlYaA]BE/0%reOOh>Vj@JsBWWf`L0<1BuDL=<?i]<[A
%ja4C]9a^+!V_DgbYG\jWe%lh8,rdJ.G1Q!dP^N=$e&pm<&jnrb?9YN1QnCM:,<#J(iM]<m>sU=rRJFOrSsunt[)l`5X+-t8/i@Kl
%pn@h[c5qoN;bmreE8PEQB0TA"RG<"tkUnh%+3+nPis3WpK3.P[".q]#loj[\n8*_<H&rH&Ud^muGaQ8Y0-4L/ne0rgd8=gKP5"g[
%!1#7I;54UO-[lJ,+!DJWMAId^`/>@4K=muY('ku+;"<Pm>4l%aAufYkNOLRPK[Nb`ga[5KJa.u?%edPaI\q>#7\SbcR+2oPBou\R
%&iSEiEp6I<G"8pD#H3;=^a>a]J%m2#2a[muZrVV+]%Ls?fLY$kKalei[=\YM]Ehhu91abh/2?A[+po4T;P9Hk*UKNfolos#B'<*4
%kIf"p#>[g9I9pG,HB\W47VRCJ$akH6c':+lgpU&b.en9&?a!YXcFWjCK9N38"QU[-J\bQg5]!_nY-)EO'M0IH=,o9h0]@joH//LD
%aDi4)m0_q6S3j)<rfr"dpE_@n[<^MbVe#KuNN,5Cps[-)n#s*trpV!os7lS[J#n.r_a`06^\0*m.e`I_'#P(&A\94flIlhtVHJ&P
%S6sss:1nPH]R2gLX6,\5&"?[JTe"o8*Q)dYWn(sXbU[fs,P+ifY2\._qqSh^/<*;+q4/n\4PT>;S;U[Spl%#2R<s^VW,JQkd3hT3
%H/s^B@d+P0rf[.8LR:!*IPc0.0(\Vn<E6XpmD6)Wak0Uu3A3DhihO\D55nMZn2Y*Ii7rc*G#c1HS'9>W'Mj!2)YiOrYa2]CG(!aL
%PH=0;N*YDukd8&7k0&Poc:g4>qUM-G>&^1)O3):FgKukDeFi1Tb,#UffG/$oKG^3D]6Q<REb^OqOF'\C%F,Rg9)SC-;/k"^p)>g'
%>gk0=E1IbgX!ZC0>f3s:r:;"$&(QBD.hA[fY&1n"AqRV]]:B/>NY'\l(X6f'W9\BHnV_YiPb!6pRCq>\olcta)o_QfnJ'jJUNq?9
%nl\)Y^q$G$T9k#l=hG8.Lt<0OO':Xur9Ef;3Mmn`.s%bhnc[a^W4.1tDq,VCML=WMQ>n*A[>2T&drKAAHYR:k4ae[0qN[EC-(&`,
%2Pha#r6hm=2A^*mBWrj!DsuiF]tuk'9@hLN84md4rbD).+`AaAi94[@mn_Nml=TL0g:@0/mum1T[<nLsQYo%3=M*U?I<db1At9UI
%]aC:5f[cb9$0bTt)Jn#QYOCrJ^GoTl]tOr'F(+jhXl:h"G'1?3o4^pcbBC)Nl@R[Q\lj/cl/p"=]*TGne#k@-h7M3;.0tR,frQjd
%hC-uFs0c,-G5nl9R2Inb(!,4&kh]+X<G^0V`s3&3.ILN1\pLdKq?#7DN`LSKWQJ.D?ZUOkZ#Qi0qRY0HDH5M!^=p.XWbR@4g"T'W
%Y,e7t35^e*f;7J)X.hn"qk`TOF0TB]<<Qni"V*bk)S04YqCh=2)C#^)osnlK)A?o7%hgr@[K$m?FEh;\\$Xi3K>&Y'h,6d32W-j2
%@q?f[hF@c@/!)nk<spY;@)O7SN4rF78:\oa)V0VkdKiOZ6<IDP/T-Ltr(7rOf-:0R%%7hF/rp<KEMJt*jGE#(O!e.me*JBQBGbH3
%.mU$XGd]Rt>M;$ULp9JZ'HpT[F"sQq'#R'I.%&\Qc"E`?+:^?a8\rAt_lY0>aCN"3IS[Ku(/n?!/QIJ"='q0"7R#".il6#]a@J]I
%*VCAa(6*I>8/iOT4:,"I,pK+M`rDP[$,%H+&_CCB!;hB?Vsl4_\]WUKQ"^A5I__Dm.*?206\]P6Kl#c-aS[(ZO<lkbIkeN25GP4#
%T6XdYrPd3\g+'n%6'XBR_ARoU9-+!/6LcfMS\I!kpHflX["agrs$C'W0^(Le`]BQ^<]2S88hM@k`8RB$BW*L,&rYAf)>(cl"^VAY
%,,'FP-R0\T(g-a1ZO<,C1aNQ'gs]X"H4og;l\ju3JT,lV'WPc/7]!+tZt7A](7anfI"X-Y6DP<H/>X(dZ>8ufOqXlXhCh[+T@V)u
%Qae_Gk6$rB(0PBP:.l/Fd"FC?<+"9D3>Y5W8RKY=ooOLXWa,*=W^o2;abkU'k^jUB=YpI5#s%5a,'G='b_;$X>a9YZA5<nElB5CP
%:>.u6=enorS96)b^`([dF5[-m\9G5.-YR-KnukeK0e.S.+:BgR;du-,4>[0nGU4#U*YT'(6+W)TJW]ISi$mOfh;p2\F"W<X6n?DN
%^#Q+BCTr+S*l!Zgl5(h#)Q8Z0nPkH9^>drfWA'M@2i<tT<T:uo^-Y+,Q4[h$#XT-5;3V=eo>0TN`+63a>*.m=WImVA%RnRLOchSa
%<R5[Y4qFnkY0NhZ.g$Bc"gfd*<tXR=[+#mF1H34_694<IT4m8.+YK.EAsHo3EJAoi,BqiWREB%U#[]Zh:?=N%OW$Nknhe0OaO+K!
%((=XeNF,#N1UligqZ(@1_$`hb,ipfu(g2jta&gV'2J$e-[]21]W.?e%([*2?F50rMm+[KT276Cg"mV.6H9b`WqV)c=1.@;A_cF8L
%aNrNrOR,V1X,6!YCDuDm:blrmm=L='</=,U/=nl$K9eI'RH(7R`.RQdPO8$I^8leF/BojU\Q97.i-V=aMed;;R+k(%]mb[bB#n^n
%Z_4hEM(@nZF=Wo.otBZqYoTOpQO3?Edb+OCq.9*Q.uN+5JG*30aP*P6;9\dghf.3AkP:7tCBelqi+(0`B*NggC!Tdll4@9BNs1;'
%a.YQ"59mHoWF.1Ao4;",a0V^`^F&r<S\Or\o(C`%lc"I?H1uqkXou1lBbOrqHXk+Q1SHo*NsA4FQQXjEjueL%&IY(\=6fn8iZ,:(
%2D?C\ODR"XLYF=X=*c)0E3EL#_"UOc_91216+F2*$*&<*80^CT*G_d*5Cp4@U\`R3Xiq:;IMq9+A<oB))J5VPY:/sXk-h'm97Di-
%?A?"okg/F#mOK4NC7*cI^@8E#n?X-jL0Mg[-7Zt#Osr6o8,G!7,A\/pZ,f&DjXnC*VG1;l*#P_tem!-`<U`b9NMl2dE=EQ$'kI#[
%E8j0!BO<I@V2LJl4;4p8m<U^"8MX[CorWAk:<9U$Q^Y,Klkh'S3",W0@RNI)eG$fu839=$%-Z=)5q7e6a!pVD's]-%JD<[cq[0Ml
%%rX.LYe;B;e/sp%b8TSXUQ+GtHWAI`EJS3(?j#gWE`JUZ^D]gb2/RYa?gjE],Ms!o4n"APpBQLf-piELL&jl@k_?LPfc$ulJ6^Am
%]5jga_V66HNC?ReC1&kfJZ+.rUMBA,jC\(+o'^n4CMd#KAi)T>NEel\lC8?CiCkik3O*P#eLO\!"J6pCaR)YIe[Ob:WriC+$tJX3
%itbQD(5ZpHCD>A]XqqDc^9bn6EY?8i@"Lm4iK7j.=EAIAnf5FE)BAV^)fj78oU3f"nbsEN,CU,4<&Kd6Mt\2TC7mS"8)%BN(%"3D
%R8gq'&JQ2oCS-U+\#M?7<(]Wp;oG)t"Yd_WTJQ/W+8`iP]f]FTV]tjdq\5s3n:EU2CJYZlljZAUIt/#HIXW3Hf#3G$$+qJVojpKH
%I5[PNC>/<!6m;TA$(+E<q[p*$"U)90Zrj4#aCu(@Ylo7h4=o/'e4P5O8DW&Ucok6WB.?0Z,W+ZkeWg@dpA*\^1e__UBqZ"!N%>78
%:Y'g:3,)i6o/nCF$Jh]5SeHlj7ggecY?P28p[Y>UA%J_.:M2=hRT?g_C('J*T'6Tj[_?+"gndkrmI`qP(L-%"J,8btrue)pa.L(q
%pO->t?cGq"X8,h0\&3[*dVch0aKt8WKG?\ZeUDLV5*sfKE<BR-ec+(&I0Q13XBE"l5;=njqC0IAM%Q=._R#Mli'H99](;4WW!VjS
%gBoD[<aat2?@AYLBg\8t=PE$e/k.*3Er`0S6i^g*Wc!N0'5Th5;aJCA'?GS?e^n\WjE5G3_8W%(M]]QQrRGlWAIX#m>l9KMan]6f
%%\!q``d@$3UU#N2EE\DFg1a[M*P>Cj2'L3s*hX]e"]iJ[eQ5KdD&?eGg,d:lD?J4sgfCZ#JI#9M5_`]05Xi[+."1C2[r/D2Fcc,Z
%`eRuM(re5E`NnaJZ&XN3^?j))UZe@k;KT!e)VbC4<66rUCn.%1V;O>(SXgGtEnZ,pc5_W27_X0taoEbA7E$T,7E(LhU"2@Me:cLJ
%+`.[pQ_JXpGq"'K[h:ddplj+qAX8[r^<"LEnRGgGnF=?8f/P88bfAO<U%u4q&dC-LJ&>YINA/IK^'_j#'.BqB>TlG8b$WR7H2&in
%,:dCn/NEY;[I+@[->6b?B&j9Z55"2f^UGs[)#7S#:WCJ2]Ab>[=3Q?Q4U%:9]0E!Ah<3-:j9_e$ZLVE45+Y%%9]Z]q>*VSPM3!q&
%T_#GZ-e*acjj<;D8@+C>W;1Z>R?)^fUY@;M*Gg,-nR3L]p@6<H^-fmMh`2l%fIYXOgQkdd^cT9M1WQ=?&/T[S?]jQ)#*:sYn/Vi<
%`"PX36FrZ%E&NWEeE\4od6"Z<$O4:'UsidkDb&ZaSosO__<d@<MfX3dX6MRXNMm*[P+Pr?YgKS5[Jis('iJhaOQ0p]hQ"'5];rph
%*/U,F^,/N1Pq"Uq8-IT0?oi=M@TXY!E<_bSXcC*qFC#u9E=4WgWhV3Vcq^ElBr=kHL1@/^4X&U4af3eD3]WI/QU^YUf,JEE9BP3l
%5<SkaMYWE*?PF.aLXKSiiD43ae=B+H>M>VnoJRe>WC/_XP:Br9PB'_2V(/BDk@3Ppl!1=f4ge[A$+7>lKUX[+P8"f`Y]B94^34iJ
%YCha?oCh:t`PmTckpu6L_*=^9GW:lk)%U(P`J3EO&XPh=?*(hM(Jc.mYKBikS>mQ4SW$'C#8o%):G(5t6+q/q1rEFHK8^PtqUDQa
%h-S:j+QL?n4q-Jh0Ra$T:A(1sc,E4$.X%QGA<8dPYi4>N[&&jM`<mSa4Fp1mU\`-3]a9=JV58HH@Q7na7@DKX"4XD]%5ai)@"X1=
%f"/b!X.@$q;?mRO/:<i'?SDl&,*R7ob@U_NRr<ems4b_jUj9>27EOaFH'D9I09^F.YK3QiD'"JP)8.JkP"P.R<3G0&F"6K]jMuZr
%#<O"cnuH<af0dj@I(P_*ak(6DE[Q^*DTn^5P2#oV$,.a=ZF/Dg)#2Z58h.B<8%F4)c_NZ?pgE$`a$)[l`m:I=]mNC<G;:KO]eO/_
%95_'_-hs.C8_n,U_7/Q%o$s5am)]uiH2ckj_$:,c7dt2ji7Go_]31<>$_`W4%l_FlR?H:]TMC*Bi6/GQ-f7K[%BfX@f4@W*LP%c&
%^4NQ1RQO.9ZQ>Ys:4=99r$AW;DJl9@7Ed<1F+0p.4%qba@udAY7VEjW2,@,\*G-A,3EPe0iIcmrLW$7UiRd7S=OZbW:8Do$>aZ>+
%4V&26hj>9A\PX%KhjPRb4:a4Uhj>R4E:C][LFrG(3VYI/E-pVn2\VA4]j+*[Dp3ssP1tB*#p)*]$J%5"/,5R78C^M,(Wl.uR?9>!
%41UIleXbL=O4<An)3U9J9c_!^4A"pB)WqZs?g5.,8``4c7hJhl`VG\.c/UdXE[tF`1TC=Cl;ZaG?^!Eo/>S&6s&_dPFnEi:/JJ0P
%j[X'HdWHFjb&aA",ZjKs=d"sr9JQ%=R?H9F1bnKZfocRBJ(CaGYD[rBDph_G9j6XHC3Pi<i*5dsQ.ou\JT&ble?.:9Hu"2,FrO-i
%Ht/2t6,A<gHl0]'R=\cZ"7KefZ4CZ?$ct#kS$F3Fo4K9*gG0sWS+DMeDp+"XcCC;MDp+)%\G+q<YK-S>'"Ra:RD46jQ$L.A_[f!2
%E&'>KgbU,J.AW864^TZ<pPbGqk8/BBr&GUI-o5292>dTZ[tZg@E),J5:=c6TO:WrSIjW1T^LKak'i,Dh06cDYG>92TRRXeK8>EjI
%k9\#[&F_Y-nq7bsQ]gSP+,FqRI_"&FU/YVgY(=;7$f'.U6uU^@E[EQ&-^X=SWX%M3,#L_,%POG,hD<5+_)a]$><OS$\>2ehKVsN>
%>)\Rc,V2B5I5IS05lrL#bK99a^?=K2C+<j<q62r/ClFS4#QqK8TV+N]>c9k4(s?hC(KsU*Ibm%HGYIFg2eV/D'oaRq_n*l5[l>Gn
%l$Im?p.`JpbZ'd#,U+d+eG$=0/*68@mp^QeCn]F))t;K1D#uK*jq_IccPU3n-Mc/G!fJ!O>%(:PT(t6B<0T/06Jd\!gF%%?J+n])
%M+4B'/$aS+ahIfBDk^.gjn+lY'c3l[D!_;sS51C)"]AiljPgFJ@efb.aO-p(Lk>^.AL3"**V]fU>H%G@d7@.E*l38.f\bUe@>l/T
%1.O`(8:01PjZ^gRArM:)q1OQ)+C0\7'($pWa/eN\Fd6PENKK:/KsRrH.W+@E+K7[A>qN"I4u:\P<n2lTU8b#O(Ya$hU=!mA.G!LT
%>i^'jL3^G5%:,fE)FWanD/&/"/7oW2=QU)Z;d_G-9/[FFnNpuQ"!N4&elh*o_/%_'>JucJ,Z>B%+ed@qTgbL+?nHSi0-oZ-b$bp[
%_ug]-)c;fU:@p6m"nRGH+X;mUg0/<,A$MDuXpG>uBrhD3<3WqLC<Lem?b*aWP`iG7V._DE]*up<$pGs6dUG`k`"3>%5"6DqU,50%
%0U0?h&l9]2Ouuli17ik?e]a0NPc52qK<ABda$b4q+DW/AMnsFq099olqVn`O,AdY":a8R'.NK0['rE<m*-!R:>]H&d/s/IR\]tYF
%ksP'fJN,0@'3R=:UF]hB;I3E>+==H8@9AH7*YcCZ0*UlN3g1Ir:'rfmMBr:3DZK`&fG<ASa;RQu'RAdX[De*NW+![:JU(%MLD089
%-R.[ad58rP6BAKsjX&"/n?e)6WoJB@!n1215\gEb__b-1aU%%?<2%lrj6_t.]9LBgk7n">PpB#E2"2So;-,\,>\6d]CDVF3KBb,f
%?ahH[2rF$A&V+dT,>dl!6NWDA)bgVgHD<3GOuJgCLs4ag:d@R\R1q&pRo(=2F,O2k`('S!$,D9P<)t?^2rDW?7R'h>pWO&]2]<S_
%HCLl7D8+EM&8f/#g^n>:al%\-he7%lODZm9;"@)^6Up2b_rFBfkWM:$d$m]@;37i<&Lqt!3J(saUHp*i_+c6_MV`$2T]hAI$)Z'd
%L'`Ur-I_%>WUbfQPNEgh_8U;AbNZQPKeJ!F%K1IA-macrKCg;>&Eo1BLnHI_BK?\pYn9aR:e:"253?[0&M&6Zl!3.M#-.qlJVN]j
%jc:,>S/k>(#2G.,:*7OH&]m%%k>aYIWB\Gb)ONdr7YX3DU*2<!HIRGJ+`*p^<qXdbbBm6Y%a'cZ4M4<:,S"0D.$,a]6jP9kjCUE8
%/Old""q._?p\EchoQf8KpU*)+YrFp>I;m1Z:57HMU&YoNbCeq(HBt=#k[G\E.9S[DCit!59QM&/gS>Ai,C@MlZEKKId@h*CbIL:R
%;3A,[&*bs>bGdn1WZ$[/:BQFqCl%=4WhRImL<HQ'C^>rs26;;Yg>6UKGH`NL1W6b)4@!mKr(@?ML1]DT6bdLc;:<3NpK!_[qt]`,
%3koQ%;iXB^T1G=`RT=7U''n50Kt:*Yd;(D:T`,4X3COr;D9B*!'=3QEaT+W1BJq$@TLD<o((f$_MUZ6"1f&Nh6WBANWfGS9jFR^q
%!L'H`78kOA-(6.m,PTVcC"W2Sor(p!m\AtP`e$`M1lN+k\$:sIQWpc`fabt:"6LtI=qd8@E+U$3%j=-DYtiqR,R.t?qoT"A$H?Ti
%S"Vi53?+Er,Oc"T8AJ^1A=M(:d0CJfD%a*D6kn&2d!j8MOV^k6Bd[cQ&gN6ZIbJu7WB3k)8&?G(`fs+t5\TnT@#cW$O_B[J+CIG?
%'2,l[10(RNe%\h=1/T6&DO#/SMT]k2cjnAUR'=OU;hJn!/Gt>51=&G'6]\'OcDL.F9^ErG)2]h52R6b[TM`joJ]n`R,:JoD9dfPd
%_]2<c,[7E7?sCp"N*W7<F8)8jT"tQ-S\sR;CY^.\.O$2)5sX[WL1UT$QUh<"/^'GS'-Pt(f(q#7>^*s6Uf/?>=u=?3n>\F#GU!g`
%dHQT!#b/.p0X*,Ff&A/Cpb@RoS('mH"?L&1BoE._#o_OkmfVPo"0mN$\bPGhJo0an(eZh8>fPJ0`*Sd%8I06Ga5"q\$Q,q69Q:-)
%O(-ZJ%1n,^jHrTYa=]*UQ'3XuYad\@o.hm(aXO42>B&kM\@F?3613-ddpR_8_q*JhVL))G%t4ds;nQ4WSSehDU0^k\%D$-1@.$]p
%f`mC/*'?E#N'"%;#lint?=sUgbgSU?84$L;qSe=clcf.*2niA$mc0KT,\j5_GR9^p&:9i_LH[hVbu.FG6Yeqna_A^<K_2q$qF=oo
%<t.$@6-S*$Y0)D/$2I.=i.Wl9H_i]T/8e$O\YpY)V\G4(",C;d;YkfF`j?e*](Z6i-$X,$`R4i9/Ch_XD"JjC=YNi:Bu.T+<q@4Q
%KfqMdr(o'MV`5=^k?J^^deD8S1=6[q9Jb#c``h$_#+lX:iMVTT1BF5C_qd/?-4(hO>Z9maO&(XpI]d5IguT_r*GWc+'qt93YF8`T
%I:_die-g5^FC1sCB_7S&G=X<AUYgLUm'>kkCDW[NK"Ii53o(%90BJZU4t4<eVMu8Vo.HA;Ro*XT4k+m.:V1MMor6Wh\itbSp"(R;
%2\J1gF@3@[.:nO!WRn8\5!-Aff4M7qs8"kHAn'qTDG%&mp]9VJ)NA8[Q/;!,faMruUI=#IHR?jd.3u)%NEOuP6DkIOQFs::CrmgV
%+=Dct5k;'s3oL(to!2fGg^+gG&O.+L`spX4K<5?He4+p)04pdLfgou$AM!CTnrgJ]^j*kYXVLF8>M]D3L_Gl=+QGi(ms#Zo&g-3k
%Q^Hl]H\o8*,BG5',&ea_abiTX:&c&$`CYb&8:rA+@L[\!Br2'g&6JU6^:'#`\i.t`1!H9c&8OQ^CF\R=rId6$<f0n9=r)aQ7NgPc
%'kdi*bL>',/<GlK-(2`Vh`R2IPCA@36HGI5@71tNb]!V-I$Ci[k?&YX]2:JKnr%Iu;`gek*G!$hD50\`U+@I:!=L7pM%i=%=b6YG
%^PM\*iKAUN[/tG^73;^NZ$.c/,_F8RoPq#%(+VCl:EpAb_H/Ul`3c1@$Pt1ql.cGIdm/>rdfZic-92oM6&,H6J68j+d]PY,/Zm*Q
%"N(;?8FnJ'$.&.0#BrR%I+:,P9$[$6C4eT=D0)iVI1#FpZj85.[(-lF$_d)m1kMA,B6$%M=JU7bKOGj6/b#!!L]UUY"oA`J`q.1R
%TnsJ"<]pHrS%A?c^g316Rr]QV!,-eg5"eT?R7U4j/-A!BJLnOiUEL@$\1eN*)Q<eBjJ:rY/L[=FeYIh9ho7RU14R\V)8bSRX8BDm
%7!3/gG"#T&@%l8L*Q26Z=AF,:EO%jai.BBPbZ.5q<u@f#,@N)7.tCU*5>Amq,0-5*X_=j&W^of%l[m:ulf.t6X1caCaS,ZEjTdOK
%NYiq)0hH%2M@5I*;hlMcq(.:N9VTE#9b)Rg64C,N`O=LCZ3]]V:<M_;A.GM>K[B?2Ym;BIQ"CU]d?_%Q(8<hE"hsAc\U/=;a(P3)
%\b2qTn:.O7g-I5.c8t3IYLA:#(62In,,YuCM#n?Q6J<,P+M8.L4prA0LRBIk]l&QEpA"SnY;h>XnV;>g9Y_bL215;!+25Memf2/B
%o]?S`hu)5QIt.4]5CN95n)+*9gY_r-kO8E5h<DNnIXlk;m_A"93rT#TG<c,fa.M4ZIf@Y8rtbqJo`F#uo;BA$bAVn%rrs[U63~>
%AI9_PrivateDataEnd
